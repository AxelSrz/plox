habemvs species Arrgh {
  var number arr[1..10], izq[1..3,1..3], der[1..3,1..3], res[1..3,1..3];

  funk oblivion vamoAOrdenarlo(){
    var number a,b, temp;
    a = 1;
    b = 1;

    while(a<=10-1){
      b = 1;
      while(b<=10-a){
        if(arr[b] > arr[b+1]){
          temp = arr[b];
          arr[b] = arr[b+1];
          arr[b+1] = temp;
        }
        b += 1;
      }
      a += 1;
    }
  }

  funk oblivion vamoAMultiplicarlo(){
    var number a,b,c;
    a = 1;
    b = 1;
    c = 1;
    while(a<=3){
      while(b<=3){
        while(c<=3){
          res[a,c] += (der[a,c]*izq[c,b]);
          c += 1;
        }
        c = 1;
        b +=1;
      }
      b = 1;
      a += 1;
    }
  }

  funk oblivion chief(){
    var number a,b, temp;
    a = 1;
    b = 1;
    while(a<=10){
      say("Ingresa el siguiente numero del arreglo a ordenar");
      hear(arr[a]);
      a+= 1;
    }

    vamoAOrdenarlo();

    say("Arreglo ordenado:");
    say(arr[1]);
    say(arr[2]);
    say(arr[3]);
    say(arr[4]);
    say(arr[5]);
    say(arr[6]);
    say(arr[7]);
    say(arr[8]);
    say(arr[9]);
    say(arr[10]);

    a = 1;
    b = 1;
    while(a<=3){
      b = 1;
      while(b<=3){
        say("Ingresa el siguiente numero de la primera matriz a multiplicar");
        hear(izq[a,b]);
        b += 1;
      }
      a += 1;
    }

    a = 1;
    b = 1;
    while(a<=3){
      b = 1;
      while(b<=3){
        say("Ingresa el siguiente numero de la segunda matriz a multiplicar");
        hear(der[a,b]);
        b += 1;
      }
      a += 1;
    }

    a = 1;
    b = 1;
    while(a<=3){
      while(b<=3){
        res[a,b] = 0;
        b += 1;
      }
      b = 1;
      a += 1;
    }

    vamoAMultiplicarlo();

    a = 1;
    b = 1;

    say("Matriz resultado");
    while(a<=3){
      while(b<=3){
        say(res[a,b]);
        b += 1;
      }
      b = 1;
      a += 1;
    }
  }
}
