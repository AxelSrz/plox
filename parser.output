state 94 contains 1 shift/reduce conflicts
state 101 contains 14 shift/reduce conflicts
state 102 contains 1 shift/reduce conflicts
state 103 contains 1 shift/reduce conflicts
state 104 contains 1 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 106 contains 1 shift/reduce conflicts
state 107 contains 1 shift/reduce conflicts
state 108 contains 1 shift/reduce conflicts
state 109 contains 1 shift/reduce conflicts
state 110 contains 1 shift/reduce conflicts
state 111 contains 1 shift/reduce conflicts
state 112 contains 1 shift/reduce conflicts
state 113 contains 1 shift/reduce conflicts
state 114 contains 1 shift/reduce conflicts
state 210 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: ID
rule 23 next_variable: 
rule 24 next_variable: COMA some_variables
rule 25 type: type_specifier type1
rule 26 type1: 
rule 27 type1: type2
rule 28 type2: SBLEFT expression SBRIGHT type1
rule 29 variable_assignment: ID variable_assignment1 EQUAL expression
rule 30 variable_assignment: ID variable_assignment1 PLUSASSIGN expression
rule 31 variable_assignment: ID variable_assignment1 MINUSASSIGN expression
rule 32 variable_assignment: ID variable_assignment1 MULTASSIGN expression
rule 33 variable_assignment: ID variable_assignment1 DIVASSIGN expression
rule 34 variable_assignment: ID variable_assignment1 ORASSIGN expression
rule 35 variable_assignment: ID variable_assignment1 ANDASSIGN expression
rule 36 variable_assignment: ID variable_assignment1 MODASSIGN expression
rule 37 variable_assignment1: 
rule 38 variable_assignment1: variable_assignment4 variable_assignment5
rule 39 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 40 variable_assignment5: 
rule 41 variable_assignment5: variable_assignment4
rule 42 method_declaration: new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 43 new_function_code: FUNK
rule 44 method_declaration1: 
rule 45 method_declaration1: modifier
rule 46 method_declaration2: ID
rule 47 method_declaration2: CHIEF
rule 48 method_declaration3: 
rule 49 method_declaration3: parameter_list method_declaration3
rule 50 method_declaration4: statement_block
rule 51 method_declaration4: SEMIC
rule 52 type_specifier: LOGIC
rule 53 type_specifier: CHAR
rule 54 type_specifier: NUMBER
rule 55 type_specifier: DECIMAL
rule 56 type_specifier: ID
rule 57 type_specifier: OBLIVION
rule 58 type_specifier: STRING
rule 59 parameter_list: parameter parameter_list1
rule 60 parameter_list1: 
rule 61 parameter_list1: COMA parameter_list
rule 62 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 63 statement_block1: 
rule 64 statement_block1: variable_declaration statement_block1
rule 65 statement_block2: 
rule 66 statement_block2: statement statement_block2
rule 67 reference_expression: NULL
rule 68 reference_expression: ITSELF
rule 69 reference_expression: ID
rule 70 reference_expression: ID SBLEFT expression SBRIGHT
rule 71 reference_expression: non_final_id POINT function_call
rule 72 reference_expression: non_final_id POINT reference_expression5
rule 73 reference_expression: function_call
rule 74 non_final_id: ID
rule 75 function_call: funk_id start_funk reference_expression6 PRIGHT
rule 76 funk_id: ID
rule 77 start_funk: PLEFT
rule 78 reference_expression5: ID
rule 79 reference_expression5: ID POINT reference_expression5
rule 80 reference_expression6: 
rule 81 reference_expression6: arglist
rule 82 parameter: type ID parameter1
rule 83 parameter1: 
rule 84 parameter1: SBLEFT SBRIGHT parameter1
rule 85 statement: variable_assignment SEMIC
rule 86 statement: SAY PLEFT expression PRIGHT SEMIC
rule 87 statement: HEAR PLEFT reference_expression PRIGHT SEMIC
rule 88 statement: unless_statement
rule 89 statement: if_statement
rule 90 statement: do_statement
rule 91 statement: while_statement
rule 92 statement: REPLY expression SEMIC
rule 93 statement: function_call SEMIC
rule 94 statement: non_final_id POINT function_call SEMIC
rule 95 expression: expression SUM expression
rule 96 expression: expression DIV expression
rule 97 expression: expression MOD expression
rule 98 expression: expression PLUS expression
rule 99 expression: expression MINUS expression
rule 100 expression: expression MULT expression
rule 101 expression: expression MTHAN expression
rule 102 expression: expression LTHAN expression
rule 103 expression: expression MEQUAL expression
rule 104 expression: expression LEQUAL expression
rule 105 expression: expression EQUALITY expression
rule 106 expression: expression DIFFERENT expression
rule 107 expression: NOT expression
rule 108 expression: expression AND expression
rule 109 expression: expression OR expression
rule 110 expression: TRUE
rule 111 expression: FALSE
rule 112 expression: PLEFT expression PRIGHT
rule 113 expression: literal_expression
rule 114 expression: reference_expression
rule 115 arglist: generate_arg arglist1
rule 116 generate_arg: expression
rule 117 arglist1: 
rule 118 arglist1: COMA arglist
rule 119 unless_statement: UNLESS expression statement_block unless_statement1
rule 120 unless_statement1: 
rule 121 unless_statement1: ELSE statement_block
rule 122 if_statement: IF push_if_floor validateLogicexp statement_block if_statement1
rule 123 if_statement1: 
rule 124 if_statement1: ELSIF generateElseCode validateLogicexp statement_block if_statement1
rule 125 if_statement1: ELSE generateElseCode statement_block
rule 126 do_statement: DO push_cont_jump statement_block WHILE validateDoWhileExp
rule 127 validateDoWhileExp: expression
rule 128 while_statement: WHILE push_cont_jump validateLogicexp statement_block
rule 129 push_cont_jump: 
rule 130 push_if_floor: 
rule 131 validateLogicexp: expression
rule 132 generateElseCode: 
rule 133 literal_expression: CTED
rule 134 literal_expression: CTEN
rule 135 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (66)
    on right: 
    on left : 
  supreme_plox (67)
    on right: 
    on left : 1
  plox_generation (68)
    on right: 1 3
    on left : 2 3
  type_declaration (69)
    on right: 3
    on left : 4
  class_declaration (70)
    on right: 4
    on left : 5
  code_new_class (71)
    on right: 5
    on left : 6
  code_heirof (72)
    on right: 5
    on left : 7 8
  class_body (73)
    on right: 5
    on left : 9
  class_variable_block (74)
    on right: 9 11
    on left : 10 11
  class_function_block (75)
    on right: 9 13
    on left : 12 13
  variable_declaration (76)
    on right: 11 64
    on left : 16
  method_declaration (77)
    on right: 13
    on left : 42
  modifier (78)
    on right: 18 45
    on left : 14 15
  variable_is_modifiable (79)
    on right: 16
    on left : 19 20
  variable_scope (80)
    on right: 16
    on left : 17 18
  type (81)
    on right: 16 42 82
    on left : 25
  some_variables (82)
    on right: 16 24
    on left : 21
  code_new_variable (83)
    on right: 21
    on left : 22
  next_variable (84)
    on right: 21
    on left : 23 24
  type_specifier (85)
    on right: 25
    on left : 52 53 54 55 56 57 58
  type1 (86)
    on right: 25 28
    on left : 26 27
  type2 (87)
    on right: 27
    on left : 28
  expression (88)
    on right: 28 29 30 31 32 33 34 35 36 39 70 86 92 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 112 116 119 127 131
    on left : 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
  variable_assignment (89)
    on right: 85
    on left : 29 30 31 32 33 34 35 36
  variable_assignment1 (90)
    on right: 29 30 31 32 33 34 35 36
    on left : 37 38
  variable_assignment4 (91)
    on right: 38 41
    on left : 39
  variable_assignment5 (92)
    on right: 38 39
    on left : 40 41
  new_function_code (93)
    on right: 42
    on left : 43
  method_declaration1 (94)
    on right: 42
    on left : 44 45
  method_declaration2 (95)
    on right: 42
    on left : 46 47
  method_declaration3 (96)
    on right: 42 49
    on left : 48 49
  method_declaration4 (97)
    on right: 42
    on left : 50 51
  parameter_list (98)
    on right: 49 61
    on left : 59
  statement_block (99)
    on right: 50 119 121 122 124 125 126 128
    on left : 62
  parameter (100)
    on right: 59
    on left : 82
  parameter_list1 (101)
    on right: 59
    on left : 60 61
  statement_block1 (102)
    on right: 62 64
    on left : 63 64
  statement_block2 (103)
    on right: 62 66
    on left : 65 66
  statement (104)
    on right: 66
    on left : 85 86 87 88 89 90 91 92 93 94
  reference_expression (105)
    on right: 87 114
    on left : 67 68 69 70 71 72 73
  non_final_id (106)
    on right: 71 72 94
    on left : 74
  function_call (107)
    on right: 71 73 93 94
    on left : 75
  reference_expression5 (108)
    on right: 72 79
    on left : 78 79
  funk_id (109)
    on right: 75
    on left : 76
  start_funk (110)
    on right: 75
    on left : 77
  reference_expression6 (111)
    on right: 75
    on left : 80 81
  arglist (112)
    on right: 81 118
    on left : 115
  parameter1 (113)
    on right: 82 84
    on left : 83 84
  unless_statement (114)
    on right: 88
    on left : 119
  if_statement (115)
    on right: 89
    on left : 122
  do_statement (116)
    on right: 90
    on left : 126
  while_statement (117)
    on right: 91
    on left : 128
  literal_expression (118)
    on right: 113
    on left : 133 134 135
  generate_arg (119)
    on right: 115
    on left : 116
  arglist1 (120)
    on right: 115
    on left : 117 118
  unless_statement1 (121)
    on right: 119
    on left : 120 121
  push_if_floor (122)
    on right: 122
    on left : 130
  validateLogicexp (123)
    on right: 122 124 128
    on left : 131
  if_statement1 (124)
    on right: 122 124
    on left : 123 124 125
  generateElseCode (125)
    on right: 124 125
    on left : 132
  push_cont_jump (126)
    on right: 126 128
    on left : 129
  validateDoWhileExp (127)
    on right: 126
    on left : 127

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 71 72 79 94
  NOT (3) 107
  MOD (4) 97
  MULT (5) 100
  DIV (6) 96
  PLUS (7) 98
  MINUS (8) 99
  MTHAN (9) 101
  MEQUAL (10) 103
  LTHAN (11) 102
  LEQUAL (12) 104
  EQUALITY (13) 105
  DIFFERENT (14) 106
  AND (15) 108
  OR (16) 109
  EQUAL (17) 29
  PLUSASSIGN (18) 30
  MINUSASSIGN (19) 31
  MULTASSIGN (20) 32
  DIVASSIGN (21) 33
  ORASSIGN (22) 34
  ANDASSIGN (23) 35
  MODASSIGN (24) 36
  SEMIC (25) 16 51 85 86 87 92 93 94
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 62
  BRIGHT (29) 5 62
  ID (30) 6 8 22 29 30 31 32 33 34 35 36 46 56 69 70 74 76 78 79 82
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 24 61 118
  SBLEFT (37) 28 39 70 84
  SBRIGHT (38) 28 39 70 84
  PLEFT (39) 42 77 86 87 112
  PRIGHT (40) 42 75 86 87 112
  FUNK (41) 43
  CHIEF (42) 47
  LOGIC (43) 52
  CHAR (44) 53
  NUMBER (45) 54
  DECIMAL (46) 55
  OBLIVION (47) 57
  STRING (48) 58
  NULL (49) 67
  ITSELF (50) 68
  SAY (51) 86
  HEAR (52) 87
  REPLY (53) 92
  SUM (54) 95
  TRUE (55) 110
  FALSE (56) 111
  UNLESS (57) 119
  ELSE (58) 121 125
  IF (59) 122
  ELSIF (60) 124
  DO (61) 126
  WHILE (62) 126 128
  CTED (63) 133
  CTEN (64) 134
  CTESTRING (65) 135

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _

  $default      reduce using rule 4 (type_declaration)


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 11

  code_new_class  go to state 10

state 9


  $default      accept


state 10

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 13
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 12

state 11

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 12

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 14


state 13

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 15


state 14

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 16
  class_variable_block  go to state 17
  variable_declaration  go to state 18
  variable_is_modifiable  go to state 19

state 15

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 16

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 22


state 17

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 23
  method_declaration  go to state 24
  new_function_code  go to state 25

state 18

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 18
  class_variable_block  go to state 27
  variable_is_modifiable  go to state 19

state 19

  16) variable_declaration : variable_is_modifiable _ variable_scope type some_variables SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 30
  modifier      go to state 31

state 20

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 21

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 22

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 23

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 24

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 24
  class_function_block  go to state 32
  new_function_code  go to state 25

state 25

  42) method_declaration : new_function_code _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 44 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 26

  43) new_function_code : FUNK _

  $default      reduce using rule 43 (new_function_code)


state 27

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_is_modifiable variable_scope _ type some_variables SEMIC

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type          go to state 35
  type_specifier  go to state 36

state 31

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 32

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 33

  42) method_declaration : new_function_code method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  type          go to state 44

state 34

  45) method_declaration1 : modifier _

  $default      reduce using rule 45 (method_declaration1)


state 35

  16) variable_declaration : variable_is_modifiable variable_scope type _ some_variables SEMIC

  ID            shift, and go to state 47

  some_variables  go to state 45
  code_new_variable  go to state 46

state 36

  25) type : type_specifier _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type1         go to state 48
  type2         go to state 49

state 37

  52) type_specifier : LOGIC _

  $default      reduce using rule 52 (type_specifier)


state 38

  53) type_specifier : CHAR _

  $default      reduce using rule 53 (type_specifier)


state 39

  54) type_specifier : NUMBER _

  $default      reduce using rule 54 (type_specifier)


state 40

  55) type_specifier : DECIMAL _

  $default      reduce using rule 55 (type_specifier)


state 41

  56) type_specifier : ID _

  $default      reduce using rule 56 (type_specifier)


state 42

  57) type_specifier : OBLIVION _

  $default      reduce using rule 57 (type_specifier)


state 43

  58) type_specifier : STRING _

  $default      reduce using rule 58 (type_specifier)


state 44

  42) method_declaration : new_function_code method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 52
  CHIEF         shift, and go to state 53

  method_declaration2  go to state 51

state 45

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables _ SEMIC

  SEMIC         shift, and go to state 54


state 46

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 56
  $default      reduce using rule 23 (next_variable)

  next_variable  go to state 55

state 47

  22) code_new_variable : ID _

  $default      reduce using rule 22 (code_new_variable)


state 48

  25) type : type_specifier type1 _

  $default      reduce using rule 25 (type)


state 49

  27) type1 : type2 _

  $default      reduce using rule 27 (type1)


state 50

  28) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 57
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 51

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 73


state 52

  46) method_declaration2 : ID _

  $default      reduce using rule 46 (method_declaration2)


state 53

  47) method_declaration2 : CHIEF _

  $default      reduce using rule 47 (method_declaration2)


state 54

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 55

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 56

  24) next_variable : COMA _ some_variables

  ID            shift, and go to state 47

  code_new_variable  go to state 46
  some_variables  go to state 74

state 57

  28) type2 : SBLEFT expression _ SBRIGHT type1
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SBRIGHT       shift, and go to state 75
  SUM           shift, and go to state 76


state 58

  67) reference_expression : NULL _

  $default      reduce using rule 67 (reference_expression)


state 59

  68) reference_expression : ITSELF _

  $default      reduce using rule 68 (reference_expression)


state 60

  69) reference_expression : ID _
  70) reference_expression : ID _ SBLEFT expression SBRIGHT
  74) non_final_id : ID _
  76) funk_id : ID _

  SBLEFT        shift, and go to state 90
  POINT         reduce using rule 74 (non_final_id)
  PLEFT         reduce using rule 76 (funk_id)
  $default      reduce using rule 69 (reference_expression)


state 61

  71) reference_expression : non_final_id _ POINT function_call
  72) reference_expression : non_final_id _ POINT reference_expression5

  POINT         shift, and go to state 91


state 62

  73) reference_expression : function_call _

  $default      reduce using rule 73 (reference_expression)


state 63

  75) function_call : funk_id _ start_funk reference_expression6 PRIGHT

  PLEFT         shift, and go to state 93

  start_funk    go to state 92

state 64

 107) expression : NOT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 94
  literal_expression  go to state 68
  reference_expression  go to state 69

state 65

 110) expression : TRUE _

  $default      reduce using rule 110 (expression)


state 66

 111) expression : FALSE _

  $default      reduce using rule 111 (expression)


state 67

 112) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 95
  literal_expression  go to state 68
  reference_expression  go to state 69

state 68

 113) expression : literal_expression _

  $default      reduce using rule 113 (expression)


state 69

 114) expression : reference_expression _

  $default      reduce using rule 114 (expression)


state 70

 133) literal_expression : CTED _

  $default      reduce using rule 133 (literal_expression)


state 71

 134) literal_expression : CTEN _

  $default      reduce using rule 134 (literal_expression)


state 72

 135) literal_expression : CTESTRING _

  $default      reduce using rule 135 (literal_expression)


state 73

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  method_declaration3  go to state 96
  parameter_list  go to state 97
  parameter     go to state 98
  type          go to state 99

state 74

  24) next_variable : COMA some_variables _

  $default      reduce using rule 24 (next_variable)


state 75

  28) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type2         go to state 49
  type1         go to state 100

state 76

  95) expression : expression SUM _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 101
  literal_expression  go to state 68
  reference_expression  go to state 69

state 77

  96) expression : expression DIV _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 102
  literal_expression  go to state 68
  reference_expression  go to state 69

state 78

  97) expression : expression MOD _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 103
  literal_expression  go to state 68
  reference_expression  go to state 69

state 79

  98) expression : expression PLUS _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 104
  literal_expression  go to state 68
  reference_expression  go to state 69

state 80

  99) expression : expression MINUS _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 105
  literal_expression  go to state 68
  reference_expression  go to state 69

state 81

 100) expression : expression MULT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 106
  literal_expression  go to state 68
  reference_expression  go to state 69

state 82

 101) expression : expression MTHAN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 107
  literal_expression  go to state 68
  reference_expression  go to state 69

state 83

 102) expression : expression LTHAN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 108
  literal_expression  go to state 68
  reference_expression  go to state 69

state 84

 103) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 109
  literal_expression  go to state 68
  reference_expression  go to state 69

state 85

 104) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 110
  literal_expression  go to state 68
  reference_expression  go to state 69

state 86

 105) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 111
  literal_expression  go to state 68
  reference_expression  go to state 69

state 87

 106) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 112
  literal_expression  go to state 68
  reference_expression  go to state 69

state 88

 108) expression : expression AND _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 113
  literal_expression  go to state 68
  reference_expression  go to state 69

state 89

 109) expression : expression OR _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 114
  literal_expression  go to state 68
  reference_expression  go to state 69

state 90

  70) reference_expression : ID SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 115
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 91

  71) reference_expression : non_final_id POINT _ function_call
  72) reference_expression : non_final_id POINT _ reference_expression5

  ID            shift, and go to state 118

  function_call  go to state 116
  reference_expression5  go to state 117
  funk_id       go to state 63

state 92

  75) function_call : funk_id start_funk _ reference_expression6 PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72
  $default      reduce using rule 80 (reference_expression6)

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  reference_expression6  go to state 119
  arglist       go to state 120
  expression    go to state 121
  literal_expression  go to state 68
  reference_expression  go to state 69
  generate_arg  go to state 122

state 93

  77) start_funk : PLEFT _

  $default      reduce using rule 77 (start_funk)


state 94

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 107) expression : NOT expression _
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  SUM           shift, and go to state 76
  SUM           [reduce using rule 107 (expression)]
  $default      reduce using rule 107 (expression)


state 95

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression
 112) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  PRIGHT        shift, and go to state 123
  SUM           shift, and go to state 76


state 96

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 124


state 97

  49) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  parameter_list  go to state 97
  method_declaration3  go to state 125
  parameter     go to state 98
  type          go to state 99

state 98

  59) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 127
  $default      reduce using rule 60 (parameter_list1)

  parameter_list1  go to state 126

state 99

  82) parameter : type _ ID parameter1

  ID            shift, and go to state 128


state 100

  28) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 28 (type2)


state 101

  95) expression : expression _ SUM expression
  95) expression : expression SUM expression _
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MOD           [reduce using rule 95 (expression)]
  MULT          shift, and go to state 81
  MULT          [reduce using rule 95 (expression)]
  DIV           shift, and go to state 77
  DIV           [reduce using rule 95 (expression)]
  PLUS          shift, and go to state 79
  PLUS          [reduce using rule 95 (expression)]
  MINUS         shift, and go to state 80
  MINUS         [reduce using rule 95 (expression)]
  MTHAN         shift, and go to state 82
  MTHAN         [reduce using rule 95 (expression)]
  MEQUAL        shift, and go to state 84
  MEQUAL        [reduce using rule 95 (expression)]
  LTHAN         shift, and go to state 83
  LTHAN         [reduce using rule 95 (expression)]
  LEQUAL        shift, and go to state 85
  LEQUAL        [reduce using rule 95 (expression)]
  EQUALITY      shift, and go to state 86
  EQUALITY      [reduce using rule 95 (expression)]
  DIFFERENT     shift, and go to state 87
  DIFFERENT     [reduce using rule 95 (expression)]
  AND           shift, and go to state 88
  AND           [reduce using rule 95 (expression)]
  OR            shift, and go to state 89
  OR            [reduce using rule 95 (expression)]
  SUM           shift, and go to state 76
  SUM           [reduce using rule 95 (expression)]
  $default      reduce using rule 95 (expression)


state 102

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  96) expression : expression DIV expression _
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  SUM           shift, and go to state 76
  SUM           [reduce using rule 96 (expression)]
  $default      reduce using rule 96 (expression)


state 103

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  97) expression : expression MOD expression _
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  SUM           shift, and go to state 76
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 104

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  98) expression : expression PLUS expression _
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  SUM           shift, and go to state 76
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 105

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
  99) expression : expression MINUS expression _
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  SUM           shift, and go to state 76
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 106

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 100) expression : expression MULT expression _
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  SUM           shift, and go to state 76
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 107

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 101) expression : expression MTHAN expression _
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 108

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 102) expression : expression LTHAN expression _
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 109

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 103) expression : expression MEQUAL expression _
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 110

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 104) expression : expression LEQUAL expression _
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)


state 111

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 105) expression : expression EQUALITY expression _
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 105 (expression)]
  $default      reduce using rule 105 (expression)


state 112

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 106) expression : expression DIFFERENT expression _
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)


state 113

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 108) expression : expression AND expression _
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  SUM           shift, and go to state 76
  SUM           [reduce using rule 108 (expression)]
  $default      reduce using rule 108 (expression)


state 114

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression
 109) expression : expression OR expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  SUM           shift, and go to state 76
  SUM           [reduce using rule 109 (expression)]
  $default      reduce using rule 109 (expression)


state 115

  70) reference_expression : ID SBLEFT expression _ SBRIGHT
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SBRIGHT       shift, and go to state 129
  SUM           shift, and go to state 76


state 116

  71) reference_expression : non_final_id POINT function_call _

  $default      reduce using rule 71 (reference_expression)


state 117

  72) reference_expression : non_final_id POINT reference_expression5 _

  $default      reduce using rule 72 (reference_expression)


state 118

  76) funk_id : ID _
  78) reference_expression5 : ID _
  79) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 130
  PLEFT         reduce using rule 76 (funk_id)
  $default      reduce using rule 78 (reference_expression5)


state 119

  75) function_call : funk_id start_funk reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 131


state 120

  81) reference_expression6 : arglist _

  $default      reduce using rule 81 (reference_expression6)


state 121

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression
 116) generate_arg : expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 116 (generate_arg)


state 122

 115) arglist : generate_arg _ arglist1

  COMA          shift, and go to state 133
  $default      reduce using rule 117 (arglist1)

  arglist1      go to state 132

state 123

 112) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 112 (expression)


state 124

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 136
  BLEFT         shift, and go to state 137

  method_declaration4  go to state 134
  statement_block  go to state 135

state 125

  49) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 49 (method_declaration3)


state 126

  59) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 59 (parameter_list)


state 127

  61) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  parameter     go to state 98
  parameter_list  go to state 138
  type          go to state 99

state 128

  82) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 140
  $default      reduce using rule 83 (parameter1)

  parameter1    go to state 139

state 129

  70) reference_expression : ID SBLEFT expression SBRIGHT _

  $default      reduce using rule 70 (reference_expression)


state 130

  79) reference_expression5 : ID POINT _ reference_expression5

  ID            shift, and go to state 141

  reference_expression5  go to state 142

state 131

  75) function_call : funk_id start_funk reference_expression6 PRIGHT _

  $default      reduce using rule 75 (function_call)


state 132

 115) arglist : generate_arg arglist1 _

  $default      reduce using rule 115 (arglist)


state 133

 118) arglist1 : COMA _ arglist

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 121
  literal_expression  go to state 68
  reference_expression  go to state 69
  generate_arg  go to state 122
  arglist       go to state 143

state 134

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 42 (method_declaration)


state 135

  50) method_declaration4 : statement_block _

  $default      reduce using rule 50 (method_declaration4)


state 136

  51) method_declaration4 : SEMIC _

  $default      reduce using rule 51 (method_declaration4)


state 137

  62) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 63 (statement_block1)

  variable_is_modifiable  go to state 19
  statement_block1  go to state 144
  variable_declaration  go to state 145

state 138

  61) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 61 (parameter_list1)


state 139

  82) parameter : type ID parameter1 _

  $default      reduce using rule 82 (parameter)


state 140

  84) parameter1 : SBLEFT _ SBRIGHT parameter1

  SBRIGHT       shift, and go to state 146


state 141

  78) reference_expression5 : ID _
  79) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 130
  $default      reduce using rule 78 (reference_expression5)


state 142

  79) reference_expression5 : ID POINT reference_expression5 _

  $default      reduce using rule 79 (reference_expression5)


state 143

 118) arglist1 : COMA arglist _

  $default      reduce using rule 118 (arglist1)


state 144

  62) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  ID            shift, and go to state 147
  SAY           shift, and go to state 151
  HEAR          shift, and go to state 152
  REPLY         shift, and go to state 157
  UNLESS        shift, and go to state 160
  IF            shift, and go to state 161
  DO            shift, and go to state 162
  WHILE         shift, and go to state 163
  $default      reduce using rule 65 (statement_block2)

  statement_block2  go to state 148
  statement     go to state 149
  funk_id       go to state 63
  variable_assignment  go to state 150
  unless_statement  go to state 153
  if_statement  go to state 154
  do_statement  go to state 155
  while_statement  go to state 156
  function_call  go to state 158
  non_final_id  go to state 159

state 145

  64) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 63 (statement_block1)

  variable_is_modifiable  go to state 19
  variable_declaration  go to state 145
  statement_block1  go to state 164

state 146

  84) parameter1 : SBLEFT SBRIGHT _ parameter1

  SBLEFT        shift, and go to state 140
  $default      reduce using rule 83 (parameter1)

  parameter1    go to state 165

state 147

  29) variable_assignment : ID _ variable_assignment1 EQUAL expression
  30) variable_assignment : ID _ variable_assignment1 PLUSASSIGN expression
  31) variable_assignment : ID _ variable_assignment1 MINUSASSIGN expression
  32) variable_assignment : ID _ variable_assignment1 MULTASSIGN expression
  33) variable_assignment : ID _ variable_assignment1 DIVASSIGN expression
  34) variable_assignment : ID _ variable_assignment1 ORASSIGN expression
  35) variable_assignment : ID _ variable_assignment1 ANDASSIGN expression
  36) variable_assignment : ID _ variable_assignment1 MODASSIGN expression
  74) non_final_id : ID _
  76) funk_id : ID _

  SBLEFT        shift, and go to state 168
  POINT         reduce using rule 74 (non_final_id)
  PLEFT         reduce using rule 76 (funk_id)
  $default      reduce using rule 37 (variable_assignment1)

  variable_assignment1  go to state 166
  variable_assignment4  go to state 167

state 148

  62) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 169


state 149

  66) statement_block2 : statement _ statement_block2

  ID            shift, and go to state 147
  SAY           shift, and go to state 151
  HEAR          shift, and go to state 152
  REPLY         shift, and go to state 157
  UNLESS        shift, and go to state 160
  IF            shift, and go to state 161
  DO            shift, and go to state 162
  WHILE         shift, and go to state 163
  $default      reduce using rule 65 (statement_block2)

  statement     go to state 149
  statement_block2  go to state 170
  funk_id       go to state 63
  variable_assignment  go to state 150
  unless_statement  go to state 153
  if_statement  go to state 154
  do_statement  go to state 155
  while_statement  go to state 156
  function_call  go to state 158
  non_final_id  go to state 159

state 150

  85) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 171


state 151

  86) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 172


state 152

  87) statement : HEAR _ PLEFT reference_expression PRIGHT SEMIC

  PLEFT         shift, and go to state 173


state 153

  88) statement : unless_statement _

  $default      reduce using rule 88 (statement)


state 154

  89) statement : if_statement _

  $default      reduce using rule 89 (statement)


state 155

  90) statement : do_statement _

  $default      reduce using rule 90 (statement)


state 156

  91) statement : while_statement _

  $default      reduce using rule 91 (statement)


state 157

  92) statement : REPLY _ expression SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 174
  literal_expression  go to state 68
  reference_expression  go to state 69

state 158

  93) statement : function_call _ SEMIC

  SEMIC         shift, and go to state 175


state 159

  94) statement : non_final_id _ POINT function_call SEMIC

  POINT         shift, and go to state 176


state 160

 119) unless_statement : UNLESS _ expression statement_block unless_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 177
  literal_expression  go to state 68
  reference_expression  go to state 69

state 161

 122) if_statement : IF _ push_if_floor validateLogicexp statement_block if_statement1

  $default      reduce using rule 130 (push_if_floor)

  push_if_floor  go to state 178

state 162

 126) do_statement : DO _ push_cont_jump statement_block WHILE validateDoWhileExp

  $default      reduce using rule 129 (push_cont_jump)

  push_cont_jump  go to state 179

state 163

 128) while_statement : WHILE _ push_cont_jump validateLogicexp statement_block

  $default      reduce using rule 129 (push_cont_jump)

  push_cont_jump  go to state 180

state 164

  64) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 64 (statement_block1)


state 165

  84) parameter1 : SBLEFT SBRIGHT parameter1 _

  $default      reduce using rule 84 (parameter1)


state 166

  29) variable_assignment : ID variable_assignment1 _ EQUAL expression
  30) variable_assignment : ID variable_assignment1 _ PLUSASSIGN expression
  31) variable_assignment : ID variable_assignment1 _ MINUSASSIGN expression
  32) variable_assignment : ID variable_assignment1 _ MULTASSIGN expression
  33) variable_assignment : ID variable_assignment1 _ DIVASSIGN expression
  34) variable_assignment : ID variable_assignment1 _ ORASSIGN expression
  35) variable_assignment : ID variable_assignment1 _ ANDASSIGN expression
  36) variable_assignment : ID variable_assignment1 _ MODASSIGN expression

  EQUAL         shift, and go to state 181
  PLUSASSIGN    shift, and go to state 182
  MINUSASSIGN   shift, and go to state 183
  MULTASSIGN    shift, and go to state 184
  DIVASSIGN     shift, and go to state 185
  ORASSIGN      shift, and go to state 186
  ANDASSIGN     shift, and go to state 187
  MODASSIGN     shift, and go to state 188


state 167

  38) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 168
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 189
  variable_assignment4  go to state 190

state 168

  39) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 191
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 169

  62) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 62 (statement_block)


state 170

  66) statement_block2 : statement statement_block2 _

  $default      reduce using rule 66 (statement_block2)


state 171

  85) statement : variable_assignment SEMIC _

  $default      reduce using rule 85 (statement)


state 172

  86) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 192
  literal_expression  go to state 68
  reference_expression  go to state 69

state 173

  87) statement : HEAR PLEFT _ reference_expression PRIGHT SEMIC

  ID            shift, and go to state 60
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  reference_expression  go to state 193

state 174

  92) statement : REPLY expression _ SEMIC
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SEMIC         shift, and go to state 194
  SUM           shift, and go to state 76


state 175

  93) statement : function_call SEMIC _

  $default      reduce using rule 93 (statement)


state 176

  94) statement : non_final_id POINT _ function_call SEMIC

  ID            shift, and go to state 195

  funk_id       go to state 63
  function_call  go to state 196

state 177

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression
 119) unless_statement : UNLESS expression _ statement_block unless_statement1

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  BLEFT         shift, and go to state 137
  SUM           shift, and go to state 76

  statement_block  go to state 197

state 178

 122) if_statement : IF push_if_floor _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 198
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateLogicexp  go to state 199

state 179

 126) do_statement : DO push_cont_jump _ statement_block WHILE validateDoWhileExp

  BLEFT         shift, and go to state 137

  statement_block  go to state 200

state 180

 128) while_statement : WHILE push_cont_jump _ validateLogicexp statement_block

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 198
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateLogicexp  go to state 201

state 181

  29) variable_assignment : ID variable_assignment1 EQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 202
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 182

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 203
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 183

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 204
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 184

  32) variable_assignment : ID variable_assignment1 MULTASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 205
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 185

  33) variable_assignment : ID variable_assignment1 DIVASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 206
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 186

  34) variable_assignment : ID variable_assignment1 ORASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 207
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 187

  35) variable_assignment : ID variable_assignment1 ANDASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 208
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 188

  36) variable_assignment : ID variable_assignment1 MODASSIGN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 209
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 189

  38) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 38 (variable_assignment1)


state 190

  41) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 41 (variable_assignment5)


state 191

  39) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SBRIGHT       shift, and go to state 210
  SUM           shift, and go to state 76


state 192

  86) statement : SAY PLEFT expression _ PRIGHT SEMIC
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  PRIGHT        shift, and go to state 211
  SUM           shift, and go to state 76


state 193

  87) statement : HEAR PLEFT reference_expression _ PRIGHT SEMIC

  PRIGHT        shift, and go to state 212


state 194

  92) statement : REPLY expression SEMIC _

  $default      reduce using rule 92 (statement)


state 195

  76) funk_id : ID _

  $default      reduce using rule 76 (funk_id)


state 196

  94) statement : non_final_id POINT function_call _ SEMIC

  SEMIC         shift, and go to state 213


state 197

 119) unless_statement : UNLESS expression statement_block _ unless_statement1

  ELSE          shift, and go to state 215
  $default      reduce using rule 120 (unless_statement1)

  unless_statement1  go to state 214

state 198

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression
 131) validateLogicexp : expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 131 (validateLogicexp)


state 199

 122) if_statement : IF push_if_floor validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 137

  statement_block  go to state 216

state 200

 126) do_statement : DO push_cont_jump statement_block _ WHILE validateDoWhileExp

  WHILE         shift, and go to state 217


state 201

 128) while_statement : WHILE push_cont_jump validateLogicexp _ statement_block

  BLEFT         shift, and go to state 137

  statement_block  go to state 218

state 202

  29) variable_assignment : ID variable_assignment1 EQUAL expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 29 (variable_assignment)


state 203

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 30 (variable_assignment)


state 204

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 31 (variable_assignment)


state 205

  32) variable_assignment : ID variable_assignment1 MULTASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 32 (variable_assignment)


state 206

  33) variable_assignment : ID variable_assignment1 DIVASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 33 (variable_assignment)


state 207

  34) variable_assignment : ID variable_assignment1 ORASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 34 (variable_assignment)


state 208

  35) variable_assignment : ID variable_assignment1 ANDASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 35 (variable_assignment)


state 209

  36) variable_assignment : ID variable_assignment1 MODASSIGN expression _
  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 36 (variable_assignment)


state 210

  39) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 168
  SBLEFT        [reduce using rule 40 (variable_assignment5)]
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 219
  variable_assignment4  go to state 190

state 211

  86) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 220


state 212

  87) statement : HEAR PLEFT reference_expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 221


state 213

  94) statement : non_final_id POINT function_call SEMIC _

  $default      reduce using rule 94 (statement)


state 214

 119) unless_statement : UNLESS expression statement_block unless_statement1 _

  $default      reduce using rule 119 (unless_statement)


state 215

 121) unless_statement1 : ELSE _ statement_block

  BLEFT         shift, and go to state 137

  statement_block  go to state 222

state 216

 122) if_statement : IF push_if_floor validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 225
  ELSIF         shift, and go to state 224
  $default      reduce using rule 123 (if_statement1)

  if_statement1  go to state 223

state 217

 126) do_statement : DO push_cont_jump statement_block WHILE _ validateDoWhileExp

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 226
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateDoWhileExp  go to state 227

state 218

 128) while_statement : WHILE push_cont_jump validateLogicexp statement_block _

  $default      reduce using rule 128 (while_statement)


state 219

  39) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 39 (variable_assignment4)


state 220

  86) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 86 (statement)


state 221

  87) statement : HEAR PLEFT reference_expression PRIGHT SEMIC _

  $default      reduce using rule 87 (statement)


state 222

 121) unless_statement1 : ELSE statement_block _

  $default      reduce using rule 121 (unless_statement1)


state 223

 122) if_statement : IF push_if_floor validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 122 (if_statement)


state 224

 124) if_statement1 : ELSIF _ generateElseCode validateLogicexp statement_block if_statement1

  $default      reduce using rule 132 (generateElseCode)

  generateElseCode  go to state 228

state 225

 125) if_statement1 : ELSE _ generateElseCode statement_block

  $default      reduce using rule 132 (generateElseCode)

  generateElseCode  go to state 229

state 226

  95) expression : expression _ SUM expression
  96) expression : expression _ DIV expression
  97) expression : expression _ MOD expression
  98) expression : expression _ PLUS expression
  99) expression : expression _ MINUS expression
 100) expression : expression _ MULT expression
 101) expression : expression _ MTHAN expression
 102) expression : expression _ LTHAN expression
 103) expression : expression _ MEQUAL expression
 104) expression : expression _ LEQUAL expression
 105) expression : expression _ EQUALITY expression
 106) expression : expression _ DIFFERENT expression
 108) expression : expression _ AND expression
 109) expression : expression _ OR expression
 127) validateDoWhileExp : expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 127 (validateDoWhileExp)


state 227

 126) do_statement : DO push_cont_jump statement_block WHILE validateDoWhileExp _

  $default      reduce using rule 126 (do_statement)


state 228

 124) if_statement1 : ELSIF generateElseCode _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 198
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateLogicexp  go to state 230

state 229

 125) if_statement1 : ELSE generateElseCode _ statement_block

  BLEFT         shift, and go to state 137

  statement_block  go to state 231

state 230

 124) if_statement1 : ELSIF generateElseCode validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 137

  statement_block  go to state 232

state 231

 125) if_statement1 : ELSE generateElseCode statement_block _

  $default      reduce using rule 125 (if_statement1)


state 232

 124) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 225
  ELSIF         shift, and go to state 224
  $default      reduce using rule 123 (if_statement1)

  if_statement1  go to state 233

state 233

 124) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 124 (if_statement1)

