state 90 contains 1 shift/reduce conflicts
state 97 contains 14 shift/reduce conflicts
state 98 contains 1 shift/reduce conflicts
state 99 contains 1 shift/reduce conflicts
state 100 contains 1 shift/reduce conflicts
state 101 contains 1 shift/reduce conflicts
state 102 contains 1 shift/reduce conflicts
state 103 contains 1 shift/reduce conflicts
state 104 contains 1 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 106 contains 1 shift/reduce conflicts
state 107 contains 1 shift/reduce conflicts
state 108 contains 1 shift/reduce conflicts
state 109 contains 1 shift/reduce conflicts
state 110 contains 1 shift/reduce conflicts
state 202 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: ID
rule 23 next_variable: 
rule 24 next_variable: COMA some_variables
rule 25 type: type_specifier type1
rule 26 type1: 
rule 27 type1: type2
rule 28 type2: SBLEFT expression SBRIGHT type1
rule 29 variable_assignment: ID variable_assignment1 EQUAL variable_value
rule 30 variable_assignment: ID variable_assignment1 PLUSASSIGN variable_value
rule 31 variable_assignment: ID variable_assignment1 MINUSASSIGN variable_value
rule 32 variable_assignment: ID variable_assignment1 MULTASSIGN variable_value
rule 33 variable_assignment: ID variable_assignment1 DIVASSIGN variable_value
rule 34 variable_assignment: ID variable_assignment1 ORASSIGN variable_value
rule 35 variable_assignment: ID variable_assignment1 ANDASSIGN variable_value
rule 36 variable_assignment: ID variable_assignment1 MODASSIGN variable_value
rule 37 variable_assignment1: 
rule 38 variable_assignment1: variable_assignment4 variable_assignment5
rule 39 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 40 variable_assignment5: 
rule 41 variable_assignment5: variable_assignment4
rule 42 method_declaration: new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 43 new_function_code: FUNK
rule 44 method_declaration1: 
rule 45 method_declaration1: modifier
rule 46 method_declaration2: ID
rule 47 method_declaration2: CHIEF
rule 48 method_declaration3: 
rule 49 method_declaration3: parameter_list method_declaration3
rule 50 method_declaration4: statement_block
rule 51 method_declaration4: SEMIC
rule 52 type_specifier: LOGIC
rule 53 type_specifier: CHAR
rule 54 type_specifier: NUMBER
rule 55 type_specifier: DECIMAL
rule 56 type_specifier: ID
rule 57 type_specifier: OBLIVION
rule 58 type_specifier: STRING
rule 59 variable_value: expression
rule 60 variable_value: HEAR PLEFT PRIGHT
rule 61 parameter_list: parameter parameter_list1
rule 62 parameter_list1: 
rule 63 parameter_list1: COMA parameter_list
rule 64 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 65 statement_block1: 
rule 66 statement_block1: variable_declaration statement_block1
rule 67 statement_block2: 
rule 68 statement_block2: statement statement_block2
rule 69 reference_expression: NULL
rule 70 reference_expression: ITSELF
rule 71 reference_expression: ID
rule 72 reference_expression: ID SBLEFT expression SBRIGHT
rule 73 reference_expression: non_final_id POINT function_call
rule 74 reference_expression: non_final_id POINT reference_expression5
rule 75 non_final_id: ID
rule 76 function_call: funk_id start_funk reference_expression6 PRIGHT
rule 77 funk_id: ID
rule 78 start_funk: PLEFT
rule 79 reference_expression5: ID
rule 80 reference_expression5: ID POINT reference_expression5
rule 81 reference_expression6: 
rule 82 reference_expression6: arglist
rule 83 parameter: type ID parameter1
rule 84 parameter1: 
rule 85 parameter1: SBLEFT SBRIGHT parameter1
rule 86 statement: variable_assignment SEMIC
rule 87 statement: SAY PLEFT expression PRIGHT SEMIC
rule 88 statement: unless_statement
rule 89 statement: if_statement
rule 90 statement: do_statement
rule 91 statement: while_statement
rule 92 statement: REPLY expression SEMIC
rule 93 expression: expression SUM expression
rule 94 expression: expression DIV expression
rule 95 expression: expression MOD expression
rule 96 expression: expression PLUS expression
rule 97 expression: expression MINUS expression
rule 98 expression: expression MULT expression
rule 99 expression: expression MTHAN expression
rule 100 expression: expression LTHAN expression
rule 101 expression: expression MEQUAL expression
rule 102 expression: expression LEQUAL expression
rule 103 expression: expression EQUALITY expression
rule 104 expression: expression DIFFERENT expression
rule 105 expression: NOT expression
rule 106 expression: expression AND expression
rule 107 expression: expression OR expression
rule 108 expression: TRUE
rule 109 expression: FALSE
rule 110 expression: PLEFT expression PRIGHT
rule 111 expression: literal_expression
rule 112 expression: reference_expression
rule 113 arglist: generate_arg arglist1
rule 114 generate_arg: expression
rule 115 arglist1: 
rule 116 arglist1: COMA arglist
rule 117 unless_statement: UNLESS expression statement_block unless_statement1
rule 118 unless_statement1: 
rule 119 unless_statement1: ELSE statement_block
rule 120 if_statement: IF push_if_floor validateLogicexp statement_block if_statement1
rule 121 if_statement1: 
rule 122 if_statement1: ELSIF generateElseCode validateLogicexp statement_block if_statement1
rule 123 if_statement1: ELSE generateElseCode statement_block
rule 124 do_statement: DO push_cont_jump statement_block WHILE validateDoWhileExp
rule 125 validateDoWhileExp: expression
rule 126 while_statement: WHILE push_cont_jump validateLogicexp statement_block
rule 127 push_cont_jump: 
rule 128 push_if_floor: 
rule 129 validateLogicexp: expression
rule 130 generateElseCode: 
rule 131 literal_expression: CTED
rule 132 literal_expression: CTEN
rule 133 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (66)
    on right: 
    on left : 
  supreme_plox (67)
    on right: 
    on left : 1
  plox_generation (68)
    on right: 1 3
    on left : 2 3
  type_declaration (69)
    on right: 3
    on left : 4
  class_declaration (70)
    on right: 4
    on left : 5
  code_new_class (71)
    on right: 5
    on left : 6
  code_heirof (72)
    on right: 5
    on left : 7 8
  class_body (73)
    on right: 5
    on left : 9
  class_variable_block (74)
    on right: 9 11
    on left : 10 11
  class_function_block (75)
    on right: 9 13
    on left : 12 13
  variable_declaration (76)
    on right: 11 66
    on left : 16
  method_declaration (77)
    on right: 13
    on left : 42
  modifier (78)
    on right: 18 45
    on left : 14 15
  variable_is_modifiable (79)
    on right: 16
    on left : 19 20
  variable_scope (80)
    on right: 16
    on left : 17 18
  type (81)
    on right: 16 42 83
    on left : 25
  some_variables (82)
    on right: 16 24
    on left : 21
  code_new_variable (83)
    on right: 21
    on left : 22
  next_variable (84)
    on right: 21
    on left : 23 24
  type_specifier (85)
    on right: 25
    on left : 52 53 54 55 56 57 58
  type1 (86)
    on right: 25 28
    on left : 26 27
  type2 (87)
    on right: 27
    on left : 28
  expression (88)
    on right: 28 39 59 72 87 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 110 114 117 125 129
    on left : 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
  variable_assignment (89)
    on right: 86
    on left : 29 30 31 32 33 34 35 36
  variable_assignment1 (90)
    on right: 29 30 31 32 33 34 35 36
    on left : 37 38
  variable_value (91)
    on right: 29 30 31 32 33 34 35 36
    on left : 59 60
  variable_assignment4 (92)
    on right: 38 41
    on left : 39
  variable_assignment5 (93)
    on right: 38 39
    on left : 40 41
  new_function_code (94)
    on right: 42
    on left : 43
  method_declaration1 (95)
    on right: 42
    on left : 44 45
  method_declaration2 (96)
    on right: 42
    on left : 46 47
  method_declaration3 (97)
    on right: 42 49
    on left : 48 49
  method_declaration4 (98)
    on right: 42
    on left : 50 51
  parameter_list (99)
    on right: 49 63
    on left : 61
  statement_block (100)
    on right: 50 117 119 120 122 123 124 126
    on left : 64
  parameter (101)
    on right: 61
    on left : 83
  parameter_list1 (102)
    on right: 61
    on left : 62 63
  statement_block1 (103)
    on right: 64 66
    on left : 65 66
  statement_block2 (104)
    on right: 64 68
    on left : 67 68
  statement (105)
    on right: 68
    on left : 86 87 88 89 90 91 92
  reference_expression (106)
    on right: 112
    on left : 69 70 71 72 73 74
  non_final_id (107)
    on right: 73 74
    on left : 75
  function_call (108)
    on right: 73
    on left : 76
  reference_expression5 (109)
    on right: 74 80
    on left : 79 80
  funk_id (110)
    on right: 76
    on left : 77
  start_funk (111)
    on right: 76
    on left : 78
  reference_expression6 (112)
    on right: 76
    on left : 81 82
  arglist (113)
    on right: 82 116
    on left : 113
  parameter1 (114)
    on right: 83 85
    on left : 84 85
  unless_statement (115)
    on right: 88
    on left : 117
  if_statement (116)
    on right: 89
    on left : 120
  do_statement (117)
    on right: 90
    on left : 124
  while_statement (118)
    on right: 91
    on left : 126
  literal_expression (119)
    on right: 111
    on left : 131 132 133
  generate_arg (120)
    on right: 113
    on left : 114
  arglist1 (121)
    on right: 113
    on left : 115 116
  unless_statement1 (122)
    on right: 117
    on left : 118 119
  push_if_floor (123)
    on right: 120
    on left : 128
  validateLogicexp (124)
    on right: 120 122 126
    on left : 129
  if_statement1 (125)
    on right: 120 122
    on left : 121 122 123
  generateElseCode (126)
    on right: 122 123
    on left : 130
  push_cont_jump (127)
    on right: 124 126
    on left : 127
  validateDoWhileExp (128)
    on right: 124
    on left : 125

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 73 74 80
  NOT (3) 105
  MOD (4) 95
  MULT (5) 98
  DIV (6) 94
  PLUS (7) 96
  MINUS (8) 97
  MTHAN (9) 99
  MEQUAL (10) 101
  LTHAN (11) 100
  LEQUAL (12) 102
  EQUALITY (13) 103
  DIFFERENT (14) 104
  AND (15) 106
  OR (16) 107
  EQUAL (17) 29
  PLUSASSIGN (18) 30
  MINUSASSIGN (19) 31
  MULTASSIGN (20) 32
  DIVASSIGN (21) 33
  ORASSIGN (22) 34
  ANDASSIGN (23) 35
  MODASSIGN (24) 36
  SEMIC (25) 16 51 86 87 92
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 64
  BRIGHT (29) 5 64
  ID (30) 6 8 22 29 30 31 32 33 34 35 36 46 56 71 72 75 77 79 80 83
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 24 63 116
  SBLEFT (37) 28 39 72 85
  SBRIGHT (38) 28 39 72 85
  PLEFT (39) 42 60 78 87 110
  PRIGHT (40) 42 60 76 87 110
  FUNK (41) 43
  CHIEF (42) 47
  LOGIC (43) 52
  CHAR (44) 53
  NUMBER (45) 54
  DECIMAL (46) 55
  OBLIVION (47) 57
  STRING (48) 58
  HEAR (49) 60
  NULL (50) 69
  ITSELF (51) 70
  SAY (52) 87
  REPLY (53) 92
  SUM (54) 93
  TRUE (55) 108
  FALSE (56) 109
  UNLESS (57) 117
  ELSE (58) 119 123
  IF (59) 120
  ELSIF (60) 122
  DO (61) 124
  WHILE (62) 124 126
  CTED (63) 131
  CTEN (64) 132
  CTESTRING (65) 133

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _

  $default      reduce using rule 4 (type_declaration)


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 11

  code_new_class  go to state 10

state 9


  $default      accept


state 10

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 13
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 12

state 11

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 12

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 14


state 13

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 15


state 14

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 16
  class_variable_block  go to state 17
  variable_declaration  go to state 18
  variable_is_modifiable  go to state 19

state 15

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 16

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 22


state 17

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 23
  method_declaration  go to state 24
  new_function_code  go to state 25

state 18

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 18
  class_variable_block  go to state 27
  variable_is_modifiable  go to state 19

state 19

  16) variable_declaration : variable_is_modifiable _ variable_scope type some_variables SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 30
  modifier      go to state 31

state 20

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 21

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 22

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 23

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 24

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 24
  class_function_block  go to state 32
  new_function_code  go to state 25

state 25

  42) method_declaration : new_function_code _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 44 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 26

  43) new_function_code : FUNK _

  $default      reduce using rule 43 (new_function_code)


state 27

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_is_modifiable variable_scope _ type some_variables SEMIC

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type          go to state 35
  type_specifier  go to state 36

state 31

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 32

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 33

  42) method_declaration : new_function_code method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  type          go to state 44

state 34

  45) method_declaration1 : modifier _

  $default      reduce using rule 45 (method_declaration1)


state 35

  16) variable_declaration : variable_is_modifiable variable_scope type _ some_variables SEMIC

  ID            shift, and go to state 47

  some_variables  go to state 45
  code_new_variable  go to state 46

state 36

  25) type : type_specifier _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type1         go to state 48
  type2         go to state 49

state 37

  52) type_specifier : LOGIC _

  $default      reduce using rule 52 (type_specifier)


state 38

  53) type_specifier : CHAR _

  $default      reduce using rule 53 (type_specifier)


state 39

  54) type_specifier : NUMBER _

  $default      reduce using rule 54 (type_specifier)


state 40

  55) type_specifier : DECIMAL _

  $default      reduce using rule 55 (type_specifier)


state 41

  56) type_specifier : ID _

  $default      reduce using rule 56 (type_specifier)


state 42

  57) type_specifier : OBLIVION _

  $default      reduce using rule 57 (type_specifier)


state 43

  58) type_specifier : STRING _

  $default      reduce using rule 58 (type_specifier)


state 44

  42) method_declaration : new_function_code method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 52
  CHIEF         shift, and go to state 53

  method_declaration2  go to state 51

state 45

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables _ SEMIC

  SEMIC         shift, and go to state 54


state 46

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 56
  $default      reduce using rule 23 (next_variable)

  next_variable  go to state 55

state 47

  22) code_new_variable : ID _

  $default      reduce using rule 22 (code_new_variable)


state 48

  25) type : type_specifier type1 _

  $default      reduce using rule 25 (type)


state 49

  27) type1 : type2 _

  $default      reduce using rule 27 (type1)


state 50

  28) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  expression    go to state 57
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 51

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 71


state 52

  46) method_declaration2 : ID _

  $default      reduce using rule 46 (method_declaration2)


state 53

  47) method_declaration2 : CHIEF _

  $default      reduce using rule 47 (method_declaration2)


state 54

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 55

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 56

  24) next_variable : COMA _ some_variables

  ID            shift, and go to state 47

  code_new_variable  go to state 46
  some_variables  go to state 72

state 57

  28) type2 : SBLEFT expression _ SBRIGHT type1
  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SBRIGHT       shift, and go to state 73
  SUM           shift, and go to state 74


state 58

  69) reference_expression : NULL _

  $default      reduce using rule 69 (reference_expression)


state 59

  70) reference_expression : ITSELF _

  $default      reduce using rule 70 (reference_expression)


state 60

  71) reference_expression : ID _
  72) reference_expression : ID _ SBLEFT expression SBRIGHT
  75) non_final_id : ID _

  SBLEFT        shift, and go to state 88
  POINT         reduce using rule 75 (non_final_id)
  $default      reduce using rule 71 (reference_expression)


state 61

  73) reference_expression : non_final_id _ POINT function_call
  74) reference_expression : non_final_id _ POINT reference_expression5

  POINT         shift, and go to state 89


state 62

 105) expression : NOT _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 90
  literal_expression  go to state 66
  reference_expression  go to state 67

state 63

 108) expression : TRUE _

  $default      reduce using rule 108 (expression)


state 64

 109) expression : FALSE _

  $default      reduce using rule 109 (expression)


state 65

 110) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 91
  literal_expression  go to state 66
  reference_expression  go to state 67

state 66

 111) expression : literal_expression _

  $default      reduce using rule 111 (expression)


state 67

 112) expression : reference_expression _

  $default      reduce using rule 112 (expression)


state 68

 131) literal_expression : CTED _

  $default      reduce using rule 131 (literal_expression)


state 69

 132) literal_expression : CTEN _

  $default      reduce using rule 132 (literal_expression)


state 70

 133) literal_expression : CTESTRING _

  $default      reduce using rule 133 (literal_expression)


state 71

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  method_declaration3  go to state 92
  parameter_list  go to state 93
  parameter     go to state 94
  type          go to state 95

state 72

  24) next_variable : COMA some_variables _

  $default      reduce using rule 24 (next_variable)


state 73

  28) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type2         go to state 49
  type1         go to state 96

state 74

  93) expression : expression SUM _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 97
  literal_expression  go to state 66
  reference_expression  go to state 67

state 75

  94) expression : expression DIV _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 98
  literal_expression  go to state 66
  reference_expression  go to state 67

state 76

  95) expression : expression MOD _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 99
  literal_expression  go to state 66
  reference_expression  go to state 67

state 77

  96) expression : expression PLUS _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 100
  literal_expression  go to state 66
  reference_expression  go to state 67

state 78

  97) expression : expression MINUS _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 101
  literal_expression  go to state 66
  reference_expression  go to state 67

state 79

  98) expression : expression MULT _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 102
  literal_expression  go to state 66
  reference_expression  go to state 67

state 80

  99) expression : expression MTHAN _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 103
  literal_expression  go to state 66
  reference_expression  go to state 67

state 81

 100) expression : expression LTHAN _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 104
  literal_expression  go to state 66
  reference_expression  go to state 67

state 82

 101) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 105
  literal_expression  go to state 66
  reference_expression  go to state 67

state 83

 102) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 106
  literal_expression  go to state 66
  reference_expression  go to state 67

state 84

 103) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 107
  literal_expression  go to state 66
  reference_expression  go to state 67

state 85

 104) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 108
  literal_expression  go to state 66
  reference_expression  go to state 67

state 86

 106) expression : expression AND _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 109
  literal_expression  go to state 66
  reference_expression  go to state 67

state 87

 107) expression : expression OR _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 110
  literal_expression  go to state 66
  reference_expression  go to state 67

state 88

  72) reference_expression : ID SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  expression    go to state 111
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 89

  73) reference_expression : non_final_id POINT _ function_call
  74) reference_expression : non_final_id POINT _ reference_expression5

  ID            shift, and go to state 115

  function_call  go to state 112
  reference_expression5  go to state 113
  funk_id       go to state 114

state 90

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 105) expression : NOT expression _
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  SUM           shift, and go to state 74
  SUM           [reduce using rule 105 (expression)]
  $default      reduce using rule 105 (expression)


state 91

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression
 110) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  PRIGHT        shift, and go to state 116
  SUM           shift, and go to state 74


state 92

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 117


state 93

  49) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  parameter_list  go to state 93
  method_declaration3  go to state 118
  parameter     go to state 94
  type          go to state 95

state 94

  61) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 120
  $default      reduce using rule 62 (parameter_list1)

  parameter_list1  go to state 119

state 95

  83) parameter : type _ ID parameter1

  ID            shift, and go to state 121


state 96

  28) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 28 (type2)


state 97

  93) expression : expression _ SUM expression
  93) expression : expression SUM expression _
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MOD           [reduce using rule 93 (expression)]
  MULT          shift, and go to state 79
  MULT          [reduce using rule 93 (expression)]
  DIV           shift, and go to state 75
  DIV           [reduce using rule 93 (expression)]
  PLUS          shift, and go to state 77
  PLUS          [reduce using rule 93 (expression)]
  MINUS         shift, and go to state 78
  MINUS         [reduce using rule 93 (expression)]
  MTHAN         shift, and go to state 80
  MTHAN         [reduce using rule 93 (expression)]
  MEQUAL        shift, and go to state 82
  MEQUAL        [reduce using rule 93 (expression)]
  LTHAN         shift, and go to state 81
  LTHAN         [reduce using rule 93 (expression)]
  LEQUAL        shift, and go to state 83
  LEQUAL        [reduce using rule 93 (expression)]
  EQUALITY      shift, and go to state 84
  EQUALITY      [reduce using rule 93 (expression)]
  DIFFERENT     shift, and go to state 85
  DIFFERENT     [reduce using rule 93 (expression)]
  AND           shift, and go to state 86
  AND           [reduce using rule 93 (expression)]
  OR            shift, and go to state 87
  OR            [reduce using rule 93 (expression)]
  SUM           shift, and go to state 74
  SUM           [reduce using rule 93 (expression)]
  $default      reduce using rule 93 (expression)


state 98

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  94) expression : expression DIV expression _
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  SUM           shift, and go to state 74
  SUM           [reduce using rule 94 (expression)]
  $default      reduce using rule 94 (expression)


state 99

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  95) expression : expression MOD expression _
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  SUM           shift, and go to state 74
  SUM           [reduce using rule 95 (expression)]
  $default      reduce using rule 95 (expression)


state 100

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  96) expression : expression PLUS expression _
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  SUM           shift, and go to state 74
  SUM           [reduce using rule 96 (expression)]
  $default      reduce using rule 96 (expression)


state 101

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  97) expression : expression MINUS expression _
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  SUM           shift, and go to state 74
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 102

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  98) expression : expression MULT expression _
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  SUM           shift, and go to state 74
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 103

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
  99) expression : expression MTHAN expression _
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 104

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 100) expression : expression LTHAN expression _
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 105

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 101) expression : expression MEQUAL expression _
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 106

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 102) expression : expression LEQUAL expression _
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 107

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 103) expression : expression EQUALITY expression _
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 108

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 104) expression : expression DIFFERENT expression _
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)


state 109

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 106) expression : expression AND expression _
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  SUM           shift, and go to state 74
  SUM           [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)


state 110

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression
 107) expression : expression OR expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  SUM           shift, and go to state 74
  SUM           [reduce using rule 107 (expression)]
  $default      reduce using rule 107 (expression)


state 111

  72) reference_expression : ID SBLEFT expression _ SBRIGHT
  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SBRIGHT       shift, and go to state 122
  SUM           shift, and go to state 74


state 112

  73) reference_expression : non_final_id POINT function_call _

  $default      reduce using rule 73 (reference_expression)


state 113

  74) reference_expression : non_final_id POINT reference_expression5 _

  $default      reduce using rule 74 (reference_expression)


state 114

  76) function_call : funk_id _ start_funk reference_expression6 PRIGHT

  PLEFT         shift, and go to state 124

  start_funk    go to state 123

state 115

  77) funk_id : ID _
  79) reference_expression5 : ID _
  80) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 125
  PLEFT         reduce using rule 77 (funk_id)
  $default      reduce using rule 79 (reference_expression5)


state 116

 110) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 110 (expression)


state 117

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 128
  BLEFT         shift, and go to state 129

  method_declaration4  go to state 126
  statement_block  go to state 127

state 118

  49) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 49 (method_declaration3)


state 119

  61) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 61 (parameter_list)


state 120

  63) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  parameter     go to state 94
  parameter_list  go to state 130
  type          go to state 95

state 121

  83) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 132
  $default      reduce using rule 84 (parameter1)

  parameter1    go to state 131

state 122

  72) reference_expression : ID SBLEFT expression SBRIGHT _

  $default      reduce using rule 72 (reference_expression)


state 123

  76) function_call : funk_id start_funk _ reference_expression6 PRIGHT

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70
  $default      reduce using rule 81 (reference_expression6)

  non_final_id  go to state 61
  reference_expression6  go to state 133
  arglist       go to state 134
  expression    go to state 135
  literal_expression  go to state 66
  reference_expression  go to state 67
  generate_arg  go to state 136

state 124

  78) start_funk : PLEFT _

  $default      reduce using rule 78 (start_funk)


state 125

  80) reference_expression5 : ID POINT _ reference_expression5

  ID            shift, and go to state 137

  reference_expression5  go to state 138

state 126

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 42 (method_declaration)


state 127

  50) method_declaration4 : statement_block _

  $default      reduce using rule 50 (method_declaration4)


state 128

  51) method_declaration4 : SEMIC _

  $default      reduce using rule 51 (method_declaration4)


state 129

  64) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 19
  statement_block1  go to state 139
  variable_declaration  go to state 140

state 130

  63) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 63 (parameter_list1)


state 131

  83) parameter : type ID parameter1 _

  $default      reduce using rule 83 (parameter)


state 132

  85) parameter1 : SBLEFT _ SBRIGHT parameter1

  SBRIGHT       shift, and go to state 141


state 133

  76) function_call : funk_id start_funk reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 142


state 134

  82) reference_expression6 : arglist _

  $default      reduce using rule 82 (reference_expression6)


state 135

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression
 114) generate_arg : expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 114 (generate_arg)


state 136

 113) arglist : generate_arg _ arglist1

  COMA          shift, and go to state 144
  $default      reduce using rule 115 (arglist1)

  arglist1      go to state 143

state 137

  79) reference_expression5 : ID _
  80) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 125
  $default      reduce using rule 79 (reference_expression5)


state 138

  80) reference_expression5 : ID POINT reference_expression5 _

  $default      reduce using rule 80 (reference_expression5)


state 139

  64) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  ID            shift, and go to state 145
  SAY           shift, and go to state 149
  REPLY         shift, and go to state 154
  UNLESS        shift, and go to state 155
  IF            shift, and go to state 156
  DO            shift, and go to state 157
  WHILE         shift, and go to state 158
  $default      reduce using rule 67 (statement_block2)

  statement_block2  go to state 146
  statement     go to state 147
  variable_assignment  go to state 148
  unless_statement  go to state 150
  if_statement  go to state 151
  do_statement  go to state 152
  while_statement  go to state 153

state 140

  66) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 19
  variable_declaration  go to state 140
  statement_block1  go to state 159

state 141

  85) parameter1 : SBLEFT SBRIGHT _ parameter1

  SBLEFT        shift, and go to state 132
  $default      reduce using rule 84 (parameter1)

  parameter1    go to state 160

state 142

  76) function_call : funk_id start_funk reference_expression6 PRIGHT _

  $default      reduce using rule 76 (function_call)


state 143

 113) arglist : generate_arg arglist1 _

  $default      reduce using rule 113 (arglist)


state 144

 116) arglist1 : COMA _ arglist

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 135
  literal_expression  go to state 66
  reference_expression  go to state 67
  generate_arg  go to state 136
  arglist       go to state 161

state 145

  29) variable_assignment : ID _ variable_assignment1 EQUAL variable_value
  30) variable_assignment : ID _ variable_assignment1 PLUSASSIGN variable_value
  31) variable_assignment : ID _ variable_assignment1 MINUSASSIGN variable_value
  32) variable_assignment : ID _ variable_assignment1 MULTASSIGN variable_value
  33) variable_assignment : ID _ variable_assignment1 DIVASSIGN variable_value
  34) variable_assignment : ID _ variable_assignment1 ORASSIGN variable_value
  35) variable_assignment : ID _ variable_assignment1 ANDASSIGN variable_value
  36) variable_assignment : ID _ variable_assignment1 MODASSIGN variable_value

  SBLEFT        shift, and go to state 164
  $default      reduce using rule 37 (variable_assignment1)

  variable_assignment1  go to state 162
  variable_assignment4  go to state 163

state 146

  64) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 165


state 147

  68) statement_block2 : statement _ statement_block2

  ID            shift, and go to state 145
  SAY           shift, and go to state 149
  REPLY         shift, and go to state 154
  UNLESS        shift, and go to state 155
  IF            shift, and go to state 156
  DO            shift, and go to state 157
  WHILE         shift, and go to state 158
  $default      reduce using rule 67 (statement_block2)

  statement     go to state 147
  statement_block2  go to state 166
  variable_assignment  go to state 148
  unless_statement  go to state 150
  if_statement  go to state 151
  do_statement  go to state 152
  while_statement  go to state 153

state 148

  86) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 167


state 149

  87) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 168


state 150

  88) statement : unless_statement _

  $default      reduce using rule 88 (statement)


state 151

  89) statement : if_statement _

  $default      reduce using rule 89 (statement)


state 152

  90) statement : do_statement _

  $default      reduce using rule 90 (statement)


state 153

  91) statement : while_statement _

  $default      reduce using rule 91 (statement)


state 154

  92) statement : REPLY _ expression SEMIC

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 169
  literal_expression  go to state 66
  reference_expression  go to state 67

state 155

 117) unless_statement : UNLESS _ expression statement_block unless_statement1

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 170
  literal_expression  go to state 66
  reference_expression  go to state 67

state 156

 120) if_statement : IF _ push_if_floor validateLogicexp statement_block if_statement1

  $default      reduce using rule 128 (push_if_floor)

  push_if_floor  go to state 171

state 157

 124) do_statement : DO _ push_cont_jump statement_block WHILE validateDoWhileExp

  $default      reduce using rule 127 (push_cont_jump)

  push_cont_jump  go to state 172

state 158

 126) while_statement : WHILE _ push_cont_jump validateLogicexp statement_block

  $default      reduce using rule 127 (push_cont_jump)

  push_cont_jump  go to state 173

state 159

  66) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 66 (statement_block1)


state 160

  85) parameter1 : SBLEFT SBRIGHT parameter1 _

  $default      reduce using rule 85 (parameter1)


state 161

 116) arglist1 : COMA arglist _

  $default      reduce using rule 116 (arglist1)


state 162

  29) variable_assignment : ID variable_assignment1 _ EQUAL variable_value
  30) variable_assignment : ID variable_assignment1 _ PLUSASSIGN variable_value
  31) variable_assignment : ID variable_assignment1 _ MINUSASSIGN variable_value
  32) variable_assignment : ID variable_assignment1 _ MULTASSIGN variable_value
  33) variable_assignment : ID variable_assignment1 _ DIVASSIGN variable_value
  34) variable_assignment : ID variable_assignment1 _ ORASSIGN variable_value
  35) variable_assignment : ID variable_assignment1 _ ANDASSIGN variable_value
  36) variable_assignment : ID variable_assignment1 _ MODASSIGN variable_value

  EQUAL         shift, and go to state 174
  PLUSASSIGN    shift, and go to state 175
  MINUSASSIGN   shift, and go to state 176
  MULTASSIGN    shift, and go to state 177
  DIVASSIGN     shift, and go to state 178
  ORASSIGN      shift, and go to state 179
  ANDASSIGN     shift, and go to state 180
  MODASSIGN     shift, and go to state 181


state 163

  38) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 164
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 182
  variable_assignment4  go to state 183

state 164

  39) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  expression    go to state 184
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 165

  64) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 64 (statement_block)


state 166

  68) statement_block2 : statement statement_block2 _

  $default      reduce using rule 68 (statement_block2)


state 167

  86) statement : variable_assignment SEMIC _

  $default      reduce using rule 86 (statement)


state 168

  87) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 185
  literal_expression  go to state 66
  reference_expression  go to state 67

state 169

  92) statement : REPLY expression _ SEMIC
  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SEMIC         shift, and go to state 186
  SUM           shift, and go to state 74


state 170

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression
 117) unless_statement : UNLESS expression _ statement_block unless_statement1

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  BLEFT         shift, and go to state 129
  SUM           shift, and go to state 74

  statement_block  go to state 187

state 171

 120) if_statement : IF push_if_floor _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 188
  literal_expression  go to state 66
  reference_expression  go to state 67
  validateLogicexp  go to state 189

state 172

 124) do_statement : DO push_cont_jump _ statement_block WHILE validateDoWhileExp

  BLEFT         shift, and go to state 129

  statement_block  go to state 190

state 173

 126) while_statement : WHILE push_cont_jump _ validateLogicexp statement_block

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 188
  literal_expression  go to state 66
  reference_expression  go to state 67
  validateLogicexp  go to state 191

state 174

  29) variable_assignment : ID variable_assignment1 EQUAL _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 192
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 175

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 195
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 176

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 196
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 177

  32) variable_assignment : ID variable_assignment1 MULTASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 197
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 178

  33) variable_assignment : ID variable_assignment1 DIVASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 198
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 179

  34) variable_assignment : ID variable_assignment1 ORASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 199
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 180

  35) variable_assignment : ID variable_assignment1 ANDASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 200
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 181

  36) variable_assignment : ID variable_assignment1 MODASSIGN _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 194
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 201
  expression    go to state 193
  non_final_id  go to state 61
  literal_expression  go to state 66
  reference_expression  go to state 67

state 182

  38) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 38 (variable_assignment1)


state 183

  41) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 41 (variable_assignment5)


state 184

  39) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SBRIGHT       shift, and go to state 202
  SUM           shift, and go to state 74


state 185

  87) statement : SAY PLEFT expression _ PRIGHT SEMIC
  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  PRIGHT        shift, and go to state 203
  SUM           shift, and go to state 74


state 186

  92) statement : REPLY expression SEMIC _

  $default      reduce using rule 92 (statement)


state 187

 117) unless_statement : UNLESS expression statement_block _ unless_statement1

  ELSE          shift, and go to state 205
  $default      reduce using rule 118 (unless_statement1)

  unless_statement1  go to state 204

state 188

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression
 129) validateLogicexp : expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 129 (validateLogicexp)


state 189

 120) if_statement : IF push_if_floor validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 129

  statement_block  go to state 206

state 190

 124) do_statement : DO push_cont_jump statement_block _ WHILE validateDoWhileExp

  WHILE         shift, and go to state 207


state 191

 126) while_statement : WHILE push_cont_jump validateLogicexp _ statement_block

  BLEFT         shift, and go to state 129

  statement_block  go to state 208

state 192

  29) variable_assignment : ID variable_assignment1 EQUAL variable_value _

  $default      reduce using rule 29 (variable_assignment)


state 193

  59) variable_value : expression _
  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 59 (variable_value)


state 194

  60) variable_value : HEAR _ PLEFT PRIGHT

  PLEFT         shift, and go to state 209


state 195

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN variable_value _

  $default      reduce using rule 30 (variable_assignment)


state 196

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN variable_value _

  $default      reduce using rule 31 (variable_assignment)


state 197

  32) variable_assignment : ID variable_assignment1 MULTASSIGN variable_value _

  $default      reduce using rule 32 (variable_assignment)


state 198

  33) variable_assignment : ID variable_assignment1 DIVASSIGN variable_value _

  $default      reduce using rule 33 (variable_assignment)


state 199

  34) variable_assignment : ID variable_assignment1 ORASSIGN variable_value _

  $default      reduce using rule 34 (variable_assignment)


state 200

  35) variable_assignment : ID variable_assignment1 ANDASSIGN variable_value _

  $default      reduce using rule 35 (variable_assignment)


state 201

  36) variable_assignment : ID variable_assignment1 MODASSIGN variable_value _

  $default      reduce using rule 36 (variable_assignment)


state 202

  39) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 164
  SBLEFT        [reduce using rule 40 (variable_assignment5)]
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 210
  variable_assignment4  go to state 183

state 203

  87) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 211


state 204

 117) unless_statement : UNLESS expression statement_block unless_statement1 _

  $default      reduce using rule 117 (unless_statement)


state 205

 119) unless_statement1 : ELSE _ statement_block

  BLEFT         shift, and go to state 129

  statement_block  go to state 212

state 206

 120) if_statement : IF push_if_floor validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 215
  ELSIF         shift, and go to state 214
  $default      reduce using rule 121 (if_statement1)

  if_statement1  go to state 213

state 207

 124) do_statement : DO push_cont_jump statement_block WHILE _ validateDoWhileExp

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 216
  literal_expression  go to state 66
  reference_expression  go to state 67
  validateDoWhileExp  go to state 217

state 208

 126) while_statement : WHILE push_cont_jump validateLogicexp statement_block _

  $default      reduce using rule 126 (while_statement)


state 209

  60) variable_value : HEAR PLEFT _ PRIGHT

  PRIGHT        shift, and go to state 218


state 210

  39) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 39 (variable_assignment4)


state 211

  87) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 87 (statement)


state 212

 119) unless_statement1 : ELSE statement_block _

  $default      reduce using rule 119 (unless_statement1)


state 213

 120) if_statement : IF push_if_floor validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 120 (if_statement)


state 214

 122) if_statement1 : ELSIF _ generateElseCode validateLogicexp statement_block if_statement1

  $default      reduce using rule 130 (generateElseCode)

  generateElseCode  go to state 219

state 215

 123) if_statement1 : ELSE _ generateElseCode statement_block

  $default      reduce using rule 130 (generateElseCode)

  generateElseCode  go to state 220

state 216

  93) expression : expression _ SUM expression
  94) expression : expression _ DIV expression
  95) expression : expression _ MOD expression
  96) expression : expression _ PLUS expression
  97) expression : expression _ MINUS expression
  98) expression : expression _ MULT expression
  99) expression : expression _ MTHAN expression
 100) expression : expression _ LTHAN expression
 101) expression : expression _ MEQUAL expression
 102) expression : expression _ LEQUAL expression
 103) expression : expression _ EQUALITY expression
 104) expression : expression _ DIFFERENT expression
 106) expression : expression _ AND expression
 107) expression : expression _ OR expression
 125) validateDoWhileExp : expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 125 (validateDoWhileExp)


state 217

 124) do_statement : DO push_cont_jump statement_block WHILE validateDoWhileExp _

  $default      reduce using rule 124 (do_statement)


state 218

  60) variable_value : HEAR PLEFT PRIGHT _

  $default      reduce using rule 60 (variable_value)


state 219

 122) if_statement1 : ELSIF generateElseCode _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 62
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  non_final_id  go to state 61
  expression    go to state 188
  literal_expression  go to state 66
  reference_expression  go to state 67
  validateLogicexp  go to state 221

state 220

 123) if_statement1 : ELSE generateElseCode _ statement_block

  BLEFT         shift, and go to state 129

  statement_block  go to state 222

state 221

 122) if_statement1 : ELSIF generateElseCode validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 129

  statement_block  go to state 223

state 222

 123) if_statement1 : ELSE generateElseCode statement_block _

  $default      reduce using rule 123 (if_statement1)


state 223

 122) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 215
  ELSIF         shift, and go to state 214
  $default      reduce using rule 121 (if_statement1)

  if_statement1  go to state 224

state 224

 122) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 122 (if_statement1)

