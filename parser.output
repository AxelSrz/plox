state 100 contains 13 shift/reduce conflicts
state 101 contains 13 shift/reduce conflicts
state 102 contains 13 shift/reduce conflicts
state 107 contains 2 shift/reduce conflicts
state 130 contains 1 shift/reduce conflicts
state 186 contains 1 shift/reduce conflicts
state 195 contains 1 shift/reduce conflicts
state 196 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration SEMIC
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_declaration3 BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_declaration3: class_declaration4 class_declaration5
rule 10 class_declaration4: 
rule 11 class_declaration4: variable_declaration class_declaration4
rule 12 class_declaration5: 
rule 13 class_declaration5: method_declaration class_declaration5
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_declaration2 variable_declaration1 type variable_declaration3 SEMIC
rule 17 variable_declaration1: 
rule 18 variable_declaration1: modifier
rule 19 variable_declaration2: VAR
rule 20 variable_declaration2: ETERNAL
rule 21 variable_declaration3: ID variable_declaration4
rule 22 variable_declaration4: 
rule 23 variable_declaration4: COMA variable_declaration3
rule 24 type: type_specifier type1
rule 25 type1: 
rule 26 type1: type2
rule 27 type2: SBLEFT expression SBRIGHT type1
rule 28 variable_assignment: ID variable_assignment1 assign_operator variable_value
rule 29 variable_assignment1: 
rule 30 variable_assignment1: variable_assignment4 variable_assignment5
rule 31 assign_operator: EQUAL
rule 32 assign_operator: PLUSASSIGN
rule 33 assign_operator: MINUSASSIGN
rule 34 assign_operator: MULTASSIGN
rule 35 assign_operator: DIVASSIGN
rule 36 assign_operator: ORASSIGN
rule 37 assign_operator: ANDASSIGN
rule 38 assign_operator: MODASSIGN
rule 39 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 40 variable_assignment5: 
rule 41 variable_assignment5: variable_assignment4
rule 42 method_declaration: FUNK method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 43 method_declaration1: 
rule 44 method_declaration1: modifier
rule 45 method_declaration2: ID
rule 46 method_declaration2: CHIEF
rule 47 method_declaration3: 
rule 48 method_declaration3: parameter_list method_declaration3
rule 49 method_declaration4: statement_block
rule 50 method_declaration4: SEMIC
rule 51 type_specifier: LOGIC
rule 52 type_specifier: CHAR
rule 53 type_specifier: NUMBER
rule 54 type_specifier: DECIMAL
rule 55 type_specifier: ID
rule 56 type_specifier: OBLIVION
rule 57 type_specifier: STRING
rule 58 num_operator: MULT
rule 59 num_operator: DIV
rule 60 num_operator: MOD
rule 61 num_operator: PLUS
rule 62 num_operator: MINUS
rule 63 variable_value: expression
rule 64 variable_value: HEAR PLEFT PRIGHT
rule 65 parameter_list: parameter parameter_list1
rule 66 parameter_list1: 
rule 67 parameter_list1: COMA parameter_list
rule 68 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 69 statement_block1: 
rule 70 statement_block1: variable_declaration statement_block1
rule 71 statement_block2: 
rule 72 statement_block2: statement statement_block2
rule 73 reference_expression: NULL
rule 74 reference_expression: ITSELF
rule 75 reference_expression: ID
rule 76 reference_expression: reference_expression2
rule 77 reference_expression2: reference_expression reference_expression5
rule 78 reference_expression5: PLEFT reference_expression6 PRIGHT
rule 79 reference_expression5: SBLEFT expression SBRIGHT
rule 80 reference_expression5: POINT reference_expression
rule 81 reference_expression6: 
rule 82 reference_expression6: arglist
rule 83 parameter: type ID parameter1
rule 84 parameter1: 
rule 85 parameter1: parameter2
rule 86 parameter2: SBLEFT expression SBRIGHT parameter3
rule 87 parameter3: 
rule 88 parameter3: parameter2
rule 89 statement: variable_assignment SEMIC
rule 90 statement: SAY PLEFT expression PRIGHT SEMIC
rule 91 statement: expression SEMIC
rule 92 statement: statement_block
rule 93 statement: unless_statement
rule 94 statement: if_statement
rule 95 statement: do_statement
rule 96 statement: while_statement
rule 97 statement: REPLY statement1 SEMIC
rule 98 statement: SEMIC
rule 99 statement1: 
rule 100 statement1: expression
rule 101 expression: expression num_operator expression
rule 102 expression: expression testing_operator expression
rule 103 expression: NOT expression
rule 104 expression: expression boolean_operator expression
rule 105 expression: TRUE
rule 106 expression: FALSE
rule 107 expression: PLEFT expression PRIGHT
rule 108 expression: literal_expression
rule 109 expression: reference_expression
rule 110 arglist: expression arglist1
rule 111 arglist1: 
rule 112 arglist1: COMA arglist
rule 113 unless_statement: UNLESS PLEFT expression PRIGHT statement unless_statement1
rule 114 unless_statement1: 
rule 115 unless_statement1: ELSE statement
rule 116 if_statement: IF PLEFT expression PRIGHT statement if_statement1
rule 117 if_statement1: 
rule 118 if_statement1: ELSE statement
rule 119 do_statement: DO statement WHILE PLEFT expression PRIGHT SEMIC
rule 120 while_statement: WHILE PLEFT expression PRIGHT statement
rule 121 testing_operator: MTHAN
rule 122 testing_operator: LTHAN
rule 123 testing_operator: MEQUAL
rule 124 testing_operator: LEQUAL
rule 125 testing_operator: EQUALITY
rule 126 testing_operator: DIFFERENT
rule 127 boolean_operator: AND
rule 128 boolean_operator: OR
rule 129 literal_expression: CTED
rule 130 literal_expression: CTEN
rule 131 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (64)
    on right: 
    on left : 
  supreme_plox (65)
    on right: 
    on left : 1
  plox_generation (66)
    on right: 1 3
    on left : 2 3
  type_declaration (67)
    on right: 3
    on left : 4
  class_declaration (68)
    on right: 4
    on left : 5
  code_new_class (69)
    on right: 5
    on left : 6
  code_heirof (70)
    on right: 5
    on left : 7 8
  class_declaration3 (71)
    on right: 5
    on left : 9
  class_declaration4 (72)
    on right: 9 11
    on left : 10 11
  class_declaration5 (73)
    on right: 9 13
    on left : 12 13
  variable_declaration (74)
    on right: 11 70
    on left : 16
  method_declaration (75)
    on right: 13
    on left : 42
  modifier (76)
    on right: 18 44
    on left : 14 15
  variable_declaration2 (77)
    on right: 16
    on left : 19 20
  variable_declaration1 (78)
    on right: 16
    on left : 17 18
  type (79)
    on right: 16 42 83
    on left : 24
  variable_declaration3 (80)
    on right: 16 23
    on left : 21
  variable_declaration4 (81)
    on right: 21
    on left : 22 23
  type_specifier (82)
    on right: 24
    on left : 51 52 53 54 55 56 57
  type1 (83)
    on right: 24 27
    on left : 25 26
  type2 (84)
    on right: 26
    on left : 27
  expression (85)
    on right: 27 39 63 79 86 90 91 100 101 102 103 104 107 110 113 116 119 120
    on left : 101 102 103 104 105 106 107 108 109
  variable_assignment (86)
    on right: 89
    on left : 28
  variable_assignment1 (87)
    on right: 28
    on left : 29 30
  assign_operator (88)
    on right: 28
    on left : 31 32 33 34 35 36 37 38
  variable_value (89)
    on right: 28
    on left : 63 64
  variable_assignment4 (90)
    on right: 30 41
    on left : 39
  variable_assignment5 (91)
    on right: 30 39
    on left : 40 41
  method_declaration1 (92)
    on right: 42
    on left : 43 44
  method_declaration2 (93)
    on right: 42
    on left : 45 46
  method_declaration3 (94)
    on right: 42 48
    on left : 47 48
  method_declaration4 (95)
    on right: 42
    on left : 49 50
  parameter_list (96)
    on right: 48 67
    on left : 65
  statement_block (97)
    on right: 49 92
    on left : 68
  num_operator (98)
    on right: 101
    on left : 58 59 60 61 62
  parameter (99)
    on right: 65
    on left : 83
  parameter_list1 (100)
    on right: 65
    on left : 66 67
  statement_block1 (101)
    on right: 68 70
    on left : 69 70
  statement_block2 (102)
    on right: 68 72
    on left : 71 72
  statement (103)
    on right: 72 113 115 116 118 119 120
    on left : 89 90 91 92 93 94 95 96 97 98
  reference_expression (104)
    on right: 77 80 109
    on left : 73 74 75 76
  reference_expression2 (105)
    on right: 76
    on left : 77
  reference_expression5 (106)
    on right: 77
    on left : 78 79 80
  reference_expression6 (107)
    on right: 78
    on left : 81 82
  arglist (108)
    on right: 82 112
    on left : 110
  parameter1 (109)
    on right: 83
    on left : 84 85
  parameter2 (110)
    on right: 85 88
    on left : 86
  parameter3 (111)
    on right: 86
    on left : 87 88
  unless_statement (112)
    on right: 93
    on left : 113
  if_statement (113)
    on right: 94
    on left : 116
  do_statement (114)
    on right: 95
    on left : 119
  while_statement (115)
    on right: 96
    on left : 120
  statement1 (116)
    on right: 97
    on left : 99 100
  testing_operator (117)
    on right: 102
    on left : 121 122 123 124 125 126
  boolean_operator (118)
    on right: 104
    on left : 127 128
  literal_expression (119)
    on right: 108
    on left : 129 130 131
  arglist1 (120)
    on right: 110
    on left : 111 112
  unless_statement1 (121)
    on right: 113
    on left : 114 115
  if_statement1 (122)
    on right: 116
    on left : 117 118

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 80
  NOT (3) 103
  MOD (4) 60
  MULT (5) 58
  DIV (6) 59
  PLUS (7) 61
  MINUS (8) 62
  MTHAN (9) 121
  MEQUAL (10) 123
  LTHAN (11) 122
  LEQUAL (12) 124
  EQUALITY (13) 125
  DIFFERENT (14) 126
  AND (15) 127
  OR (16) 128
  EQUAL (17) 31
  PLUSASSIGN (18) 32
  MINUSASSIGN (19) 33
  MULTASSIGN (20) 34
  DIVASSIGN (21) 35
  ORASSIGN (22) 36
  ANDASSIGN (23) 37
  MODASSIGN (24) 38
  SEMIC (25) 4 16 50 89 90 91 97 98 119
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 68
  BRIGHT (29) 5 68
  ID (30) 6 8 21 28 45 55 75 83
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 23 67 112
  SBLEFT (37) 27 39 79 86
  SBRIGHT (38) 27 39 79 86
  FUNK (39) 42
  PLEFT (40) 42 64 78 90 107 113 116 119 120
  PRIGHT (41) 42 64 78 90 107 113 116 119 120
  CHIEF (42) 46
  LOGIC (43) 51
  CHAR (44) 52
  NUMBER (45) 53
  DECIMAL (46) 54
  OBLIVION (47) 56
  STRING (48) 57
  HEAR (49) 64
  NULL (50) 73
  ITSELF (51) 74
  SAY (52) 90
  REPLY (53) 97
  TRUE (54) 105
  FALSE (55) 106
  UNLESS (56) 113
  ELSE (57) 115 118
  IF (58) 116
  DO (59) 119
  WHILE (60) 119 120
  CTED (61) 129
  CTEN (62) 130
  CTESTRING (63) 131

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration SEMIC

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _ SEMIC

  SEMIC         shift, and go to state 10


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_declaration3 BRIGHT

  ID            shift, and go to state 12

  code_new_class  go to state 11

state 9


  $default      accept


state 10

   4) type_declaration : HABEMVS class_declaration SEMIC _

  $default      reduce using rule 4 (type_declaration)


state 11

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_declaration3 BRIGHT

  HEIROF        shift, and go to state 14
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 13

state 12

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 13

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_declaration3 BRIGHT

  BLEFT         shift, and go to state 15


state 14

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 16


state 15

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_declaration3 BRIGHT

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 10 (class_declaration4)

  class_declaration3  go to state 17
  class_declaration4  go to state 18
  variable_declaration  go to state 19
  variable_declaration2  go to state 20

state 16

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 17

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_declaration3 _ BRIGHT

  BRIGHT        shift, and go to state 23


state 18

   9) class_declaration3 : class_declaration4 _ class_declaration5

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_declaration5)

  class_declaration5  go to state 24
  method_declaration  go to state 25

state 19

  11) class_declaration4 : variable_declaration _ class_declaration4

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 10 (class_declaration4)

  variable_declaration  go to state 19
  class_declaration4  go to state 27
  variable_declaration2  go to state 20

state 20

  16) variable_declaration : variable_declaration2 _ variable_declaration1 type variable_declaration3 SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_declaration1)

  variable_declaration1  go to state 30
  modifier      go to state 31

state 21

  19) variable_declaration2 : VAR _

  $default      reduce using rule 19 (variable_declaration2)


state 22

  20) variable_declaration2 : ETERNAL _

  $default      reduce using rule 20 (variable_declaration2)


state 23

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_declaration3 BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 24

   9) class_declaration3 : class_declaration4 class_declaration5 _

  $default      reduce using rule 9 (class_declaration3)


state 25

  13) class_declaration5 : method_declaration _ class_declaration5

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_declaration5)

  method_declaration  go to state 25
  class_declaration5  go to state 32

state 26

  42) method_declaration : FUNK _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 43 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 27

  11) class_declaration4 : variable_declaration class_declaration4 _

  $default      reduce using rule 11 (class_declaration4)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_declaration2 variable_declaration1 _ type variable_declaration3 SEMIC

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type          go to state 35
  type_specifier  go to state 36

state 31

  18) variable_declaration1 : modifier _

  $default      reduce using rule 18 (variable_declaration1)


state 32

  13) class_declaration5 : method_declaration class_declaration5 _

  $default      reduce using rule 13 (class_declaration5)


state 33

  42) method_declaration : FUNK method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  type          go to state 44

state 34

  44) method_declaration1 : modifier _

  $default      reduce using rule 44 (method_declaration1)


state 35

  16) variable_declaration : variable_declaration2 variable_declaration1 type _ variable_declaration3 SEMIC

  ID            shift, and go to state 46

  variable_declaration3  go to state 45

state 36

  24) type : type_specifier _ type1

  SBLEFT        shift, and go to state 49
  $default      reduce using rule 25 (type1)

  type1         go to state 47
  type2         go to state 48

state 37

  51) type_specifier : LOGIC _

  $default      reduce using rule 51 (type_specifier)


state 38

  52) type_specifier : CHAR _

  $default      reduce using rule 52 (type_specifier)


state 39

  53) type_specifier : NUMBER _

  $default      reduce using rule 53 (type_specifier)


state 40

  54) type_specifier : DECIMAL _

  $default      reduce using rule 54 (type_specifier)


state 41

  55) type_specifier : ID _

  $default      reduce using rule 55 (type_specifier)


state 42

  56) type_specifier : OBLIVION _

  $default      reduce using rule 56 (type_specifier)


state 43

  57) type_specifier : STRING _

  $default      reduce using rule 57 (type_specifier)


state 44

  42) method_declaration : FUNK method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 51
  CHIEF         shift, and go to state 52

  method_declaration2  go to state 50

state 45

  16) variable_declaration : variable_declaration2 variable_declaration1 type variable_declaration3 _ SEMIC

  SEMIC         shift, and go to state 53


state 46

  21) variable_declaration3 : ID _ variable_declaration4

  COMA          shift, and go to state 55
  $default      reduce using rule 22 (variable_declaration4)

  variable_declaration4  go to state 54

state 47

  24) type : type_specifier type1 _

  $default      reduce using rule 24 (type)


state 48

  26) type1 : type2 _

  $default      reduce using rule 26 (type1)


state 49

  27) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  expression    go to state 56
  reference_expression2  go to state 60
  reference_expression  go to state 61
  literal_expression  go to state 66

state 50

  42) method_declaration : FUNK method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 70


state 51

  45) method_declaration2 : ID _

  $default      reduce using rule 45 (method_declaration2)


state 52

  46) method_declaration2 : CHIEF _

  $default      reduce using rule 46 (method_declaration2)


state 53

  16) variable_declaration : variable_declaration2 variable_declaration1 type variable_declaration3 SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 54

  21) variable_declaration3 : ID variable_declaration4 _

  $default      reduce using rule 21 (variable_declaration3)


state 55

  23) variable_declaration4 : COMA _ variable_declaration3

  ID            shift, and go to state 46

  variable_declaration3  go to state 71

state 56

  27) type2 : SBLEFT expression _ SBRIGHT type1
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 72

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 57

  73) reference_expression : NULL _

  $default      reduce using rule 73 (reference_expression)


state 58

  74) reference_expression : ITSELF _

  $default      reduce using rule 74 (reference_expression)


state 59

  75) reference_expression : ID _

  $default      reduce using rule 75 (reference_expression)


state 60

  76) reference_expression : reference_expression2 _

  $default      reduce using rule 76 (reference_expression)


state 61

  77) reference_expression2 : reference_expression _ reference_expression5
 109) expression : reference_expression _

  POINT         shift, and go to state 92
  SBLEFT        shift, and go to state 91
  PLEFT         shift, and go to state 90
  $default      reduce using rule 109 (expression)

  reference_expression5  go to state 89

state 62

 103) expression : NOT _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 93
  literal_expression  go to state 66

state 63

 105) expression : TRUE _

  $default      reduce using rule 105 (expression)


state 64

 106) expression : FALSE _

  $default      reduce using rule 106 (expression)


state 65

 107) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 94
  literal_expression  go to state 66

state 66

 108) expression : literal_expression _

  $default      reduce using rule 108 (expression)


state 67

 129) literal_expression : CTED _

  $default      reduce using rule 129 (literal_expression)


state 68

 130) literal_expression : CTEN _

  $default      reduce using rule 130 (literal_expression)


state 69

 131) literal_expression : CTESTRING _

  $default      reduce using rule 131 (literal_expression)


state 70

  42) method_declaration : FUNK method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 47 (method_declaration3)

  type_specifier  go to state 36
  method_declaration3  go to state 95
  parameter_list  go to state 96
  parameter     go to state 97
  type          go to state 98

state 71

  23) variable_declaration4 : COMA variable_declaration3 _

  $default      reduce using rule 23 (variable_declaration4)


state 72

  27) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 49
  $default      reduce using rule 25 (type1)

  type2         go to state 48
  type1         go to state 99

state 73

  58) num_operator : MULT _

  $default      reduce using rule 58 (num_operator)


state 74

  59) num_operator : DIV _

  $default      reduce using rule 59 (num_operator)


state 75

  60) num_operator : MOD _

  $default      reduce using rule 60 (num_operator)


state 76

  61) num_operator : PLUS _

  $default      reduce using rule 61 (num_operator)


state 77

  62) num_operator : MINUS _

  $default      reduce using rule 62 (num_operator)


state 78

 101) expression : expression num_operator _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 100
  literal_expression  go to state 66

state 79

 102) expression : expression testing_operator _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 101
  literal_expression  go to state 66

state 80

 104) expression : expression boolean_operator _ expression

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 102
  literal_expression  go to state 66

state 81

 121) testing_operator : MTHAN _

  $default      reduce using rule 121 (testing_operator)


state 82

 122) testing_operator : LTHAN _

  $default      reduce using rule 122 (testing_operator)


state 83

 123) testing_operator : MEQUAL _

  $default      reduce using rule 123 (testing_operator)


state 84

 124) testing_operator : LEQUAL _

  $default      reduce using rule 124 (testing_operator)


state 85

 125) testing_operator : EQUALITY _

  $default      reduce using rule 125 (testing_operator)


state 86

 126) testing_operator : DIFFERENT _

  $default      reduce using rule 126 (testing_operator)


state 87

 127) boolean_operator : AND _

  $default      reduce using rule 127 (boolean_operator)


state 88

 128) boolean_operator : OR _

  $default      reduce using rule 128 (boolean_operator)


state 89

  77) reference_expression2 : reference_expression reference_expression5 _

  $default      reduce using rule 77 (reference_expression2)


state 90

  78) reference_expression5 : PLEFT _ reference_expression6 PRIGHT

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69
  $default      reduce using rule 81 (reference_expression6)

  reference_expression2  go to state 60
  reference_expression  go to state 61
  reference_expression6  go to state 103
  arglist       go to state 104
  expression    go to state 105
  literal_expression  go to state 66

state 91

  79) reference_expression5 : SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 106
  literal_expression  go to state 66

state 92

  80) reference_expression5 : POINT _ reference_expression

  ID            shift, and go to state 59
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58

  reference_expression2  go to state 60
  reference_expression  go to state 107

state 93

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 103) expression : NOT expression _
 104) expression : expression _ boolean_operator expression

  $default      reduce using rule 103 (expression)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 94

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 107) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 108

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 95

  42) method_declaration : FUNK method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 109


state 96

  48) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 47 (method_declaration3)

  type_specifier  go to state 36
  parameter_list  go to state 96
  method_declaration3  go to state 110
  parameter     go to state 97
  type          go to state 98

state 97

  65) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 112
  $default      reduce using rule 66 (parameter_list1)

  parameter_list1  go to state 111

state 98

  83) parameter : type _ ID parameter1

  ID            shift, and go to state 113


state 99

  27) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 27 (type2)


state 100

 101) expression : expression _ num_operator expression
 101) expression : expression num_operator expression _
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MOD           [reduce using rule 101 (expression)]
  MULT          shift, and go to state 73
  MULT          [reduce using rule 101 (expression)]
  DIV           shift, and go to state 74
  DIV           [reduce using rule 101 (expression)]
  PLUS          shift, and go to state 76
  PLUS          [reduce using rule 101 (expression)]
  MINUS         shift, and go to state 77
  MINUS         [reduce using rule 101 (expression)]
  MTHAN         shift, and go to state 81
  MTHAN         [reduce using rule 101 (expression)]
  MEQUAL        shift, and go to state 83
  MEQUAL        [reduce using rule 101 (expression)]
  LTHAN         shift, and go to state 82
  LTHAN         [reduce using rule 101 (expression)]
  LEQUAL        shift, and go to state 84
  LEQUAL        [reduce using rule 101 (expression)]
  EQUALITY      shift, and go to state 85
  EQUALITY      [reduce using rule 101 (expression)]
  DIFFERENT     shift, and go to state 86
  DIFFERENT     [reduce using rule 101 (expression)]
  AND           shift, and go to state 87
  AND           [reduce using rule 101 (expression)]
  OR            shift, and go to state 88
  OR            [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 101

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 102) expression : expression testing_operator expression _
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MOD           [reduce using rule 102 (expression)]
  MULT          shift, and go to state 73
  MULT          [reduce using rule 102 (expression)]
  DIV           shift, and go to state 74
  DIV           [reduce using rule 102 (expression)]
  PLUS          shift, and go to state 76
  PLUS          [reduce using rule 102 (expression)]
  MINUS         shift, and go to state 77
  MINUS         [reduce using rule 102 (expression)]
  MTHAN         shift, and go to state 81
  MTHAN         [reduce using rule 102 (expression)]
  MEQUAL        shift, and go to state 83
  MEQUAL        [reduce using rule 102 (expression)]
  LTHAN         shift, and go to state 82
  LTHAN         [reduce using rule 102 (expression)]
  LEQUAL        shift, and go to state 84
  LEQUAL        [reduce using rule 102 (expression)]
  EQUALITY      shift, and go to state 85
  EQUALITY      [reduce using rule 102 (expression)]
  DIFFERENT     shift, and go to state 86
  DIFFERENT     [reduce using rule 102 (expression)]
  AND           shift, and go to state 87
  AND           [reduce using rule 102 (expression)]
  OR            shift, and go to state 88
  OR            [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 102

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 104) expression : expression boolean_operator expression _

  MOD           shift, and go to state 75
  MOD           [reduce using rule 104 (expression)]
  MULT          shift, and go to state 73
  MULT          [reduce using rule 104 (expression)]
  DIV           shift, and go to state 74
  DIV           [reduce using rule 104 (expression)]
  PLUS          shift, and go to state 76
  PLUS          [reduce using rule 104 (expression)]
  MINUS         shift, and go to state 77
  MINUS         [reduce using rule 104 (expression)]
  MTHAN         shift, and go to state 81
  MTHAN         [reduce using rule 104 (expression)]
  MEQUAL        shift, and go to state 83
  MEQUAL        [reduce using rule 104 (expression)]
  LTHAN         shift, and go to state 82
  LTHAN         [reduce using rule 104 (expression)]
  LEQUAL        shift, and go to state 84
  LEQUAL        [reduce using rule 104 (expression)]
  EQUALITY      shift, and go to state 85
  EQUALITY      [reduce using rule 104 (expression)]
  DIFFERENT     shift, and go to state 86
  DIFFERENT     [reduce using rule 104 (expression)]
  AND           shift, and go to state 87
  AND           [reduce using rule 104 (expression)]
  OR            shift, and go to state 88
  OR            [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 103

  78) reference_expression5 : PLEFT reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 114


state 104

  82) reference_expression6 : arglist _

  $default      reduce using rule 82 (reference_expression6)


state 105

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 110) arglist : expression _ arglist1

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  COMA          shift, and go to state 116
  $default      reduce using rule 111 (arglist1)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80
  arglist1      go to state 115

state 106

  79) reference_expression5 : SBLEFT expression _ SBRIGHT
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 117

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 107

  77) reference_expression2 : reference_expression _ reference_expression5
  80) reference_expression5 : POINT reference_expression _

  POINT         shift, and go to state 92
  SBLEFT        shift, and go to state 91
  SBLEFT        [reduce using rule 80 (reference_expression5)]
  PLEFT         shift, and go to state 90
  PLEFT         [reduce using rule 80 (reference_expression5)]
  $default      reduce using rule 80 (reference_expression5)

  reference_expression5  go to state 89

state 108

 107) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 107 (expression)


state 109

  42) method_declaration : FUNK method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 120
  BLEFT         shift, and go to state 121

  method_declaration4  go to state 118
  statement_block  go to state 119

state 110

  48) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 48 (method_declaration3)


state 111

  65) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 65 (parameter_list)


state 112

  67) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  parameter     go to state 97
  parameter_list  go to state 122
  type          go to state 98

state 113

  83) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 125
  $default      reduce using rule 84 (parameter1)

  parameter1    go to state 123
  parameter2    go to state 124

state 114

  78) reference_expression5 : PLEFT reference_expression6 PRIGHT _

  $default      reduce using rule 78 (reference_expression5)


state 115

 110) arglist : expression arglist1 _

  $default      reduce using rule 110 (arglist)


state 116

 112) arglist1 : COMA _ arglist

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 105
  literal_expression  go to state 66
  arglist       go to state 126

state 117

  79) reference_expression5 : SBLEFT expression SBRIGHT _

  $default      reduce using rule 79 (reference_expression5)


state 118

  42) method_declaration : FUNK method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 42 (method_declaration)


state 119

  49) method_declaration4 : statement_block _

  $default      reduce using rule 49 (method_declaration4)


state 120

  50) method_declaration4 : SEMIC _

  $default      reduce using rule 50 (method_declaration4)


state 121

  68) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 69 (statement_block1)

  variable_declaration2  go to state 20
  statement_block1  go to state 127
  variable_declaration  go to state 128

state 122

  67) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 67 (parameter_list1)


state 123

  83) parameter : type ID parameter1 _

  $default      reduce using rule 83 (parameter)


state 124

  85) parameter1 : parameter2 _

  $default      reduce using rule 85 (parameter1)


state 125

  86) parameter2 : SBLEFT _ expression SBRIGHT parameter3

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 129
  literal_expression  go to state 66

state 126

 112) arglist1 : COMA arglist _

  $default      reduce using rule 112 (arglist1)


state 127

  68) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69
  $default      reduce using rule 71 (statement_block2)

  statement_block2  go to state 131
  statement     go to state 132
  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66

state 128

  70) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 69 (statement_block1)

  variable_declaration2  go to state 20
  variable_declaration  go to state 128
  statement_block1  go to state 147

state 129

  86) parameter2 : SBLEFT expression _ SBRIGHT parameter3
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 148

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 130

  28) variable_assignment : ID _ variable_assignment1 assign_operator variable_value
  75) reference_expression : ID _

  SBLEFT        shift, and go to state 151
  SBLEFT        [reduce using rule 75 (reference_expression)]
  EQUAL         reduce using rule 29 (variable_assignment1)
  PLUSASSIGN    reduce using rule 29 (variable_assignment1)
  MINUSASSIGN   reduce using rule 29 (variable_assignment1)
  MULTASSIGN    reduce using rule 29 (variable_assignment1)
  DIVASSIGN     reduce using rule 29 (variable_assignment1)
  ORASSIGN      reduce using rule 29 (variable_assignment1)
  ANDASSIGN     reduce using rule 29 (variable_assignment1)
  MODASSIGN     reduce using rule 29 (variable_assignment1)
  $default      reduce using rule 75 (reference_expression)

  variable_assignment1  go to state 149
  variable_assignment4  go to state 150

state 131

  68) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 152


state 132

  72) statement_block2 : statement _ statement_block2

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69
  $default      reduce using rule 71 (statement_block2)

  statement     go to state 132
  statement_block2  go to state 153
  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66

state 133

  89) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 154


state 134

  90) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 155


state 135

  91) statement : expression _ SEMIC
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SEMIC         shift, and go to state 156

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 136

  92) statement : statement_block _

  $default      reduce using rule 92 (statement)


state 137

  93) statement : unless_statement _

  $default      reduce using rule 93 (statement)


state 138

  94) statement : if_statement _

  $default      reduce using rule 94 (statement)


state 139

  95) statement : do_statement _

  $default      reduce using rule 95 (statement)


state 140

  96) statement : while_statement _

  $default      reduce using rule 96 (statement)


state 141

  97) statement : REPLY _ statement1 SEMIC

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69
  $default      reduce using rule 99 (statement1)

  reference_expression2  go to state 60
  reference_expression  go to state 61
  statement1    go to state 157
  expression    go to state 158
  literal_expression  go to state 66

state 142

  98) statement : SEMIC _

  $default      reduce using rule 98 (statement)


state 143

 113) unless_statement : UNLESS _ PLEFT expression PRIGHT statement unless_statement1

  PLEFT         shift, and go to state 159


state 144

 116) if_statement : IF _ PLEFT expression PRIGHT statement if_statement1

  PLEFT         shift, and go to state 160


state 145

 119) do_statement : DO _ statement WHILE PLEFT expression PRIGHT SEMIC

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66
  statement     go to state 161

state 146

 120) while_statement : WHILE _ PLEFT expression PRIGHT statement

  PLEFT         shift, and go to state 162


state 147

  70) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 70 (statement_block1)


state 148

  86) parameter2 : SBLEFT expression SBRIGHT _ parameter3

  SBLEFT        shift, and go to state 125
  $default      reduce using rule 87 (parameter3)

  parameter3    go to state 163
  parameter2    go to state 164

state 149

  28) variable_assignment : ID variable_assignment1 _ assign_operator variable_value

  EQUAL         shift, and go to state 166
  PLUSASSIGN    shift, and go to state 167
  MINUSASSIGN   shift, and go to state 168
  MULTASSIGN    shift, and go to state 169
  DIVASSIGN     shift, and go to state 170
  ORASSIGN      shift, and go to state 171
  ANDASSIGN     shift, and go to state 172
  MODASSIGN     shift, and go to state 173

  assign_operator  go to state 165

state 150

  30) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 151
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 174
  variable_assignment4  go to state 175

state 151

  39) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  expression    go to state 176
  reference_expression2  go to state 60
  reference_expression  go to state 61
  literal_expression  go to state 66

state 152

  68) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 68 (statement_block)


state 153

  72) statement_block2 : statement statement_block2 _

  $default      reduce using rule 72 (statement_block2)


state 154

  89) statement : variable_assignment SEMIC _

  $default      reduce using rule 89 (statement)


state 155

  90) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 177
  literal_expression  go to state 66

state 156

  91) statement : expression SEMIC _

  $default      reduce using rule 91 (statement)


state 157

  97) statement : REPLY statement1 _ SEMIC

  SEMIC         shift, and go to state 178


state 158

 100) statement1 : expression _
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  $default      reduce using rule 100 (statement1)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 159

 113) unless_statement : UNLESS PLEFT _ expression PRIGHT statement unless_statement1

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 179
  literal_expression  go to state 66

state 160

 116) if_statement : IF PLEFT _ expression PRIGHT statement if_statement1

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 180
  literal_expression  go to state 66

state 161

 119) do_statement : DO statement _ WHILE PLEFT expression PRIGHT SEMIC

  WHILE         shift, and go to state 181


state 162

 120) while_statement : WHILE PLEFT _ expression PRIGHT statement

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 182
  literal_expression  go to state 66

state 163

  86) parameter2 : SBLEFT expression SBRIGHT parameter3 _

  $default      reduce using rule 86 (parameter2)


state 164

  88) parameter3 : parameter2 _

  $default      reduce using rule 88 (parameter3)


state 165

  28) variable_assignment : ID variable_assignment1 assign_operator _ variable_value

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  HEAR          shift, and go to state 185
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  variable_value  go to state 183
  expression    go to state 184
  reference_expression2  go to state 60
  reference_expression  go to state 61
  literal_expression  go to state 66

state 166

  31) assign_operator : EQUAL _

  $default      reduce using rule 31 (assign_operator)


state 167

  32) assign_operator : PLUSASSIGN _

  $default      reduce using rule 32 (assign_operator)


state 168

  33) assign_operator : MINUSASSIGN _

  $default      reduce using rule 33 (assign_operator)


state 169

  34) assign_operator : MULTASSIGN _

  $default      reduce using rule 34 (assign_operator)


state 170

  35) assign_operator : DIVASSIGN _

  $default      reduce using rule 35 (assign_operator)


state 171

  36) assign_operator : ORASSIGN _

  $default      reduce using rule 36 (assign_operator)


state 172

  37) assign_operator : ANDASSIGN _

  $default      reduce using rule 37 (assign_operator)


state 173

  38) assign_operator : MODASSIGN _

  $default      reduce using rule 38 (assign_operator)


state 174

  30) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 30 (variable_assignment1)


state 175

  41) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 41 (variable_assignment5)


state 176

  39) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 186

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 177

  90) statement : SAY PLEFT expression _ PRIGHT SEMIC
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 187

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 178

  97) statement : REPLY statement1 SEMIC _

  $default      reduce using rule 97 (statement)


state 179

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 113) unless_statement : UNLESS PLEFT expression _ PRIGHT statement unless_statement1

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 188

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 180

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 116) if_statement : IF PLEFT expression _ PRIGHT statement if_statement1

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 189

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 181

 119) do_statement : DO statement WHILE _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 190


state 182

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 120) while_statement : WHILE PLEFT expression _ PRIGHT statement

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 191

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 183

  28) variable_assignment : ID variable_assignment1 assign_operator variable_value _

  $default      reduce using rule 28 (variable_assignment)


state 184

  63) variable_value : expression _
 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  $default      reduce using rule 63 (variable_value)

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 185

  64) variable_value : HEAR _ PLEFT PRIGHT

  PLEFT         shift, and go to state 192


state 186

  39) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 151
  SBLEFT        [reduce using rule 40 (variable_assignment5)]
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 193
  variable_assignment4  go to state 175

state 187

  90) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 194


state 188

 113) unless_statement : UNLESS PLEFT expression PRIGHT _ statement unless_statement1

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66
  statement     go to state 195

state 189

 116) if_statement : IF PLEFT expression PRIGHT _ statement if_statement1

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66
  statement     go to state 196

state 190

 119) do_statement : DO statement WHILE PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 62
  ID            shift, and go to state 59
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  expression    go to state 197
  literal_expression  go to state 66

state 191

 120) while_statement : WHILE PLEFT expression PRIGHT _ statement

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66
  statement     go to state 198

state 192

  64) variable_value : HEAR PLEFT _ PRIGHT

  PRIGHT        shift, and go to state 199


state 193

  39) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 39 (variable_assignment4)


state 194

  90) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 90 (statement)


state 195

 113) unless_statement : UNLESS PLEFT expression PRIGHT statement _ unless_statement1

  ELSE          shift, and go to state 201
  ELSE          [reduce using rule 114 (unless_statement1)]
  $default      reduce using rule 114 (unless_statement1)

  unless_statement1  go to state 200

state 196

 116) if_statement : IF PLEFT expression PRIGHT statement _ if_statement1

  ELSE          shift, and go to state 203
  ELSE          [reduce using rule 117 (if_statement1)]
  $default      reduce using rule 117 (if_statement1)

  if_statement1  go to state 202

state 197

 101) expression : expression _ num_operator expression
 102) expression : expression _ testing_operator expression
 104) expression : expression _ boolean_operator expression
 119) do_statement : DO statement WHILE PLEFT expression _ PRIGHT SEMIC

  MOD           shift, and go to state 75
  MULT          shift, and go to state 73
  DIV           shift, and go to state 74
  PLUS          shift, and go to state 76
  MINUS         shift, and go to state 77
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 204

  num_operator  go to state 78
  testing_operator  go to state 79
  boolean_operator  go to state 80

state 198

 120) while_statement : WHILE PLEFT expression PRIGHT statement _

  $default      reduce using rule 120 (while_statement)


state 199

  64) variable_value : HEAR PLEFT PRIGHT _

  $default      reduce using rule 64 (variable_value)


state 200

 113) unless_statement : UNLESS PLEFT expression PRIGHT statement unless_statement1 _

  $default      reduce using rule 113 (unless_statement)


state 201

 115) unless_statement1 : ELSE _ statement

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66
  statement     go to state 205

state 202

 116) if_statement : IF PLEFT expression PRIGHT statement if_statement1 _

  $default      reduce using rule 116 (if_statement)


state 203

 118) if_statement1 : ELSE _ statement

  NOT           shift, and go to state 62
  SEMIC         shift, and go to state 142
  BLEFT         shift, and go to state 121
  ID            shift, and go to state 130
  PLEFT         shift, and go to state 65
  NULL          shift, and go to state 57
  ITSELF        shift, and go to state 58
  SAY           shift, and go to state 134
  REPLY         shift, and go to state 141
  TRUE          shift, and go to state 63
  FALSE         shift, and go to state 64
  UNLESS        shift, and go to state 143
  IF            shift, and go to state 144
  DO            shift, and go to state 145
  WHILE         shift, and go to state 146
  CTED          shift, and go to state 67
  CTEN          shift, and go to state 68
  CTESTRING     shift, and go to state 69

  reference_expression2  go to state 60
  reference_expression  go to state 61
  variable_assignment  go to state 133
  expression    go to state 135
  statement_block  go to state 136
  unless_statement  go to state 137
  if_statement  go to state 138
  do_statement  go to state 139
  while_statement  go to state 140
  literal_expression  go to state 66
  statement     go to state 206

state 204

 119) do_statement : DO statement WHILE PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 207


state 205

 115) unless_statement1 : ELSE statement _

  $default      reduce using rule 115 (unless_statement1)


state 206

 118) if_statement1 : ELSE statement _

  $default      reduce using rule 118 (if_statement1)


state 207

 119) do_statement : DO statement WHILE PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 119 (do_statement)

