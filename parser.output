state 176 contains 1 shift/reduce conflicts
state 177 contains 1 shift/reduce conflicts
state 196 contains 14 shift/reduce conflicts
state 197 contains 1 shift/reduce conflicts
state 198 contains 1 shift/reduce conflicts
state 199 contains 1 shift/reduce conflicts
state 200 contains 1 shift/reduce conflicts
state 201 contains 1 shift/reduce conflicts
state 202 contains 1 shift/reduce conflicts
state 203 contains 1 shift/reduce conflicts
state 204 contains 1 shift/reduce conflicts
state 205 contains 1 shift/reduce conflicts
state 206 contains 1 shift/reduce conflicts
state 207 contains 1 shift/reduce conflicts
state 208 contains 1 shift/reduce conflicts
state 209 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type_specifier some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: new_var_id array_dec
rule 23 new_var_id: ID
rule 24 next_variable: 
rule 25 next_variable: COMA some_variables
rule 26 array_dec: 
rule 27 array_dec: start_array bounds array_dec2 SBRIGHT
rule 28 start_array: SBLEFT
rule 29 array_dec2: 
rule 30 array_dec2: COMA bounds array_dec2
rule 31 bounds: CTEN POINT POINT CTEN
rule 32 variable_assignment: id_reference EQUAL expression
rule 33 variable_assignment: id_reference PLUSASSIGN expression
rule 34 variable_assignment: id_reference MINUSASSIGN expression
rule 35 variable_assignment: id_reference MULTASSIGN expression
rule 36 variable_assignment: id_reference DIVASSIGN expression
rule 37 variable_assignment: id_reference ORASSIGN expression
rule 38 variable_assignment: id_reference ANDASSIGN expression
rule 39 variable_assignment: id_reference MODASSIGN expression
rule 40 array_call: start_array_call array_index array_call2 SBRIGHT
rule 41 start_array_call: SBLEFT
rule 42 array_call2: 
rule 43 array_call2: COMA array_index array_call2
rule 44 array_index: expression
rule 45 method_declaration: new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 46 new_function_code: FUNK
rule 47 method_declaration1: 
rule 48 method_declaration1: modifier
rule 49 method_declaration2: ID
rule 50 method_declaration2: CHIEF
rule 51 method_declaration3: 
rule 52 method_declaration3: parameter_list method_declaration3
rule 53 method_declaration4: statement_block
rule 54 method_declaration4: SEMIC
rule 55 type_specifier: LOGIC
rule 56 type_specifier: CHAR
rule 57 type_specifier: NUMBER
rule 58 type_specifier: DECIMAL
rule 59 type_specifier: ID
rule 60 type_specifier: OBLIVION
rule 61 type_specifier: STRING
rule 62 parameter_list: parameter parameter_list1
rule 63 parameter_list1: 
rule 64 parameter_list1: COMA parameter_list
rule 65 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 66 statement_block1: 
rule 67 statement_block1: variable_declaration statement_block1
rule 68 statement_block2: 
rule 69 statement_block2: statement statement_block2
rule 70 reference_expression: id_reference
rule 71 reference_expression: non_final_id POINT function_call
rule 72 reference_expression: non_final_id POINT reference_expression5
rule 73 reference_expression: function_call
rule 74 id_reference: base_id
rule 75 id_reference: base_id array_call
rule 76 base_id: ID
rule 77 non_final_id: ID
rule 78 function_call: funk_id start_funk reference_expression6 PRIGHT
rule 79 funk_id: ID
rule 80 start_funk: PLEFT
rule 81 reference_expression5: ID
rule 82 reference_expression5: ID POINT reference_expression5
rule 83 reference_expression6: 
rule 84 reference_expression6: arglist
rule 85 parameter: type_specifier ID
rule 86 statement: variable_assignment SEMIC
rule 87 statement: SAY PLEFT expression PRIGHT SEMIC
rule 88 statement: HEAR PLEFT reference_expression PRIGHT SEMIC
rule 89 statement: unless_statement
rule 90 statement: if_statement
rule 91 statement: do_statement
rule 92 statement: while_statement
rule 93 statement: REPLY expression SEMIC
rule 94 statement: function_call SEMIC
rule 95 statement: non_final_id POINT function_call SEMIC
rule 96 expression: expression SUM expression
rule 97 expression: expression DIV expression
rule 98 expression: expression MOD expression
rule 99 expression: expression PLUS expression
rule 100 expression: expression MINUS expression
rule 101 expression: expression MULT expression
rule 102 expression: expression MTHAN expression
rule 103 expression: expression LTHAN expression
rule 104 expression: expression MEQUAL expression
rule 105 expression: expression LEQUAL expression
rule 106 expression: expression EQUALITY expression
rule 107 expression: expression DIFFERENT expression
rule 108 expression: NOT expression
rule 109 expression: MINUS expression
rule 110 expression: expression AND expression
rule 111 expression: expression OR expression
rule 112 expression: TRUE
rule 113 expression: FALSE
rule 114 expression: PLEFT expression PRIGHT
rule 115 expression: literal_expression
rule 116 expression: reference_expression
rule 117 arglist: generate_arg arglist1
rule 118 generate_arg: expression
rule 119 arglist1: 
rule 120 arglist1: COMA arglist
rule 121 unless_statement: UNLESS expression statement_block unless_statement1
rule 122 unless_statement1: 
rule 123 unless_statement1: ELSE statement_block
rule 124 if_statement: IF push_if_floor validateLogicexp statement_block if_statement1
rule 125 if_statement1: 
rule 126 if_statement1: ELSIF generateElseCode validateLogicexp statement_block if_statement1
rule 127 if_statement1: ELSE generateElseCode statement_block
rule 128 do_statement: DO push_cont_jump statement_block WHILE validateDoWhileExp
rule 129 validateDoWhileExp: expression
rule 130 while_statement: WHILE push_cont_jump validateLogicexp statement_block
rule 131 push_cont_jump: 
rule 132 push_if_floor: 
rule 133 validateLogicexp: expression
rule 134 generateElseCode: 
rule 135 literal_expression: CTED
rule 136 literal_expression: CTEN
rule 137 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (64)
    on right: 
    on left : 
  supreme_plox (65)
    on right: 
    on left : 1
  plox_generation (66)
    on right: 1 3
    on left : 2 3
  type_declaration (67)
    on right: 3
    on left : 4
  class_declaration (68)
    on right: 4
    on left : 5
  code_new_class (69)
    on right: 5
    on left : 6
  code_heirof (70)
    on right: 5
    on left : 7 8
  class_body (71)
    on right: 5
    on left : 9
  class_variable_block (72)
    on right: 9 11
    on left : 10 11
  class_function_block (73)
    on right: 9 13
    on left : 12 13
  variable_declaration (74)
    on right: 11 67
    on left : 16
  method_declaration (75)
    on right: 13
    on left : 45
  modifier (76)
    on right: 18 48
    on left : 14 15
  variable_is_modifiable (77)
    on right: 16
    on left : 19 20
  variable_scope (78)
    on right: 16
    on left : 17 18
  type_specifier (79)
    on right: 16 45 85
    on left : 55 56 57 58 59 60 61
  some_variables (80)
    on right: 16 25
    on left : 21
  code_new_variable (81)
    on right: 21
    on left : 22
  next_variable (82)
    on right: 21
    on left : 24 25
  new_var_id (83)
    on right: 22
    on left : 23
  array_dec (84)
    on right: 22
    on left : 26 27
  start_array (85)
    on right: 27
    on left : 28
  bounds (86)
    on right: 27 30
    on left : 31
  array_dec2 (87)
    on right: 27 30
    on left : 29 30
  variable_assignment (88)
    on right: 86
    on left : 32 33 34 35 36 37 38 39
  id_reference (89)
    on right: 32 33 34 35 36 37 38 39 70
    on left : 74 75
  expression (90)
    on right: 32 33 34 35 36 37 38 39 44 87 93 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 114 118 121 129 133
    on left : 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
  array_call (91)
    on right: 75
    on left : 40
  start_array_call (92)
    on right: 40
    on left : 41
  array_index (93)
    on right: 40 43
    on left : 44
  array_call2 (94)
    on right: 40 43
    on left : 42 43
  new_function_code (95)
    on right: 45
    on left : 46
  method_declaration1 (96)
    on right: 45
    on left : 47 48
  method_declaration2 (97)
    on right: 45
    on left : 49 50
  method_declaration3 (98)
    on right: 45 52
    on left : 51 52
  method_declaration4 (99)
    on right: 45
    on left : 53 54
  parameter_list (100)
    on right: 52 64
    on left : 62
  statement_block (101)
    on right: 53 121 123 124 126 127 128 130
    on left : 65
  parameter (102)
    on right: 62
    on left : 85
  parameter_list1 (103)
    on right: 62
    on left : 63 64
  statement_block1 (104)
    on right: 65 67
    on left : 66 67
  statement_block2 (105)
    on right: 65 69
    on left : 68 69
  statement (106)
    on right: 69
    on left : 86 87 88 89 90 91 92 93 94 95
  reference_expression (107)
    on right: 88 116
    on left : 70 71 72 73
  non_final_id (108)
    on right: 71 72 95
    on left : 77
  function_call (109)
    on right: 71 73 94 95
    on left : 78
  reference_expression5 (110)
    on right: 72 82
    on left : 81 82
  base_id (111)
    on right: 74 75
    on left : 76
  funk_id (112)
    on right: 78
    on left : 79
  start_funk (113)
    on right: 78
    on left : 80
  reference_expression6 (114)
    on right: 78
    on left : 83 84
  arglist (115)
    on right: 84 120
    on left : 117
  unless_statement (116)
    on right: 89
    on left : 121
  if_statement (117)
    on right: 90
    on left : 124
  do_statement (118)
    on right: 91
    on left : 128
  while_statement (119)
    on right: 92
    on left : 130
  literal_expression (120)
    on right: 115
    on left : 135 136 137
  generate_arg (121)
    on right: 117
    on left : 118
  arglist1 (122)
    on right: 117
    on left : 119 120
  unless_statement1 (123)
    on right: 121
    on left : 122 123
  push_if_floor (124)
    on right: 124
    on left : 132
  validateLogicexp (125)
    on right: 124 126 130
    on left : 133
  if_statement1 (126)
    on right: 124 126
    on left : 125 126 127
  generateElseCode (127)
    on right: 126 127
    on left : 134
  push_cont_jump (128)
    on right: 128 130
    on left : 131
  validateDoWhileExp (129)
    on right: 128
    on left : 129

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 31 71 72 82 95
  NOT (3) 108
  MOD (4) 98
  MULT (5) 101
  DIV (6) 97
  PLUS (7) 99
  MINUS (8) 100 109
  MTHAN (9) 102
  MEQUAL (10) 104
  LTHAN (11) 103
  LEQUAL (12) 105
  EQUALITY (13) 106
  DIFFERENT (14) 107
  AND (15) 110
  OR (16) 111
  EQUAL (17) 32
  PLUSASSIGN (18) 33
  MINUSASSIGN (19) 34
  MULTASSIGN (20) 35
  DIVASSIGN (21) 36
  ORASSIGN (22) 37
  ANDASSIGN (23) 38
  MODASSIGN (24) 39
  SEMIC (25) 16 54 86 87 88 93 94 95
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 65
  BRIGHT (29) 5 65
  ID (30) 6 8 23 49 59 76 77 79 81 82 85
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 25 30 43 64 120
  SBRIGHT (37) 27 40
  SBLEFT (38) 28 41
  CTEN (39) 31 136
  PLEFT (40) 45 80 87 88 114
  PRIGHT (41) 45 78 87 88 114
  FUNK (42) 46
  CHIEF (43) 50
  LOGIC (44) 55
  CHAR (45) 56
  NUMBER (46) 57
  DECIMAL (47) 58
  OBLIVION (48) 60
  STRING (49) 61
  SAY (50) 87
  HEAR (51) 88
  REPLY (52) 93
  SUM (53) 96
  TRUE (54) 112
  FALSE (55) 113
  UNLESS (56) 121
  ELSE (57) 123 127
  IF (58) 124
  ELSIF (59) 126
  DO (60) 128
  WHILE (61) 128 130
  CTED (62) 135
  CTESTRING (63) 137

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _

  $default      reduce using rule 4 (type_declaration)


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 11

  code_new_class  go to state 10

state 9


  $default      accept


state 10

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 13
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 12

state 11

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 12

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 14


state 13

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 15


state 14

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 16
  class_variable_block  go to state 17
  variable_declaration  go to state 18
  variable_is_modifiable  go to state 19

state 15

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 16

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 22


state 17

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 23
  method_declaration  go to state 24
  new_function_code  go to state 25

state 18

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 18
  class_variable_block  go to state 27
  variable_is_modifiable  go to state 19

state 19

  16) variable_declaration : variable_is_modifiable _ variable_scope type_specifier some_variables SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 30
  modifier      go to state 31

state 20

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 21

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 22

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 23

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 24

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 24
  class_function_block  go to state 32
  new_function_code  go to state 25

state 25

  45) method_declaration : new_function_code _ method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 47 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 26

  46) new_function_code : FUNK _

  $default      reduce using rule 46 (new_function_code)


state 27

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_is_modifiable variable_scope _ type_specifier some_variables SEMIC

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42

  type_specifier  go to state 35

state 31

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 32

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 33

  45) method_declaration : new_function_code method_declaration1 _ type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42

  type_specifier  go to state 43

state 34

  48) method_declaration1 : modifier _

  $default      reduce using rule 48 (method_declaration1)


state 35

  16) variable_declaration : variable_is_modifiable variable_scope type_specifier _ some_variables SEMIC

  ID            shift, and go to state 47

  some_variables  go to state 44
  code_new_variable  go to state 45
  new_var_id    go to state 46

state 36

  55) type_specifier : LOGIC _

  $default      reduce using rule 55 (type_specifier)


state 37

  56) type_specifier : CHAR _

  $default      reduce using rule 56 (type_specifier)


state 38

  57) type_specifier : NUMBER _

  $default      reduce using rule 57 (type_specifier)


state 39

  58) type_specifier : DECIMAL _

  $default      reduce using rule 58 (type_specifier)


state 40

  59) type_specifier : ID _

  $default      reduce using rule 59 (type_specifier)


state 41

  60) type_specifier : OBLIVION _

  $default      reduce using rule 60 (type_specifier)


state 42

  61) type_specifier : STRING _

  $default      reduce using rule 61 (type_specifier)


state 43

  45) method_declaration : new_function_code method_declaration1 type_specifier _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 49
  CHIEF         shift, and go to state 50

  method_declaration2  go to state 48

state 44

  16) variable_declaration : variable_is_modifiable variable_scope type_specifier some_variables _ SEMIC

  SEMIC         shift, and go to state 51


state 45

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 53
  $default      reduce using rule 24 (next_variable)

  next_variable  go to state 52

state 46

  22) code_new_variable : new_var_id _ array_dec

  SBLEFT        shift, and go to state 56
  $default      reduce using rule 26 (array_dec)

  array_dec     go to state 54
  start_array   go to state 55

state 47

  23) new_var_id : ID _

  $default      reduce using rule 23 (new_var_id)


state 48

  45) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 57


state 49

  49) method_declaration2 : ID _

  $default      reduce using rule 49 (method_declaration2)


state 50

  50) method_declaration2 : CHIEF _

  $default      reduce using rule 50 (method_declaration2)


state 51

  16) variable_declaration : variable_is_modifiable variable_scope type_specifier some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 52

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 53

  25) next_variable : COMA _ some_variables

  ID            shift, and go to state 47

  code_new_variable  go to state 45
  new_var_id    go to state 46
  some_variables  go to state 58

state 54

  22) code_new_variable : new_var_id array_dec _

  $default      reduce using rule 22 (code_new_variable)


state 55

  27) array_dec : start_array _ bounds array_dec2 SBRIGHT

  CTEN          shift, and go to state 60

  bounds        go to state 59

state 56

  28) start_array : SBLEFT _

  $default      reduce using rule 28 (start_array)


state 57

  45) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42
  $default      reduce using rule 51 (method_declaration3)

  method_declaration3  go to state 61
  parameter_list  go to state 62
  parameter     go to state 63
  type_specifier  go to state 64

state 58

  25) next_variable : COMA some_variables _

  $default      reduce using rule 25 (next_variable)


state 59

  27) array_dec : start_array bounds _ array_dec2 SBRIGHT

  COMA          shift, and go to state 66
  $default      reduce using rule 29 (array_dec2)

  array_dec2    go to state 65

state 60

  31) bounds : CTEN _ POINT POINT CTEN

  POINT         shift, and go to state 67


state 61

  45) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 68


state 62

  52) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42
  $default      reduce using rule 51 (method_declaration3)

  parameter_list  go to state 62
  method_declaration3  go to state 69
  parameter     go to state 63
  type_specifier  go to state 64

state 63

  62) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 71
  $default      reduce using rule 63 (parameter_list1)

  parameter_list1  go to state 70

state 64

  85) parameter : type_specifier _ ID

  ID            shift, and go to state 72


state 65

  27) array_dec : start_array bounds array_dec2 _ SBRIGHT

  SBRIGHT       shift, and go to state 73


state 66

  30) array_dec2 : COMA _ bounds array_dec2

  CTEN          shift, and go to state 60

  bounds        go to state 74

state 67

  31) bounds : CTEN POINT _ POINT CTEN

  POINT         shift, and go to state 75


state 68

  45) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 78
  BLEFT         shift, and go to state 79

  method_declaration4  go to state 76
  statement_block  go to state 77

state 69

  52) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 52 (method_declaration3)


state 70

  62) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 62 (parameter_list)


state 71

  64) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42

  parameter     go to state 63
  parameter_list  go to state 80
  type_specifier  go to state 64

state 72

  85) parameter : type_specifier ID _

  $default      reduce using rule 85 (parameter)


state 73

  27) array_dec : start_array bounds array_dec2 SBRIGHT _

  $default      reduce using rule 27 (array_dec)


state 74

  30) array_dec2 : COMA bounds _ array_dec2

  COMA          shift, and go to state 66
  $default      reduce using rule 29 (array_dec2)

  array_dec2    go to state 81

state 75

  31) bounds : CTEN POINT POINT _ CTEN

  CTEN          shift, and go to state 82


state 76

  45) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 45 (method_declaration)


state 77

  53) method_declaration4 : statement_block _

  $default      reduce using rule 53 (method_declaration4)


state 78

  54) method_declaration4 : SEMIC _

  $default      reduce using rule 54 (method_declaration4)


state 79

  65) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 66 (statement_block1)

  variable_is_modifiable  go to state 19
  statement_block1  go to state 83
  variable_declaration  go to state 84

state 80

  64) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 64 (parameter_list1)


state 81

  30) array_dec2 : COMA bounds array_dec2 _

  $default      reduce using rule 30 (array_dec2)


state 82

  31) bounds : CTEN POINT POINT CTEN _

  $default      reduce using rule 31 (bounds)


state 83

  65) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  ID            shift, and go to state 89
  SAY           shift, and go to state 92
  HEAR          shift, and go to state 93
  REPLY         shift, and go to state 98
  UNLESS        shift, and go to state 101
  IF            shift, and go to state 102
  DO            shift, and go to state 103
  WHILE         shift, and go to state 104
  $default      reduce using rule 68 (statement_block2)

  id_reference  go to state 85
  statement_block2  go to state 86
  statement     go to state 87
  base_id       go to state 88
  funk_id       go to state 90
  variable_assignment  go to state 91
  unless_statement  go to state 94
  if_statement  go to state 95
  do_statement  go to state 96
  while_statement  go to state 97
  function_call  go to state 99
  non_final_id  go to state 100

state 84

  67) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 66 (statement_block1)

  variable_is_modifiable  go to state 19
  variable_declaration  go to state 84
  statement_block1  go to state 105

state 85

  32) variable_assignment : id_reference _ EQUAL expression
  33) variable_assignment : id_reference _ PLUSASSIGN expression
  34) variable_assignment : id_reference _ MINUSASSIGN expression
  35) variable_assignment : id_reference _ MULTASSIGN expression
  36) variable_assignment : id_reference _ DIVASSIGN expression
  37) variable_assignment : id_reference _ ORASSIGN expression
  38) variable_assignment : id_reference _ ANDASSIGN expression
  39) variable_assignment : id_reference _ MODASSIGN expression

  EQUAL         shift, and go to state 106
  PLUSASSIGN    shift, and go to state 107
  MINUSASSIGN   shift, and go to state 108
  MULTASSIGN    shift, and go to state 109
  DIVASSIGN     shift, and go to state 110
  ORASSIGN      shift, and go to state 111
  ANDASSIGN     shift, and go to state 112
  MODASSIGN     shift, and go to state 113


state 86

  65) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 114


state 87

  69) statement_block2 : statement _ statement_block2

  ID            shift, and go to state 89
  SAY           shift, and go to state 92
  HEAR          shift, and go to state 93
  REPLY         shift, and go to state 98
  UNLESS        shift, and go to state 101
  IF            shift, and go to state 102
  DO            shift, and go to state 103
  WHILE         shift, and go to state 104
  $default      reduce using rule 68 (statement_block2)

  id_reference  go to state 85
  statement     go to state 87
  statement_block2  go to state 115
  base_id       go to state 88
  funk_id       go to state 90
  variable_assignment  go to state 91
  unless_statement  go to state 94
  if_statement  go to state 95
  do_statement  go to state 96
  while_statement  go to state 97
  function_call  go to state 99
  non_final_id  go to state 100

state 88

  74) id_reference : base_id _
  75) id_reference : base_id _ array_call

  SBLEFT        shift, and go to state 117
  $default      reduce using rule 74 (id_reference)

  start_array_call  go to state 116
  array_call    go to state 118

state 89

  76) base_id : ID _
  77) non_final_id : ID _
  79) funk_id : ID _

  POINT         reduce using rule 77 (non_final_id)
  PLEFT         reduce using rule 79 (funk_id)
  $default      reduce using rule 76 (base_id)


state 90

  78) function_call : funk_id _ start_funk reference_expression6 PRIGHT

  PLEFT         shift, and go to state 120

  start_funk    go to state 119

state 91

  86) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 121


state 92

  87) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 122


state 93

  88) statement : HEAR _ PLEFT reference_expression PRIGHT SEMIC

  PLEFT         shift, and go to state 123


state 94

  89) statement : unless_statement _

  $default      reduce using rule 89 (statement)


state 95

  90) statement : if_statement _

  $default      reduce using rule 90 (statement)


state 96

  91) statement : do_statement _

  $default      reduce using rule 91 (statement)


state 97

  92) statement : while_statement _

  $default      reduce using rule 92 (statement)


state 98

  93) statement : REPLY _ expression SEMIC

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 127
  literal_expression  go to state 133
  reference_expression  go to state 134

state 99

  94) statement : function_call _ SEMIC

  SEMIC         shift, and go to state 138


state 100

  95) statement : non_final_id _ POINT function_call SEMIC

  POINT         shift, and go to state 139


state 101

 121) unless_statement : UNLESS _ expression statement_block unless_statement1

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 140
  literal_expression  go to state 133
  reference_expression  go to state 134

state 102

 124) if_statement : IF _ push_if_floor validateLogicexp statement_block if_statement1

  $default      reduce using rule 132 (push_if_floor)

  push_if_floor  go to state 141

state 103

 128) do_statement : DO _ push_cont_jump statement_block WHILE validateDoWhileExp

  $default      reduce using rule 131 (push_cont_jump)

  push_cont_jump  go to state 142

state 104

 130) while_statement : WHILE _ push_cont_jump validateLogicexp statement_block

  $default      reduce using rule 131 (push_cont_jump)

  push_cont_jump  go to state 143

state 105

  67) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 67 (statement_block1)


state 106

  32) variable_assignment : id_reference EQUAL _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 144
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 107

  33) variable_assignment : id_reference PLUSASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 145
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 108

  34) variable_assignment : id_reference MINUSASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 146
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 109

  35) variable_assignment : id_reference MULTASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 147
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 110

  36) variable_assignment : id_reference DIVASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 148
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 111

  37) variable_assignment : id_reference ORASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 149
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 112

  38) variable_assignment : id_reference ANDASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 150
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 113

  39) variable_assignment : id_reference MODASSIGN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  expression    go to state 151
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 114

  65) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 65 (statement_block)


state 115

  69) statement_block2 : statement statement_block2 _

  $default      reduce using rule 69 (statement_block2)


state 116

  40) array_call : start_array_call _ array_index array_call2 SBRIGHT

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  array_index   go to state 152
  expression    go to state 153
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 117

  41) start_array_call : SBLEFT _

  $default      reduce using rule 41 (start_array_call)


state 118

  75) id_reference : base_id array_call _

  $default      reduce using rule 75 (id_reference)


state 119

  78) function_call : funk_id start_funk _ reference_expression6 PRIGHT

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137
  $default      reduce using rule 83 (reference_expression6)

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  reference_expression6  go to state 154
  arglist       go to state 155
  expression    go to state 156
  literal_expression  go to state 133
  reference_expression  go to state 134
  generate_arg  go to state 157

state 120

  80) start_funk : PLEFT _

  $default      reduce using rule 80 (start_funk)


state 121

  86) statement : variable_assignment SEMIC _

  $default      reduce using rule 86 (statement)


state 122

  87) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 158
  literal_expression  go to state 133
  reference_expression  go to state 134

state 123

  88) statement : HEAR PLEFT _ reference_expression PRIGHT SEMIC

  ID            shift, and go to state 89

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  reference_expression  go to state 159

state 124

  70) reference_expression : id_reference _

  $default      reduce using rule 70 (reference_expression)


state 125

  71) reference_expression : non_final_id _ POINT function_call
  72) reference_expression : non_final_id _ POINT reference_expression5

  POINT         shift, and go to state 160


state 126

  73) reference_expression : function_call _

  $default      reduce using rule 73 (reference_expression)


state 127

  93) statement : REPLY expression _ SEMIC
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SEMIC         shift, and go to state 161
  SUM           shift, and go to state 162


state 128

 108) expression : NOT _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 176
  literal_expression  go to state 133
  reference_expression  go to state 134

state 129

 109) expression : MINUS _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 177
  literal_expression  go to state 133
  reference_expression  go to state 134

state 130

 112) expression : TRUE _

  $default      reduce using rule 112 (expression)


state 131

 113) expression : FALSE _

  $default      reduce using rule 113 (expression)


state 132

 114) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 178
  literal_expression  go to state 133
  reference_expression  go to state 134

state 133

 115) expression : literal_expression _

  $default      reduce using rule 115 (expression)


state 134

 116) expression : reference_expression _

  $default      reduce using rule 116 (expression)


state 135

 135) literal_expression : CTED _

  $default      reduce using rule 135 (literal_expression)


state 136

 136) literal_expression : CTEN _

  $default      reduce using rule 136 (literal_expression)


state 137

 137) literal_expression : CTESTRING _

  $default      reduce using rule 137 (literal_expression)


state 138

  94) statement : function_call SEMIC _

  $default      reduce using rule 94 (statement)


state 139

  95) statement : non_final_id POINT _ function_call SEMIC

  ID            shift, and go to state 179

  funk_id       go to state 90
  function_call  go to state 180

state 140

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 121) unless_statement : UNLESS expression _ statement_block unless_statement1

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  BLEFT         shift, and go to state 79
  SUM           shift, and go to state 162

  statement_block  go to state 181

state 141

 124) if_statement : IF push_if_floor _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 182
  literal_expression  go to state 133
  reference_expression  go to state 134
  validateLogicexp  go to state 183

state 142

 128) do_statement : DO push_cont_jump _ statement_block WHILE validateDoWhileExp

  BLEFT         shift, and go to state 79

  statement_block  go to state 184

state 143

 130) while_statement : WHILE push_cont_jump _ validateLogicexp statement_block

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 182
  literal_expression  go to state 133
  reference_expression  go to state 134
  validateLogicexp  go to state 185

state 144

  32) variable_assignment : id_reference EQUAL expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 32 (variable_assignment)


state 145

  33) variable_assignment : id_reference PLUSASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 33 (variable_assignment)


state 146

  34) variable_assignment : id_reference MINUSASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 34 (variable_assignment)


state 147

  35) variable_assignment : id_reference MULTASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 35 (variable_assignment)


state 148

  36) variable_assignment : id_reference DIVASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 36 (variable_assignment)


state 149

  37) variable_assignment : id_reference ORASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 37 (variable_assignment)


state 150

  38) variable_assignment : id_reference ANDASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 38 (variable_assignment)


state 151

  39) variable_assignment : id_reference MODASSIGN expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 39 (variable_assignment)


state 152

  40) array_call : start_array_call array_index _ array_call2 SBRIGHT

  COMA          shift, and go to state 187
  $default      reduce using rule 42 (array_call2)

  array_call2   go to state 186

state 153

  44) array_index : expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 44 (array_index)


state 154

  78) function_call : funk_id start_funk reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 188


state 155

  84) reference_expression6 : arglist _

  $default      reduce using rule 84 (reference_expression6)


state 156

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 118) generate_arg : expression _

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 118 (generate_arg)


state 157

 117) arglist : generate_arg _ arglist1

  COMA          shift, and go to state 190
  $default      reduce using rule 119 (arglist1)

  arglist1      go to state 189

state 158

  87) statement : SAY PLEFT expression _ PRIGHT SEMIC
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  PRIGHT        shift, and go to state 191
  SUM           shift, and go to state 162


state 159

  88) statement : HEAR PLEFT reference_expression _ PRIGHT SEMIC

  PRIGHT        shift, and go to state 192


state 160

  71) reference_expression : non_final_id POINT _ function_call
  72) reference_expression : non_final_id POINT _ reference_expression5

  ID            shift, and go to state 195

  function_call  go to state 193
  reference_expression5  go to state 194
  funk_id       go to state 90

state 161

  93) statement : REPLY expression SEMIC _

  $default      reduce using rule 93 (statement)


state 162

  96) expression : expression SUM _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 196
  literal_expression  go to state 133
  reference_expression  go to state 134

state 163

  97) expression : expression DIV _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 197
  literal_expression  go to state 133
  reference_expression  go to state 134

state 164

  98) expression : expression MOD _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 198
  literal_expression  go to state 133
  reference_expression  go to state 134

state 165

  99) expression : expression PLUS _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 199
  literal_expression  go to state 133
  reference_expression  go to state 134

state 166

 100) expression : expression MINUS _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 200
  literal_expression  go to state 133
  reference_expression  go to state 134

state 167

 101) expression : expression MULT _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 201
  literal_expression  go to state 133
  reference_expression  go to state 134

state 168

 102) expression : expression MTHAN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 202
  literal_expression  go to state 133
  reference_expression  go to state 134

state 169

 103) expression : expression LTHAN _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 203
  literal_expression  go to state 133
  reference_expression  go to state 134

state 170

 104) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 204
  literal_expression  go to state 133
  reference_expression  go to state 134

state 171

 105) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 205
  literal_expression  go to state 133
  reference_expression  go to state 134

state 172

 106) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 206
  literal_expression  go to state 133
  reference_expression  go to state 134

state 173

 107) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 207
  literal_expression  go to state 133
  reference_expression  go to state 134

state 174

 110) expression : expression AND _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 208
  literal_expression  go to state 133
  reference_expression  go to state 134

state 175

 111) expression : expression OR _ expression

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 209
  literal_expression  go to state 133
  reference_expression  go to state 134

state 176

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 108) expression : NOT expression _
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  SUM           shift, and go to state 162
  SUM           [reduce using rule 108 (expression)]
  $default      reduce using rule 108 (expression)


state 177

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : MINUS expression _
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  SUM           shift, and go to state 162
  SUM           [reduce using rule 109 (expression)]
  $default      reduce using rule 109 (expression)


state 178

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 114) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  PRIGHT        shift, and go to state 210
  SUM           shift, and go to state 162


state 179

  79) funk_id : ID _

  $default      reduce using rule 79 (funk_id)


state 180

  95) statement : non_final_id POINT function_call _ SEMIC

  SEMIC         shift, and go to state 211


state 181

 121) unless_statement : UNLESS expression statement_block _ unless_statement1

  ELSE          shift, and go to state 213
  $default      reduce using rule 122 (unless_statement1)

  unless_statement1  go to state 212

state 182

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 133) validateLogicexp : expression _

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 133 (validateLogicexp)


state 183

 124) if_statement : IF push_if_floor validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 79

  statement_block  go to state 214

state 184

 128) do_statement : DO push_cont_jump statement_block _ WHILE validateDoWhileExp

  WHILE         shift, and go to state 215


state 185

 130) while_statement : WHILE push_cont_jump validateLogicexp _ statement_block

  BLEFT         shift, and go to state 79

  statement_block  go to state 216

state 186

  40) array_call : start_array_call array_index array_call2 _ SBRIGHT

  SBRIGHT       shift, and go to state 217


state 187

  43) array_call2 : COMA _ array_index array_call2

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  array_index   go to state 218
  expression    go to state 153
  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  literal_expression  go to state 133
  reference_expression  go to state 134

state 188

  78) function_call : funk_id start_funk reference_expression6 PRIGHT _

  $default      reduce using rule 78 (function_call)


state 189

 117) arglist : generate_arg arglist1 _

  $default      reduce using rule 117 (arglist)


state 190

 120) arglist1 : COMA _ arglist

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 156
  literal_expression  go to state 133
  reference_expression  go to state 134
  generate_arg  go to state 157
  arglist       go to state 219

state 191

  87) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 220


state 192

  88) statement : HEAR PLEFT reference_expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 221


state 193

  71) reference_expression : non_final_id POINT function_call _

  $default      reduce using rule 71 (reference_expression)


state 194

  72) reference_expression : non_final_id POINT reference_expression5 _

  $default      reduce using rule 72 (reference_expression)


state 195

  79) funk_id : ID _
  81) reference_expression5 : ID _
  82) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 222
  PLEFT         reduce using rule 79 (funk_id)
  $default      reduce using rule 81 (reference_expression5)


state 196

  96) expression : expression _ SUM expression
  96) expression : expression SUM expression _
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MOD           [reduce using rule 96 (expression)]
  MULT          shift, and go to state 167
  MULT          [reduce using rule 96 (expression)]
  DIV           shift, and go to state 163
  DIV           [reduce using rule 96 (expression)]
  PLUS          shift, and go to state 165
  PLUS          [reduce using rule 96 (expression)]
  MINUS         shift, and go to state 166
  MINUS         [reduce using rule 96 (expression)]
  MTHAN         shift, and go to state 168
  MTHAN         [reduce using rule 96 (expression)]
  MEQUAL        shift, and go to state 170
  MEQUAL        [reduce using rule 96 (expression)]
  LTHAN         shift, and go to state 169
  LTHAN         [reduce using rule 96 (expression)]
  LEQUAL        shift, and go to state 171
  LEQUAL        [reduce using rule 96 (expression)]
  EQUALITY      shift, and go to state 172
  EQUALITY      [reduce using rule 96 (expression)]
  DIFFERENT     shift, and go to state 173
  DIFFERENT     [reduce using rule 96 (expression)]
  AND           shift, and go to state 174
  AND           [reduce using rule 96 (expression)]
  OR            shift, and go to state 175
  OR            [reduce using rule 96 (expression)]
  SUM           shift, and go to state 162
  SUM           [reduce using rule 96 (expression)]
  $default      reduce using rule 96 (expression)


state 197

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  97) expression : expression DIV expression _
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  SUM           shift, and go to state 162
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 198

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  98) expression : expression MOD expression _
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  SUM           shift, and go to state 162
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 199

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
  99) expression : expression PLUS expression _
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  SUM           shift, and go to state 162
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 200

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 100) expression : expression MINUS expression _
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  SUM           shift, and go to state 162
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 201

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 101) expression : expression MULT expression _
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  SUM           shift, and go to state 162
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 202

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 102) expression : expression MTHAN expression _
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  SUM           shift, and go to state 162
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 203

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 103) expression : expression LTHAN expression _
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  SUM           shift, and go to state 162
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 204

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 104) expression : expression MEQUAL expression _
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  SUM           shift, and go to state 162
  SUM           [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)


state 205

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 105) expression : expression LEQUAL expression _
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  SUM           shift, and go to state 162
  SUM           [reduce using rule 105 (expression)]
  $default      reduce using rule 105 (expression)


state 206

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 106) expression : expression EQUALITY expression _
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  SUM           shift, and go to state 162
  SUM           [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)


state 207

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 107) expression : expression DIFFERENT expression _
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  SUM           shift, and go to state 162
  SUM           [reduce using rule 107 (expression)]
  $default      reduce using rule 107 (expression)


state 208

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 110) expression : expression AND expression _
 111) expression : expression _ OR expression

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  SUM           shift, and go to state 162
  SUM           [reduce using rule 110 (expression)]
  $default      reduce using rule 110 (expression)


state 209

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 111) expression : expression OR expression _

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  SUM           shift, and go to state 162
  SUM           [reduce using rule 111 (expression)]
  $default      reduce using rule 111 (expression)


state 210

 114) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 114 (expression)


state 211

  95) statement : non_final_id POINT function_call SEMIC _

  $default      reduce using rule 95 (statement)


state 212

 121) unless_statement : UNLESS expression statement_block unless_statement1 _

  $default      reduce using rule 121 (unless_statement)


state 213

 123) unless_statement1 : ELSE _ statement_block

  BLEFT         shift, and go to state 79

  statement_block  go to state 223

state 214

 124) if_statement : IF push_if_floor validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 226
  ELSIF         shift, and go to state 225
  $default      reduce using rule 125 (if_statement1)

  if_statement1  go to state 224

state 215

 128) do_statement : DO push_cont_jump statement_block WHILE _ validateDoWhileExp

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 227
  literal_expression  go to state 133
  reference_expression  go to state 134
  validateDoWhileExp  go to state 228

state 216

 130) while_statement : WHILE push_cont_jump validateLogicexp statement_block _

  $default      reduce using rule 130 (while_statement)


state 217

  40) array_call : start_array_call array_index array_call2 SBRIGHT _

  $default      reduce using rule 40 (array_call)


state 218

  43) array_call2 : COMA array_index _ array_call2

  COMA          shift, and go to state 187
  $default      reduce using rule 42 (array_call2)

  array_call2   go to state 229

state 219

 120) arglist1 : COMA arglist _

  $default      reduce using rule 120 (arglist1)


state 220

  87) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 87 (statement)


state 221

  88) statement : HEAR PLEFT reference_expression PRIGHT SEMIC _

  $default      reduce using rule 88 (statement)


state 222

  82) reference_expression5 : ID POINT _ reference_expression5

  ID            shift, and go to state 230

  reference_expression5  go to state 231

state 223

 123) unless_statement1 : ELSE statement_block _

  $default      reduce using rule 123 (unless_statement1)


state 224

 124) if_statement : IF push_if_floor validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 124 (if_statement)


state 225

 126) if_statement1 : ELSIF _ generateElseCode validateLogicexp statement_block if_statement1

  $default      reduce using rule 134 (generateElseCode)

  generateElseCode  go to state 232

state 226

 127) if_statement1 : ELSE _ generateElseCode statement_block

  $default      reduce using rule 134 (generateElseCode)

  generateElseCode  go to state 233

state 227

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 129) validateDoWhileExp : expression _

  MOD           shift, and go to state 164
  MULT          shift, and go to state 167
  DIV           shift, and go to state 163
  PLUS          shift, and go to state 165
  MINUS         shift, and go to state 166
  MTHAN         shift, and go to state 168
  MEQUAL        shift, and go to state 170
  LTHAN         shift, and go to state 169
  LEQUAL        shift, and go to state 171
  EQUALITY      shift, and go to state 172
  DIFFERENT     shift, and go to state 173
  AND           shift, and go to state 174
  OR            shift, and go to state 175
  SUM           shift, and go to state 162
  $default      reduce using rule 129 (validateDoWhileExp)


state 228

 128) do_statement : DO push_cont_jump statement_block WHILE validateDoWhileExp _

  $default      reduce using rule 128 (do_statement)


state 229

  43) array_call2 : COMA array_index array_call2 _

  $default      reduce using rule 43 (array_call2)


state 230

  81) reference_expression5 : ID _
  82) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 222
  $default      reduce using rule 81 (reference_expression5)


state 231

  82) reference_expression5 : ID POINT reference_expression5 _

  $default      reduce using rule 82 (reference_expression5)


state 232

 126) if_statement1 : ELSIF generateElseCode _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 128
  MINUS         shift, and go to state 129
  ID            shift, and go to state 89
  CTEN          shift, and go to state 136
  PLEFT         shift, and go to state 132
  TRUE          shift, and go to state 130
  FALSE         shift, and go to state 131
  CTED          shift, and go to state 135
  CTESTRING     shift, and go to state 137

  id_reference  go to state 124
  non_final_id  go to state 125
  function_call  go to state 126
  base_id       go to state 88
  funk_id       go to state 90
  expression    go to state 182
  literal_expression  go to state 133
  reference_expression  go to state 134
  validateLogicexp  go to state 234

state 233

 127) if_statement1 : ELSE generateElseCode _ statement_block

  BLEFT         shift, and go to state 79

  statement_block  go to state 235

state 234

 126) if_statement1 : ELSIF generateElseCode validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 79

  statement_block  go to state 236

state 235

 127) if_statement1 : ELSE generateElseCode statement_block _

  $default      reduce using rule 127 (if_statement1)


state 236

 126) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 226
  ELSIF         shift, and go to state 225
  $default      reduce using rule 125 (if_statement1)

  if_statement1  go to state 237

state 237

 126) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 126 (if_statement1)

