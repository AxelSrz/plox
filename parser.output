state 94 contains 1 shift/reduce conflicts
state 101 contains 14 shift/reduce conflicts
state 102 contains 1 shift/reduce conflicts
state 103 contains 1 shift/reduce conflicts
state 104 contains 1 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 106 contains 1 shift/reduce conflicts
state 107 contains 1 shift/reduce conflicts
state 108 contains 1 shift/reduce conflicts
state 109 contains 1 shift/reduce conflicts
state 110 contains 1 shift/reduce conflicts
state 111 contains 1 shift/reduce conflicts
state 112 contains 1 shift/reduce conflicts
state 113 contains 1 shift/reduce conflicts
state 114 contains 1 shift/reduce conflicts
state 209 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: ID
rule 23 next_variable: 
rule 24 next_variable: COMA some_variables
rule 25 type: type_specifier type1
rule 26 type1: 
rule 27 type1: type2
rule 28 type2: SBLEFT expression SBRIGHT type1
rule 29 variable_assignment: ID variable_assignment1 EQUAL variable_value
rule 30 variable_assignment: ID variable_assignment1 PLUSASSIGN variable_value
rule 31 variable_assignment: ID variable_assignment1 MINUSASSIGN variable_value
rule 32 variable_assignment: ID variable_assignment1 MULTASSIGN variable_value
rule 33 variable_assignment: ID variable_assignment1 DIVASSIGN variable_value
rule 34 variable_assignment: ID variable_assignment1 ORASSIGN variable_value
rule 35 variable_assignment: ID variable_assignment1 ANDASSIGN variable_value
rule 36 variable_assignment: ID variable_assignment1 MODASSIGN variable_value
rule 37 variable_assignment1: 
rule 38 variable_assignment1: variable_assignment4 variable_assignment5
rule 39 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 40 variable_assignment5: 
rule 41 variable_assignment5: variable_assignment4
rule 42 method_declaration: new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 43 new_function_code: FUNK
rule 44 method_declaration1: 
rule 45 method_declaration1: modifier
rule 46 method_declaration2: ID
rule 47 method_declaration2: CHIEF
rule 48 method_declaration3: 
rule 49 method_declaration3: parameter_list method_declaration3
rule 50 method_declaration4: statement_block
rule 51 method_declaration4: SEMIC
rule 52 type_specifier: LOGIC
rule 53 type_specifier: CHAR
rule 54 type_specifier: NUMBER
rule 55 type_specifier: DECIMAL
rule 56 type_specifier: ID
rule 57 type_specifier: OBLIVION
rule 58 type_specifier: STRING
rule 59 variable_value: expression
rule 60 variable_value: HEAR PLEFT PRIGHT
rule 61 parameter_list: parameter parameter_list1
rule 62 parameter_list1: 
rule 63 parameter_list1: COMA parameter_list
rule 64 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 65 statement_block1: 
rule 66 statement_block1: variable_declaration statement_block1
rule 67 statement_block2: 
rule 68 statement_block2: statement statement_block2
rule 69 reference_expression: NULL
rule 70 reference_expression: ITSELF
rule 71 reference_expression: ID
rule 72 reference_expression: ID SBLEFT expression SBRIGHT
rule 73 reference_expression: non_final_id POINT function_call
rule 74 reference_expression: non_final_id POINT reference_expression5
rule 75 reference_expression: function_call
rule 76 non_final_id: ID
rule 77 function_call: funk_id start_funk reference_expression6 PRIGHT
rule 78 funk_id: ID
rule 79 start_funk: PLEFT
rule 80 reference_expression5: ID
rule 81 reference_expression5: ID POINT reference_expression5
rule 82 reference_expression6: 
rule 83 reference_expression6: arglist
rule 84 parameter: type ID parameter1
rule 85 parameter1: 
rule 86 parameter1: SBLEFT SBRIGHT parameter1
rule 87 statement: variable_assignment SEMIC
rule 88 statement: SAY PLEFT expression PRIGHT SEMIC
rule 89 statement: unless_statement
rule 90 statement: if_statement
rule 91 statement: do_statement
rule 92 statement: while_statement
rule 93 statement: REPLY expression SEMIC
rule 94 statement: function_call SEMIC
rule 95 statement: non_final_id POINT function_call SEMIC
rule 96 expression: expression SUM expression
rule 97 expression: expression DIV expression
rule 98 expression: expression MOD expression
rule 99 expression: expression PLUS expression
rule 100 expression: expression MINUS expression
rule 101 expression: expression MULT expression
rule 102 expression: expression MTHAN expression
rule 103 expression: expression LTHAN expression
rule 104 expression: expression MEQUAL expression
rule 105 expression: expression LEQUAL expression
rule 106 expression: expression EQUALITY expression
rule 107 expression: expression DIFFERENT expression
rule 108 expression: NOT expression
rule 109 expression: expression AND expression
rule 110 expression: expression OR expression
rule 111 expression: TRUE
rule 112 expression: FALSE
rule 113 expression: PLEFT expression PRIGHT
rule 114 expression: literal_expression
rule 115 expression: reference_expression
rule 116 arglist: generate_arg arglist1
rule 117 generate_arg: expression
rule 118 arglist1: 
rule 119 arglist1: COMA arglist
rule 120 unless_statement: UNLESS expression statement_block unless_statement1
rule 121 unless_statement1: 
rule 122 unless_statement1: ELSE statement_block
rule 123 if_statement: IF push_if_floor validateLogicexp statement_block if_statement1
rule 124 if_statement1: 
rule 125 if_statement1: ELSIF generateElseCode validateLogicexp statement_block if_statement1
rule 126 if_statement1: ELSE generateElseCode statement_block
rule 127 do_statement: DO push_cont_jump statement_block WHILE validateDoWhileExp
rule 128 validateDoWhileExp: expression
rule 129 while_statement: WHILE push_cont_jump validateLogicexp statement_block
rule 130 push_cont_jump: 
rule 131 push_if_floor: 
rule 132 validateLogicexp: expression
rule 133 generateElseCode: 
rule 134 literal_expression: CTED
rule 135 literal_expression: CTEN
rule 136 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (66)
    on right: 
    on left : 
  supreme_plox (67)
    on right: 
    on left : 1
  plox_generation (68)
    on right: 1 3
    on left : 2 3
  type_declaration (69)
    on right: 3
    on left : 4
  class_declaration (70)
    on right: 4
    on left : 5
  code_new_class (71)
    on right: 5
    on left : 6
  code_heirof (72)
    on right: 5
    on left : 7 8
  class_body (73)
    on right: 5
    on left : 9
  class_variable_block (74)
    on right: 9 11
    on left : 10 11
  class_function_block (75)
    on right: 9 13
    on left : 12 13
  variable_declaration (76)
    on right: 11 66
    on left : 16
  method_declaration (77)
    on right: 13
    on left : 42
  modifier (78)
    on right: 18 45
    on left : 14 15
  variable_is_modifiable (79)
    on right: 16
    on left : 19 20
  variable_scope (80)
    on right: 16
    on left : 17 18
  type (81)
    on right: 16 42 84
    on left : 25
  some_variables (82)
    on right: 16 24
    on left : 21
  code_new_variable (83)
    on right: 21
    on left : 22
  next_variable (84)
    on right: 21
    on left : 23 24
  type_specifier (85)
    on right: 25
    on left : 52 53 54 55 56 57 58
  type1 (86)
    on right: 25 28
    on left : 26 27
  type2 (87)
    on right: 27
    on left : 28
  expression (88)
    on right: 28 39 59 72 88 93 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 113 117 120 128 132
    on left : 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
  variable_assignment (89)
    on right: 87
    on left : 29 30 31 32 33 34 35 36
  variable_assignment1 (90)
    on right: 29 30 31 32 33 34 35 36
    on left : 37 38
  variable_value (91)
    on right: 29 30 31 32 33 34 35 36
    on left : 59 60
  variable_assignment4 (92)
    on right: 38 41
    on left : 39
  variable_assignment5 (93)
    on right: 38 39
    on left : 40 41
  new_function_code (94)
    on right: 42
    on left : 43
  method_declaration1 (95)
    on right: 42
    on left : 44 45
  method_declaration2 (96)
    on right: 42
    on left : 46 47
  method_declaration3 (97)
    on right: 42 49
    on left : 48 49
  method_declaration4 (98)
    on right: 42
    on left : 50 51
  parameter_list (99)
    on right: 49 63
    on left : 61
  statement_block (100)
    on right: 50 120 122 123 125 126 127 129
    on left : 64
  parameter (101)
    on right: 61
    on left : 84
  parameter_list1 (102)
    on right: 61
    on left : 62 63
  statement_block1 (103)
    on right: 64 66
    on left : 65 66
  statement_block2 (104)
    on right: 64 68
    on left : 67 68
  statement (105)
    on right: 68
    on left : 87 88 89 90 91 92 93 94 95
  reference_expression (106)
    on right: 115
    on left : 69 70 71 72 73 74 75
  non_final_id (107)
    on right: 73 74 95
    on left : 76
  function_call (108)
    on right: 73 75 94 95
    on left : 77
  reference_expression5 (109)
    on right: 74 81
    on left : 80 81
  funk_id (110)
    on right: 77
    on left : 78
  start_funk (111)
    on right: 77
    on left : 79
  reference_expression6 (112)
    on right: 77
    on left : 82 83
  arglist (113)
    on right: 83 119
    on left : 116
  parameter1 (114)
    on right: 84 86
    on left : 85 86
  unless_statement (115)
    on right: 89
    on left : 120
  if_statement (116)
    on right: 90
    on left : 123
  do_statement (117)
    on right: 91
    on left : 127
  while_statement (118)
    on right: 92
    on left : 129
  literal_expression (119)
    on right: 114
    on left : 134 135 136
  generate_arg (120)
    on right: 116
    on left : 117
  arglist1 (121)
    on right: 116
    on left : 118 119
  unless_statement1 (122)
    on right: 120
    on left : 121 122
  push_if_floor (123)
    on right: 123
    on left : 131
  validateLogicexp (124)
    on right: 123 125 129
    on left : 132
  if_statement1 (125)
    on right: 123 125
    on left : 124 125 126
  generateElseCode (126)
    on right: 125 126
    on left : 133
  push_cont_jump (127)
    on right: 127 129
    on left : 130
  validateDoWhileExp (128)
    on right: 127
    on left : 128

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 73 74 81 95
  NOT (3) 108
  MOD (4) 98
  MULT (5) 101
  DIV (6) 97
  PLUS (7) 99
  MINUS (8) 100
  MTHAN (9) 102
  MEQUAL (10) 104
  LTHAN (11) 103
  LEQUAL (12) 105
  EQUALITY (13) 106
  DIFFERENT (14) 107
  AND (15) 109
  OR (16) 110
  EQUAL (17) 29
  PLUSASSIGN (18) 30
  MINUSASSIGN (19) 31
  MULTASSIGN (20) 32
  DIVASSIGN (21) 33
  ORASSIGN (22) 34
  ANDASSIGN (23) 35
  MODASSIGN (24) 36
  SEMIC (25) 16 51 87 88 93 94 95
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 64
  BRIGHT (29) 5 64
  ID (30) 6 8 22 29 30 31 32 33 34 35 36 46 56 71 72 76 78 80 81 84
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 24 63 119
  SBLEFT (37) 28 39 72 86
  SBRIGHT (38) 28 39 72 86
  PLEFT (39) 42 60 79 88 113
  PRIGHT (40) 42 60 77 88 113
  FUNK (41) 43
  CHIEF (42) 47
  LOGIC (43) 52
  CHAR (44) 53
  NUMBER (45) 54
  DECIMAL (46) 55
  OBLIVION (47) 57
  STRING (48) 58
  HEAR (49) 60
  NULL (50) 69
  ITSELF (51) 70
  SAY (52) 88
  REPLY (53) 93
  SUM (54) 96
  TRUE (55) 111
  FALSE (56) 112
  UNLESS (57) 120
  ELSE (58) 122 126
  IF (59) 123
  ELSIF (60) 125
  DO (61) 127
  WHILE (62) 127 129
  CTED (63) 134
  CTEN (64) 135
  CTESTRING (65) 136

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _

  $default      reduce using rule 4 (type_declaration)


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 11

  code_new_class  go to state 10

state 9


  $default      accept


state 10

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 13
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 12

state 11

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 12

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 14


state 13

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 15


state 14

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 16
  class_variable_block  go to state 17
  variable_declaration  go to state 18
  variable_is_modifiable  go to state 19

state 15

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 16

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 22


state 17

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 23
  method_declaration  go to state 24
  new_function_code  go to state 25

state 18

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 18
  class_variable_block  go to state 27
  variable_is_modifiable  go to state 19

state 19

  16) variable_declaration : variable_is_modifiable _ variable_scope type some_variables SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 30
  modifier      go to state 31

state 20

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 21

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 22

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 23

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 24

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 24
  class_function_block  go to state 32
  new_function_code  go to state 25

state 25

  42) method_declaration : new_function_code _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 44 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 26

  43) new_function_code : FUNK _

  $default      reduce using rule 43 (new_function_code)


state 27

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_is_modifiable variable_scope _ type some_variables SEMIC

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type          go to state 35
  type_specifier  go to state 36

state 31

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 32

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 33

  42) method_declaration : new_function_code method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  type          go to state 44

state 34

  45) method_declaration1 : modifier _

  $default      reduce using rule 45 (method_declaration1)


state 35

  16) variable_declaration : variable_is_modifiable variable_scope type _ some_variables SEMIC

  ID            shift, and go to state 47

  some_variables  go to state 45
  code_new_variable  go to state 46

state 36

  25) type : type_specifier _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type1         go to state 48
  type2         go to state 49

state 37

  52) type_specifier : LOGIC _

  $default      reduce using rule 52 (type_specifier)


state 38

  53) type_specifier : CHAR _

  $default      reduce using rule 53 (type_specifier)


state 39

  54) type_specifier : NUMBER _

  $default      reduce using rule 54 (type_specifier)


state 40

  55) type_specifier : DECIMAL _

  $default      reduce using rule 55 (type_specifier)


state 41

  56) type_specifier : ID _

  $default      reduce using rule 56 (type_specifier)


state 42

  57) type_specifier : OBLIVION _

  $default      reduce using rule 57 (type_specifier)


state 43

  58) type_specifier : STRING _

  $default      reduce using rule 58 (type_specifier)


state 44

  42) method_declaration : new_function_code method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 52
  CHIEF         shift, and go to state 53

  method_declaration2  go to state 51

state 45

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables _ SEMIC

  SEMIC         shift, and go to state 54


state 46

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 56
  $default      reduce using rule 23 (next_variable)

  next_variable  go to state 55

state 47

  22) code_new_variable : ID _

  $default      reduce using rule 22 (code_new_variable)


state 48

  25) type : type_specifier type1 _

  $default      reduce using rule 25 (type)


state 49

  27) type1 : type2 _

  $default      reduce using rule 27 (type1)


state 50

  28) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 57
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 51

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 73


state 52

  46) method_declaration2 : ID _

  $default      reduce using rule 46 (method_declaration2)


state 53

  47) method_declaration2 : CHIEF _

  $default      reduce using rule 47 (method_declaration2)


state 54

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 55

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 56

  24) next_variable : COMA _ some_variables

  ID            shift, and go to state 47

  code_new_variable  go to state 46
  some_variables  go to state 74

state 57

  28) type2 : SBLEFT expression _ SBRIGHT type1
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SBRIGHT       shift, and go to state 75
  SUM           shift, and go to state 76


state 58

  69) reference_expression : NULL _

  $default      reduce using rule 69 (reference_expression)


state 59

  70) reference_expression : ITSELF _

  $default      reduce using rule 70 (reference_expression)


state 60

  71) reference_expression : ID _
  72) reference_expression : ID _ SBLEFT expression SBRIGHT
  76) non_final_id : ID _
  78) funk_id : ID _

  SBLEFT        shift, and go to state 90
  POINT         reduce using rule 76 (non_final_id)
  PLEFT         reduce using rule 78 (funk_id)
  $default      reduce using rule 71 (reference_expression)


state 61

  73) reference_expression : non_final_id _ POINT function_call
  74) reference_expression : non_final_id _ POINT reference_expression5

  POINT         shift, and go to state 91


state 62

  75) reference_expression : function_call _

  $default      reduce using rule 75 (reference_expression)


state 63

  77) function_call : funk_id _ start_funk reference_expression6 PRIGHT

  PLEFT         shift, and go to state 93

  start_funk    go to state 92

state 64

 108) expression : NOT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 94
  literal_expression  go to state 68
  reference_expression  go to state 69

state 65

 111) expression : TRUE _

  $default      reduce using rule 111 (expression)


state 66

 112) expression : FALSE _

  $default      reduce using rule 112 (expression)


state 67

 113) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 95
  literal_expression  go to state 68
  reference_expression  go to state 69

state 68

 114) expression : literal_expression _

  $default      reduce using rule 114 (expression)


state 69

 115) expression : reference_expression _

  $default      reduce using rule 115 (expression)


state 70

 134) literal_expression : CTED _

  $default      reduce using rule 134 (literal_expression)


state 71

 135) literal_expression : CTEN _

  $default      reduce using rule 135 (literal_expression)


state 72

 136) literal_expression : CTESTRING _

  $default      reduce using rule 136 (literal_expression)


state 73

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  method_declaration3  go to state 96
  parameter_list  go to state 97
  parameter     go to state 98
  type          go to state 99

state 74

  24) next_variable : COMA some_variables _

  $default      reduce using rule 24 (next_variable)


state 75

  28) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type2         go to state 49
  type1         go to state 100

state 76

  96) expression : expression SUM _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 101
  literal_expression  go to state 68
  reference_expression  go to state 69

state 77

  97) expression : expression DIV _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 102
  literal_expression  go to state 68
  reference_expression  go to state 69

state 78

  98) expression : expression MOD _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 103
  literal_expression  go to state 68
  reference_expression  go to state 69

state 79

  99) expression : expression PLUS _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 104
  literal_expression  go to state 68
  reference_expression  go to state 69

state 80

 100) expression : expression MINUS _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 105
  literal_expression  go to state 68
  reference_expression  go to state 69

state 81

 101) expression : expression MULT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 106
  literal_expression  go to state 68
  reference_expression  go to state 69

state 82

 102) expression : expression MTHAN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 107
  literal_expression  go to state 68
  reference_expression  go to state 69

state 83

 103) expression : expression LTHAN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 108
  literal_expression  go to state 68
  reference_expression  go to state 69

state 84

 104) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 109
  literal_expression  go to state 68
  reference_expression  go to state 69

state 85

 105) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 110
  literal_expression  go to state 68
  reference_expression  go to state 69

state 86

 106) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 111
  literal_expression  go to state 68
  reference_expression  go to state 69

state 87

 107) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 112
  literal_expression  go to state 68
  reference_expression  go to state 69

state 88

 109) expression : expression AND _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 113
  literal_expression  go to state 68
  reference_expression  go to state 69

state 89

 110) expression : expression OR _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 114
  literal_expression  go to state 68
  reference_expression  go to state 69

state 90

  72) reference_expression : ID SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 115
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 91

  73) reference_expression : non_final_id POINT _ function_call
  74) reference_expression : non_final_id POINT _ reference_expression5

  ID            shift, and go to state 118

  function_call  go to state 116
  reference_expression5  go to state 117
  funk_id       go to state 63

state 92

  77) function_call : funk_id start_funk _ reference_expression6 PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72
  $default      reduce using rule 82 (reference_expression6)

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  reference_expression6  go to state 119
  arglist       go to state 120
  expression    go to state 121
  literal_expression  go to state 68
  reference_expression  go to state 69
  generate_arg  go to state 122

state 93

  79) start_funk : PLEFT _

  $default      reduce using rule 79 (start_funk)


state 94

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 108) expression : NOT expression _
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  SUM           shift, and go to state 76
  SUM           [reduce using rule 108 (expression)]
  $default      reduce using rule 108 (expression)


state 95

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 113) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  PRIGHT        shift, and go to state 123
  SUM           shift, and go to state 76


state 96

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 124


state 97

  49) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  parameter_list  go to state 97
  method_declaration3  go to state 125
  parameter     go to state 98
  type          go to state 99

state 98

  61) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 127
  $default      reduce using rule 62 (parameter_list1)

  parameter_list1  go to state 126

state 99

  84) parameter : type _ ID parameter1

  ID            shift, and go to state 128


state 100

  28) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 28 (type2)


state 101

  96) expression : expression _ SUM expression
  96) expression : expression SUM expression _
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MOD           [reduce using rule 96 (expression)]
  MULT          shift, and go to state 81
  MULT          [reduce using rule 96 (expression)]
  DIV           shift, and go to state 77
  DIV           [reduce using rule 96 (expression)]
  PLUS          shift, and go to state 79
  PLUS          [reduce using rule 96 (expression)]
  MINUS         shift, and go to state 80
  MINUS         [reduce using rule 96 (expression)]
  MTHAN         shift, and go to state 82
  MTHAN         [reduce using rule 96 (expression)]
  MEQUAL        shift, and go to state 84
  MEQUAL        [reduce using rule 96 (expression)]
  LTHAN         shift, and go to state 83
  LTHAN         [reduce using rule 96 (expression)]
  LEQUAL        shift, and go to state 85
  LEQUAL        [reduce using rule 96 (expression)]
  EQUALITY      shift, and go to state 86
  EQUALITY      [reduce using rule 96 (expression)]
  DIFFERENT     shift, and go to state 87
  DIFFERENT     [reduce using rule 96 (expression)]
  AND           shift, and go to state 88
  AND           [reduce using rule 96 (expression)]
  OR            shift, and go to state 89
  OR            [reduce using rule 96 (expression)]
  SUM           shift, and go to state 76
  SUM           [reduce using rule 96 (expression)]
  $default      reduce using rule 96 (expression)


state 102

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  97) expression : expression DIV expression _
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  SUM           shift, and go to state 76
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 103

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  98) expression : expression MOD expression _
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  SUM           shift, and go to state 76
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 104

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
  99) expression : expression PLUS expression _
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  SUM           shift, and go to state 76
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 105

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 100) expression : expression MINUS expression _
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  SUM           shift, and go to state 76
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 106

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 101) expression : expression MULT expression _
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  SUM           shift, and go to state 76
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 107

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 102) expression : expression MTHAN expression _
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 108

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 103) expression : expression LTHAN expression _
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 109

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 104) expression : expression MEQUAL expression _
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)


state 110

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 105) expression : expression LEQUAL expression _
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 105 (expression)]
  $default      reduce using rule 105 (expression)


state 111

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 106) expression : expression EQUALITY expression _
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)


state 112

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 107) expression : expression DIFFERENT expression _
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  SUM           shift, and go to state 76
  SUM           [reduce using rule 107 (expression)]
  $default      reduce using rule 107 (expression)


state 113

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 109) expression : expression AND expression _
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  SUM           shift, and go to state 76
  SUM           [reduce using rule 109 (expression)]
  $default      reduce using rule 109 (expression)


state 114

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 110) expression : expression OR expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  SUM           shift, and go to state 76
  SUM           [reduce using rule 110 (expression)]
  $default      reduce using rule 110 (expression)


state 115

  72) reference_expression : ID SBLEFT expression _ SBRIGHT
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SBRIGHT       shift, and go to state 129
  SUM           shift, and go to state 76


state 116

  73) reference_expression : non_final_id POINT function_call _

  $default      reduce using rule 73 (reference_expression)


state 117

  74) reference_expression : non_final_id POINT reference_expression5 _

  $default      reduce using rule 74 (reference_expression)


state 118

  78) funk_id : ID _
  80) reference_expression5 : ID _
  81) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 130
  PLEFT         reduce using rule 78 (funk_id)
  $default      reduce using rule 80 (reference_expression5)


state 119

  77) function_call : funk_id start_funk reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 131


state 120

  83) reference_expression6 : arglist _

  $default      reduce using rule 83 (reference_expression6)


state 121

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 117) generate_arg : expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 117 (generate_arg)


state 122

 116) arglist : generate_arg _ arglist1

  COMA          shift, and go to state 133
  $default      reduce using rule 118 (arglist1)

  arglist1      go to state 132

state 123

 113) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 113 (expression)


state 124

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 136
  BLEFT         shift, and go to state 137

  method_declaration4  go to state 134
  statement_block  go to state 135

state 125

  49) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 49 (method_declaration3)


state 126

  61) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 61 (parameter_list)


state 127

  63) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  parameter     go to state 98
  parameter_list  go to state 138
  type          go to state 99

state 128

  84) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 140
  $default      reduce using rule 85 (parameter1)

  parameter1    go to state 139

state 129

  72) reference_expression : ID SBLEFT expression SBRIGHT _

  $default      reduce using rule 72 (reference_expression)


state 130

  81) reference_expression5 : ID POINT _ reference_expression5

  ID            shift, and go to state 141

  reference_expression5  go to state 142

state 131

  77) function_call : funk_id start_funk reference_expression6 PRIGHT _

  $default      reduce using rule 77 (function_call)


state 132

 116) arglist : generate_arg arglist1 _

  $default      reduce using rule 116 (arglist)


state 133

 119) arglist1 : COMA _ arglist

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 121
  literal_expression  go to state 68
  reference_expression  go to state 69
  generate_arg  go to state 122
  arglist       go to state 143

state 134

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 42 (method_declaration)


state 135

  50) method_declaration4 : statement_block _

  $default      reduce using rule 50 (method_declaration4)


state 136

  51) method_declaration4 : SEMIC _

  $default      reduce using rule 51 (method_declaration4)


state 137

  64) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 19
  statement_block1  go to state 144
  variable_declaration  go to state 145

state 138

  63) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 63 (parameter_list1)


state 139

  84) parameter : type ID parameter1 _

  $default      reduce using rule 84 (parameter)


state 140

  86) parameter1 : SBLEFT _ SBRIGHT parameter1

  SBRIGHT       shift, and go to state 146


state 141

  80) reference_expression5 : ID _
  81) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 130
  $default      reduce using rule 80 (reference_expression5)


state 142

  81) reference_expression5 : ID POINT reference_expression5 _

  $default      reduce using rule 81 (reference_expression5)


state 143

 119) arglist1 : COMA arglist _

  $default      reduce using rule 119 (arglist1)


state 144

  64) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  ID            shift, and go to state 147
  SAY           shift, and go to state 151
  REPLY         shift, and go to state 156
  UNLESS        shift, and go to state 159
  IF            shift, and go to state 160
  DO            shift, and go to state 161
  WHILE         shift, and go to state 162
  $default      reduce using rule 67 (statement_block2)

  statement_block2  go to state 148
  statement     go to state 149
  funk_id       go to state 63
  variable_assignment  go to state 150
  unless_statement  go to state 152
  if_statement  go to state 153
  do_statement  go to state 154
  while_statement  go to state 155
  function_call  go to state 157
  non_final_id  go to state 158

state 145

  66) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 19
  variable_declaration  go to state 145
  statement_block1  go to state 163

state 146

  86) parameter1 : SBLEFT SBRIGHT _ parameter1

  SBLEFT        shift, and go to state 140
  $default      reduce using rule 85 (parameter1)

  parameter1    go to state 164

state 147

  29) variable_assignment : ID _ variable_assignment1 EQUAL variable_value
  30) variable_assignment : ID _ variable_assignment1 PLUSASSIGN variable_value
  31) variable_assignment : ID _ variable_assignment1 MINUSASSIGN variable_value
  32) variable_assignment : ID _ variable_assignment1 MULTASSIGN variable_value
  33) variable_assignment : ID _ variable_assignment1 DIVASSIGN variable_value
  34) variable_assignment : ID _ variable_assignment1 ORASSIGN variable_value
  35) variable_assignment : ID _ variable_assignment1 ANDASSIGN variable_value
  36) variable_assignment : ID _ variable_assignment1 MODASSIGN variable_value
  76) non_final_id : ID _
  78) funk_id : ID _

  SBLEFT        shift, and go to state 167
  POINT         reduce using rule 76 (non_final_id)
  PLEFT         reduce using rule 78 (funk_id)
  $default      reduce using rule 37 (variable_assignment1)

  variable_assignment1  go to state 165
  variable_assignment4  go to state 166

state 148

  64) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 168


state 149

  68) statement_block2 : statement _ statement_block2

  ID            shift, and go to state 147
  SAY           shift, and go to state 151
  REPLY         shift, and go to state 156
  UNLESS        shift, and go to state 159
  IF            shift, and go to state 160
  DO            shift, and go to state 161
  WHILE         shift, and go to state 162
  $default      reduce using rule 67 (statement_block2)

  statement     go to state 149
  statement_block2  go to state 169
  funk_id       go to state 63
  variable_assignment  go to state 150
  unless_statement  go to state 152
  if_statement  go to state 153
  do_statement  go to state 154
  while_statement  go to state 155
  function_call  go to state 157
  non_final_id  go to state 158

state 150

  87) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 170


state 151

  88) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 171


state 152

  89) statement : unless_statement _

  $default      reduce using rule 89 (statement)


state 153

  90) statement : if_statement _

  $default      reduce using rule 90 (statement)


state 154

  91) statement : do_statement _

  $default      reduce using rule 91 (statement)


state 155

  92) statement : while_statement _

  $default      reduce using rule 92 (statement)


state 156

  93) statement : REPLY _ expression SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 172
  literal_expression  go to state 68
  reference_expression  go to state 69

state 157

  94) statement : function_call _ SEMIC

  SEMIC         shift, and go to state 173


state 158

  95) statement : non_final_id _ POINT function_call SEMIC

  POINT         shift, and go to state 174


state 159

 120) unless_statement : UNLESS _ expression statement_block unless_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 175
  literal_expression  go to state 68
  reference_expression  go to state 69

state 160

 123) if_statement : IF _ push_if_floor validateLogicexp statement_block if_statement1

  $default      reduce using rule 131 (push_if_floor)

  push_if_floor  go to state 176

state 161

 127) do_statement : DO _ push_cont_jump statement_block WHILE validateDoWhileExp

  $default      reduce using rule 130 (push_cont_jump)

  push_cont_jump  go to state 177

state 162

 129) while_statement : WHILE _ push_cont_jump validateLogicexp statement_block

  $default      reduce using rule 130 (push_cont_jump)

  push_cont_jump  go to state 178

state 163

  66) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 66 (statement_block1)


state 164

  86) parameter1 : SBLEFT SBRIGHT parameter1 _

  $default      reduce using rule 86 (parameter1)


state 165

  29) variable_assignment : ID variable_assignment1 _ EQUAL variable_value
  30) variable_assignment : ID variable_assignment1 _ PLUSASSIGN variable_value
  31) variable_assignment : ID variable_assignment1 _ MINUSASSIGN variable_value
  32) variable_assignment : ID variable_assignment1 _ MULTASSIGN variable_value
  33) variable_assignment : ID variable_assignment1 _ DIVASSIGN variable_value
  34) variable_assignment : ID variable_assignment1 _ ORASSIGN variable_value
  35) variable_assignment : ID variable_assignment1 _ ANDASSIGN variable_value
  36) variable_assignment : ID variable_assignment1 _ MODASSIGN variable_value

  EQUAL         shift, and go to state 179
  PLUSASSIGN    shift, and go to state 180
  MINUSASSIGN   shift, and go to state 181
  MULTASSIGN    shift, and go to state 182
  DIVASSIGN     shift, and go to state 183
  ORASSIGN      shift, and go to state 184
  ANDASSIGN     shift, and go to state 185
  MODASSIGN     shift, and go to state 186


state 166

  38) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 167
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 187
  variable_assignment4  go to state 188

state 167

  39) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  expression    go to state 189
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 168

  64) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 64 (statement_block)


state 169

  68) statement_block2 : statement statement_block2 _

  $default      reduce using rule 68 (statement_block2)


state 170

  87) statement : variable_assignment SEMIC _

  $default      reduce using rule 87 (statement)


state 171

  88) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 190
  literal_expression  go to state 68
  reference_expression  go to state 69

state 172

  93) statement : REPLY expression _ SEMIC
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SEMIC         shift, and go to state 191
  SUM           shift, and go to state 76


state 173

  94) statement : function_call SEMIC _

  $default      reduce using rule 94 (statement)


state 174

  95) statement : non_final_id POINT _ function_call SEMIC

  ID            shift, and go to state 192

  funk_id       go to state 63
  function_call  go to state 193

state 175

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 120) unless_statement : UNLESS expression _ statement_block unless_statement1

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  BLEFT         shift, and go to state 137
  SUM           shift, and go to state 76

  statement_block  go to state 194

state 176

 123) if_statement : IF push_if_floor _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 195
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateLogicexp  go to state 196

state 177

 127) do_statement : DO push_cont_jump _ statement_block WHILE validateDoWhileExp

  BLEFT         shift, and go to state 137

  statement_block  go to state 197

state 178

 129) while_statement : WHILE push_cont_jump _ validateLogicexp statement_block

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 195
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateLogicexp  go to state 198

state 179

  29) variable_assignment : ID variable_assignment1 EQUAL _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 199
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 180

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 202
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 181

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 203
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 182

  32) variable_assignment : ID variable_assignment1 MULTASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 204
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 183

  33) variable_assignment : ID variable_assignment1 DIVASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 205
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 184

  34) variable_assignment : ID variable_assignment1 ORASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 206
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 185

  35) variable_assignment : ID variable_assignment1 ANDASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 207
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 186

  36) variable_assignment : ID variable_assignment1 MODASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 201
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  variable_value  go to state 208
  expression    go to state 200
  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  literal_expression  go to state 68
  reference_expression  go to state 69

state 187

  38) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 38 (variable_assignment1)


state 188

  41) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 41 (variable_assignment5)


state 189

  39) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SBRIGHT       shift, and go to state 209
  SUM           shift, and go to state 76


state 190

  88) statement : SAY PLEFT expression _ PRIGHT SEMIC
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  PRIGHT        shift, and go to state 210
  SUM           shift, and go to state 76


state 191

  93) statement : REPLY expression SEMIC _

  $default      reduce using rule 93 (statement)


state 192

  78) funk_id : ID _

  $default      reduce using rule 78 (funk_id)


state 193

  95) statement : non_final_id POINT function_call _ SEMIC

  SEMIC         shift, and go to state 211


state 194

 120) unless_statement : UNLESS expression statement_block _ unless_statement1

  ELSE          shift, and go to state 213
  $default      reduce using rule 121 (unless_statement1)

  unless_statement1  go to state 212

state 195

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 132) validateLogicexp : expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 132 (validateLogicexp)


state 196

 123) if_statement : IF push_if_floor validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 137

  statement_block  go to state 214

state 197

 127) do_statement : DO push_cont_jump statement_block _ WHILE validateDoWhileExp

  WHILE         shift, and go to state 215


state 198

 129) while_statement : WHILE push_cont_jump validateLogicexp _ statement_block

  BLEFT         shift, and go to state 137

  statement_block  go to state 216

state 199

  29) variable_assignment : ID variable_assignment1 EQUAL variable_value _

  $default      reduce using rule 29 (variable_assignment)


state 200

  59) variable_value : expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 59 (variable_value)


state 201

  60) variable_value : HEAR _ PLEFT PRIGHT

  PLEFT         shift, and go to state 217


state 202

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN variable_value _

  $default      reduce using rule 30 (variable_assignment)


state 203

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN variable_value _

  $default      reduce using rule 31 (variable_assignment)


state 204

  32) variable_assignment : ID variable_assignment1 MULTASSIGN variable_value _

  $default      reduce using rule 32 (variable_assignment)


state 205

  33) variable_assignment : ID variable_assignment1 DIVASSIGN variable_value _

  $default      reduce using rule 33 (variable_assignment)


state 206

  34) variable_assignment : ID variable_assignment1 ORASSIGN variable_value _

  $default      reduce using rule 34 (variable_assignment)


state 207

  35) variable_assignment : ID variable_assignment1 ANDASSIGN variable_value _

  $default      reduce using rule 35 (variable_assignment)


state 208

  36) variable_assignment : ID variable_assignment1 MODASSIGN variable_value _

  $default      reduce using rule 36 (variable_assignment)


state 209

  39) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 167
  SBLEFT        [reduce using rule 40 (variable_assignment5)]
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 218
  variable_assignment4  go to state 188

state 210

  88) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 219


state 211

  95) statement : non_final_id POINT function_call SEMIC _

  $default      reduce using rule 95 (statement)


state 212

 120) unless_statement : UNLESS expression statement_block unless_statement1 _

  $default      reduce using rule 120 (unless_statement)


state 213

 122) unless_statement1 : ELSE _ statement_block

  BLEFT         shift, and go to state 137

  statement_block  go to state 220

state 214

 123) if_statement : IF push_if_floor validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 223
  ELSIF         shift, and go to state 222
  $default      reduce using rule 124 (if_statement1)

  if_statement1  go to state 221

state 215

 127) do_statement : DO push_cont_jump statement_block WHILE _ validateDoWhileExp

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 224
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateDoWhileExp  go to state 225

state 216

 129) while_statement : WHILE push_cont_jump validateLogicexp statement_block _

  $default      reduce using rule 129 (while_statement)


state 217

  60) variable_value : HEAR PLEFT _ PRIGHT

  PRIGHT        shift, and go to state 226


state 218

  39) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 39 (variable_assignment4)


state 219

  88) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 88 (statement)


state 220

 122) unless_statement1 : ELSE statement_block _

  $default      reduce using rule 122 (unless_statement1)


state 221

 123) if_statement : IF push_if_floor validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 123 (if_statement)


state 222

 125) if_statement1 : ELSIF _ generateElseCode validateLogicexp statement_block if_statement1

  $default      reduce using rule 133 (generateElseCode)

  generateElseCode  go to state 227

state 223

 126) if_statement1 : ELSE _ generateElseCode statement_block

  $default      reduce using rule 133 (generateElseCode)

  generateElseCode  go to state 228

state 224

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 128) validateDoWhileExp : expression _

  MOD           shift, and go to state 78
  MULT          shift, and go to state 81
  DIV           shift, and go to state 77
  PLUS          shift, and go to state 79
  MINUS         shift, and go to state 80
  MTHAN         shift, and go to state 82
  MEQUAL        shift, and go to state 84
  LTHAN         shift, and go to state 83
  LEQUAL        shift, and go to state 85
  EQUALITY      shift, and go to state 86
  DIFFERENT     shift, and go to state 87
  AND           shift, and go to state 88
  OR            shift, and go to state 89
  SUM           shift, and go to state 76
  $default      reduce using rule 128 (validateDoWhileExp)


state 225

 127) do_statement : DO push_cont_jump statement_block WHILE validateDoWhileExp _

  $default      reduce using rule 127 (do_statement)


state 226

  60) variable_value : HEAR PLEFT PRIGHT _

  $default      reduce using rule 60 (variable_value)


state 227

 125) if_statement1 : ELSIF generateElseCode _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 70
  CTEN          shift, and go to state 71
  CTESTRING     shift, and go to state 72

  non_final_id  go to state 61
  function_call  go to state 62
  funk_id       go to state 63
  expression    go to state 195
  literal_expression  go to state 68
  reference_expression  go to state 69
  validateLogicexp  go to state 229

state 228

 126) if_statement1 : ELSE generateElseCode _ statement_block

  BLEFT         shift, and go to state 137

  statement_block  go to state 230

state 229

 125) if_statement1 : ELSIF generateElseCode validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 137

  statement_block  go to state 231

state 230

 126) if_statement1 : ELSE generateElseCode statement_block _

  $default      reduce using rule 126 (if_statement1)


state 231

 125) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 223
  ELSIF         shift, and go to state 222
  $default      reduce using rule 124 (if_statement1)

  if_statement1  go to state 232

state 232

 125) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 125 (if_statement1)

