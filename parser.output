state 169 contains 1 shift/reduce conflicts
state 196 contains 14 shift/reduce conflicts
state 197 contains 1 shift/reduce conflicts
state 198 contains 1 shift/reduce conflicts
state 199 contains 1 shift/reduce conflicts
state 200 contains 1 shift/reduce conflicts
state 201 contains 1 shift/reduce conflicts
state 202 contains 1 shift/reduce conflicts
state 203 contains 1 shift/reduce conflicts
state 204 contains 1 shift/reduce conflicts
state 205 contains 1 shift/reduce conflicts
state 206 contains 1 shift/reduce conflicts
state 207 contains 1 shift/reduce conflicts
state 208 contains 1 shift/reduce conflicts
state 209 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type_specifier some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: new_var_id array_dec
rule 23 new_var_id: ID
rule 24 next_variable: 
rule 25 next_variable: COMA some_variables
rule 26 array_dec: 
rule 27 array_dec: start_array bounds array_dec2 SBRIGHT
rule 28 start_array: SBLEFT
rule 29 array_dec2: 
rule 30 array_dec2: COMA bounds array_dec2
rule 31 bounds: CTEN POINT POINT CTEN
rule 32 variable_assignment: ID array_call EQUAL expression
rule 33 variable_assignment: ID array_call PLUSASSIGN expression
rule 34 variable_assignment: ID array_call MINUSASSIGN expression
rule 35 variable_assignment: ID array_call MULTASSIGN expression
rule 36 variable_assignment: ID array_call DIVASSIGN expression
rule 37 variable_assignment: ID array_call ORASSIGN expression
rule 38 variable_assignment: ID array_call ANDASSIGN expression
rule 39 variable_assignment: ID array_call MODASSIGN expression
rule 40 array_call: 
rule 41 array_call: start_array_call array_index array_call2 SBRIGHT
rule 42 start_array_call: SBLEFT
rule 43 array_call2: 
rule 44 array_call2: COMA array_index array_call2
rule 45 array_index: expression
rule 46 method_declaration: new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 47 new_function_code: FUNK
rule 48 method_declaration1: 
rule 49 method_declaration1: modifier
rule 50 method_declaration2: ID
rule 51 method_declaration2: CHIEF
rule 52 method_declaration3: 
rule 53 method_declaration3: parameter_list method_declaration3
rule 54 method_declaration4: statement_block
rule 55 method_declaration4: SEMIC
rule 56 type_specifier: LOGIC
rule 57 type_specifier: CHAR
rule 58 type_specifier: NUMBER
rule 59 type_specifier: DECIMAL
rule 60 type_specifier: ID
rule 61 type_specifier: OBLIVION
rule 62 type_specifier: STRING
rule 63 parameter_list: parameter parameter_list1
rule 64 parameter_list1: 
rule 65 parameter_list1: COMA parameter_list
rule 66 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 67 statement_block1: 
rule 68 statement_block1: variable_declaration statement_block1
rule 69 statement_block2: 
rule 70 statement_block2: statement statement_block2
rule 71 reference_expression: NULL
rule 72 reference_expression: ITSELF
rule 73 reference_expression: id_refernce array_call
rule 74 reference_expression: non_final_id POINT function_call
rule 75 reference_expression: non_final_id POINT reference_expression5
rule 76 reference_expression: function_call
rule 77 id_refernce: ID
rule 78 non_final_id: ID
rule 79 function_call: funk_id start_funk reference_expression6 PRIGHT
rule 80 funk_id: ID
rule 81 start_funk: PLEFT
rule 82 reference_expression5: ID
rule 83 reference_expression5: ID POINT reference_expression5
rule 84 reference_expression6: 
rule 85 reference_expression6: arglist
rule 86 parameter: type_specifier ID
rule 87 statement: variable_assignment SEMIC
rule 88 statement: SAY PLEFT expression PRIGHT SEMIC
rule 89 statement: HEAR PLEFT reference_expression PRIGHT SEMIC
rule 90 statement: unless_statement
rule 91 statement: if_statement
rule 92 statement: do_statement
rule 93 statement: while_statement
rule 94 statement: REPLY expression SEMIC
rule 95 statement: function_call SEMIC
rule 96 statement: non_final_id POINT function_call SEMIC
rule 97 expression: expression SUM expression
rule 98 expression: expression DIV expression
rule 99 expression: expression MOD expression
rule 100 expression: expression PLUS expression
rule 101 expression: expression MINUS expression
rule 102 expression: expression MULT expression
rule 103 expression: expression MTHAN expression
rule 104 expression: expression LTHAN expression
rule 105 expression: expression MEQUAL expression
rule 106 expression: expression LEQUAL expression
rule 107 expression: expression EQUALITY expression
rule 108 expression: expression DIFFERENT expression
rule 109 expression: NOT expression
rule 110 expression: expression AND expression
rule 111 expression: expression OR expression
rule 112 expression: TRUE
rule 113 expression: FALSE
rule 114 expression: PLEFT expression PRIGHT
rule 115 expression: literal_expression
rule 116 expression: reference_expression
rule 117 arglist: generate_arg arglist1
rule 118 generate_arg: expression
rule 119 arglist1: 
rule 120 arglist1: COMA arglist
rule 121 unless_statement: UNLESS expression statement_block unless_statement1
rule 122 unless_statement1: 
rule 123 unless_statement1: ELSE statement_block
rule 124 if_statement: IF push_if_floor validateLogicexp statement_block if_statement1
rule 125 if_statement1: 
rule 126 if_statement1: ELSIF generateElseCode validateLogicexp statement_block if_statement1
rule 127 if_statement1: ELSE generateElseCode statement_block
rule 128 do_statement: DO push_cont_jump statement_block WHILE validateDoWhileExp
rule 129 validateDoWhileExp: expression
rule 130 while_statement: WHILE push_cont_jump validateLogicexp statement_block
rule 131 push_cont_jump: 
rule 132 push_if_floor: 
rule 133 validateLogicexp: expression
rule 134 generateElseCode: 
rule 135 literal_expression: CTED
rule 136 literal_expression: CTEN
rule 137 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (66)
    on right: 
    on left : 
  supreme_plox (67)
    on right: 
    on left : 1
  plox_generation (68)
    on right: 1 3
    on left : 2 3
  type_declaration (69)
    on right: 3
    on left : 4
  class_declaration (70)
    on right: 4
    on left : 5
  code_new_class (71)
    on right: 5
    on left : 6
  code_heirof (72)
    on right: 5
    on left : 7 8
  class_body (73)
    on right: 5
    on left : 9
  class_variable_block (74)
    on right: 9 11
    on left : 10 11
  class_function_block (75)
    on right: 9 13
    on left : 12 13
  variable_declaration (76)
    on right: 11 68
    on left : 16
  method_declaration (77)
    on right: 13
    on left : 46
  modifier (78)
    on right: 18 49
    on left : 14 15
  variable_is_modifiable (79)
    on right: 16
    on left : 19 20
  variable_scope (80)
    on right: 16
    on left : 17 18
  type_specifier (81)
    on right: 16 46 86
    on left : 56 57 58 59 60 61 62
  some_variables (82)
    on right: 16 25
    on left : 21
  code_new_variable (83)
    on right: 21
    on left : 22
  next_variable (84)
    on right: 21
    on left : 24 25
  new_var_id (85)
    on right: 22
    on left : 23
  array_dec (86)
    on right: 22
    on left : 26 27
  start_array (87)
    on right: 27
    on left : 28
  bounds (88)
    on right: 27 30
    on left : 31
  array_dec2 (89)
    on right: 27 30
    on left : 29 30
  variable_assignment (90)
    on right: 87
    on left : 32 33 34 35 36 37 38 39
  array_call (91)
    on right: 32 33 34 35 36 37 38 39 73
    on left : 40 41
  expression (92)
    on right: 32 33 34 35 36 37 38 39 45 88 94 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 114 118 121 129 133
    on left : 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
  start_array_call (93)
    on right: 41
    on left : 42
  array_index (94)
    on right: 41 44
    on left : 45
  array_call2 (95)
    on right: 41 44
    on left : 43 44
  new_function_code (96)
    on right: 46
    on left : 47
  method_declaration1 (97)
    on right: 46
    on left : 48 49
  method_declaration2 (98)
    on right: 46
    on left : 50 51
  method_declaration3 (99)
    on right: 46 53
    on left : 52 53
  method_declaration4 (100)
    on right: 46
    on left : 54 55
  parameter_list (101)
    on right: 53 65
    on left : 63
  statement_block (102)
    on right: 54 121 123 124 126 127 128 130
    on left : 66
  parameter (103)
    on right: 63
    on left : 86
  parameter_list1 (104)
    on right: 63
    on left : 64 65
  statement_block1 (105)
    on right: 66 68
    on left : 67 68
  statement_block2 (106)
    on right: 66 70
    on left : 69 70
  statement (107)
    on right: 70
    on left : 87 88 89 90 91 92 93 94 95 96
  reference_expression (108)
    on right: 89 116
    on left : 71 72 73 74 75 76
  id_refernce (109)
    on right: 73
    on left : 77
  non_final_id (110)
    on right: 74 75 96
    on left : 78
  function_call (111)
    on right: 74 76 95 96
    on left : 79
  reference_expression5 (112)
    on right: 75 83
    on left : 82 83
  funk_id (113)
    on right: 79
    on left : 80
  start_funk (114)
    on right: 79
    on left : 81
  reference_expression6 (115)
    on right: 79
    on left : 84 85
  arglist (116)
    on right: 85 120
    on left : 117
  unless_statement (117)
    on right: 90
    on left : 121
  if_statement (118)
    on right: 91
    on left : 124
  do_statement (119)
    on right: 92
    on left : 128
  while_statement (120)
    on right: 93
    on left : 130
  literal_expression (121)
    on right: 115
    on left : 135 136 137
  generate_arg (122)
    on right: 117
    on left : 118
  arglist1 (123)
    on right: 117
    on left : 119 120
  unless_statement1 (124)
    on right: 121
    on left : 122 123
  push_if_floor (125)
    on right: 124
    on left : 132
  validateLogicexp (126)
    on right: 124 126 130
    on left : 133
  if_statement1 (127)
    on right: 124 126
    on left : 125 126 127
  generateElseCode (128)
    on right: 126 127
    on left : 134
  push_cont_jump (129)
    on right: 128 130
    on left : 131
  validateDoWhileExp (130)
    on right: 128
    on left : 129

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 31 74 75 83 96
  NOT (3) 109
  MOD (4) 99
  MULT (5) 102
  DIV (6) 98
  PLUS (7) 100
  MINUS (8) 101
  MTHAN (9) 103
  MEQUAL (10) 105
  LTHAN (11) 104
  LEQUAL (12) 106
  EQUALITY (13) 107
  DIFFERENT (14) 108
  AND (15) 110
  OR (16) 111
  EQUAL (17) 32
  PLUSASSIGN (18) 33
  MINUSASSIGN (19) 34
  MULTASSIGN (20) 35
  DIVASSIGN (21) 36
  ORASSIGN (22) 37
  ANDASSIGN (23) 38
  MODASSIGN (24) 39
  SEMIC (25) 16 55 87 88 89 94 95 96
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 66
  BRIGHT (29) 5 66
  ID (30) 6 8 23 32 33 34 35 36 37 38 39 50 60 77 78 80 82 83 86
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 25 30 44 65 120
  SBRIGHT (37) 27 41
  SBLEFT (38) 28 42
  CTEN (39) 31 136
  PLEFT (40) 46 81 88 89 114
  PRIGHT (41) 46 79 88 89 114
  FUNK (42) 47
  CHIEF (43) 51
  LOGIC (44) 56
  CHAR (45) 57
  NUMBER (46) 58
  DECIMAL (47) 59
  OBLIVION (48) 61
  STRING (49) 62
  NULL (50) 71
  ITSELF (51) 72
  SAY (52) 88
  HEAR (53) 89
  REPLY (54) 94
  SUM (55) 97
  TRUE (56) 112
  FALSE (57) 113
  UNLESS (58) 121
  ELSE (59) 123 127
  IF (60) 124
  ELSIF (61) 126
  DO (62) 128
  WHILE (63) 128 130
  CTED (64) 135
  CTESTRING (65) 137

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _

  $default      reduce using rule 4 (type_declaration)


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 11

  code_new_class  go to state 10

state 9


  $default      accept


state 10

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 13
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 12

state 11

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 12

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 14


state 13

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 15


state 14

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 16
  class_variable_block  go to state 17
  variable_declaration  go to state 18
  variable_is_modifiable  go to state 19

state 15

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 16

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 22


state 17

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 23
  method_declaration  go to state 24
  new_function_code  go to state 25

state 18

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 18
  class_variable_block  go to state 27
  variable_is_modifiable  go to state 19

state 19

  16) variable_declaration : variable_is_modifiable _ variable_scope type_specifier some_variables SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 30
  modifier      go to state 31

state 20

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 21

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 22

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 23

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 24

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 24
  class_function_block  go to state 32
  new_function_code  go to state 25

state 25

  46) method_declaration : new_function_code _ method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 48 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 26

  47) new_function_code : FUNK _

  $default      reduce using rule 47 (new_function_code)


state 27

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_is_modifiable variable_scope _ type_specifier some_variables SEMIC

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42

  type_specifier  go to state 35

state 31

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 32

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 33

  46) method_declaration : new_function_code method_declaration1 _ type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42

  type_specifier  go to state 43

state 34

  49) method_declaration1 : modifier _

  $default      reduce using rule 49 (method_declaration1)


state 35

  16) variable_declaration : variable_is_modifiable variable_scope type_specifier _ some_variables SEMIC

  ID            shift, and go to state 47

  some_variables  go to state 44
  code_new_variable  go to state 45
  new_var_id    go to state 46

state 36

  56) type_specifier : LOGIC _

  $default      reduce using rule 56 (type_specifier)


state 37

  57) type_specifier : CHAR _

  $default      reduce using rule 57 (type_specifier)


state 38

  58) type_specifier : NUMBER _

  $default      reduce using rule 58 (type_specifier)


state 39

  59) type_specifier : DECIMAL _

  $default      reduce using rule 59 (type_specifier)


state 40

  60) type_specifier : ID _

  $default      reduce using rule 60 (type_specifier)


state 41

  61) type_specifier : OBLIVION _

  $default      reduce using rule 61 (type_specifier)


state 42

  62) type_specifier : STRING _

  $default      reduce using rule 62 (type_specifier)


state 43

  46) method_declaration : new_function_code method_declaration1 type_specifier _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 49
  CHIEF         shift, and go to state 50

  method_declaration2  go to state 48

state 44

  16) variable_declaration : variable_is_modifiable variable_scope type_specifier some_variables _ SEMIC

  SEMIC         shift, and go to state 51


state 45

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 53
  $default      reduce using rule 24 (next_variable)

  next_variable  go to state 52

state 46

  22) code_new_variable : new_var_id _ array_dec

  SBLEFT        shift, and go to state 56
  $default      reduce using rule 26 (array_dec)

  array_dec     go to state 54
  start_array   go to state 55

state 47

  23) new_var_id : ID _

  $default      reduce using rule 23 (new_var_id)


state 48

  46) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 57


state 49

  50) method_declaration2 : ID _

  $default      reduce using rule 50 (method_declaration2)


state 50

  51) method_declaration2 : CHIEF _

  $default      reduce using rule 51 (method_declaration2)


state 51

  16) variable_declaration : variable_is_modifiable variable_scope type_specifier some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 52

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 53

  25) next_variable : COMA _ some_variables

  ID            shift, and go to state 47

  code_new_variable  go to state 45
  new_var_id    go to state 46
  some_variables  go to state 58

state 54

  22) code_new_variable : new_var_id array_dec _

  $default      reduce using rule 22 (code_new_variable)


state 55

  27) array_dec : start_array _ bounds array_dec2 SBRIGHT

  CTEN          shift, and go to state 60

  bounds        go to state 59

state 56

  28) start_array : SBLEFT _

  $default      reduce using rule 28 (start_array)


state 57

  46) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42
  $default      reduce using rule 52 (method_declaration3)

  method_declaration3  go to state 61
  parameter_list  go to state 62
  parameter     go to state 63
  type_specifier  go to state 64

state 58

  25) next_variable : COMA some_variables _

  $default      reduce using rule 25 (next_variable)


state 59

  27) array_dec : start_array bounds _ array_dec2 SBRIGHT

  COMA          shift, and go to state 66
  $default      reduce using rule 29 (array_dec2)

  array_dec2    go to state 65

state 60

  31) bounds : CTEN _ POINT POINT CTEN

  POINT         shift, and go to state 67


state 61

  46) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 68


state 62

  53) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42
  $default      reduce using rule 52 (method_declaration3)

  parameter_list  go to state 62
  method_declaration3  go to state 69
  parameter     go to state 63
  type_specifier  go to state 64

state 63

  63) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 71
  $default      reduce using rule 64 (parameter_list1)

  parameter_list1  go to state 70

state 64

  86) parameter : type_specifier _ ID

  ID            shift, and go to state 72


state 65

  27) array_dec : start_array bounds array_dec2 _ SBRIGHT

  SBRIGHT       shift, and go to state 73


state 66

  30) array_dec2 : COMA _ bounds array_dec2

  CTEN          shift, and go to state 60

  bounds        go to state 74

state 67

  31) bounds : CTEN POINT _ POINT CTEN

  POINT         shift, and go to state 75


state 68

  46) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 78
  BLEFT         shift, and go to state 79

  method_declaration4  go to state 76
  statement_block  go to state 77

state 69

  53) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 53 (method_declaration3)


state 70

  63) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 63 (parameter_list)


state 71

  65) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 40
  LOGIC         shift, and go to state 36
  CHAR          shift, and go to state 37
  NUMBER        shift, and go to state 38
  DECIMAL       shift, and go to state 39
  OBLIVION      shift, and go to state 41
  STRING        shift, and go to state 42

  parameter     go to state 63
  parameter_list  go to state 80
  type_specifier  go to state 64

state 72

  86) parameter : type_specifier ID _

  $default      reduce using rule 86 (parameter)


state 73

  27) array_dec : start_array bounds array_dec2 SBRIGHT _

  $default      reduce using rule 27 (array_dec)


state 74

  30) array_dec2 : COMA bounds _ array_dec2

  COMA          shift, and go to state 66
  $default      reduce using rule 29 (array_dec2)

  array_dec2    go to state 81

state 75

  31) bounds : CTEN POINT POINT _ CTEN

  CTEN          shift, and go to state 82


state 76

  46) method_declaration : new_function_code method_declaration1 type_specifier method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 46 (method_declaration)


state 77

  54) method_declaration4 : statement_block _

  $default      reduce using rule 54 (method_declaration4)


state 78

  55) method_declaration4 : SEMIC _

  $default      reduce using rule 55 (method_declaration4)


state 79

  66) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 67 (statement_block1)

  variable_is_modifiable  go to state 19
  statement_block1  go to state 83
  variable_declaration  go to state 84

state 80

  65) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 65 (parameter_list1)


state 81

  30) array_dec2 : COMA bounds array_dec2 _

  $default      reduce using rule 30 (array_dec2)


state 82

  31) bounds : CTEN POINT POINT CTEN _

  $default      reduce using rule 31 (bounds)


state 83

  66) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  ID            shift, and go to state 85
  SAY           shift, and go to state 90
  HEAR          shift, and go to state 91
  REPLY         shift, and go to state 96
  UNLESS        shift, and go to state 99
  IF            shift, and go to state 100
  DO            shift, and go to state 101
  WHILE         shift, and go to state 102
  $default      reduce using rule 69 (statement_block2)

  statement_block2  go to state 86
  statement     go to state 87
  funk_id       go to state 88
  variable_assignment  go to state 89
  unless_statement  go to state 92
  if_statement  go to state 93
  do_statement  go to state 94
  while_statement  go to state 95
  function_call  go to state 97
  non_final_id  go to state 98

state 84

  68) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 67 (statement_block1)

  variable_is_modifiable  go to state 19
  variable_declaration  go to state 84
  statement_block1  go to state 103

state 85

  32) variable_assignment : ID _ array_call EQUAL expression
  33) variable_assignment : ID _ array_call PLUSASSIGN expression
  34) variable_assignment : ID _ array_call MINUSASSIGN expression
  35) variable_assignment : ID _ array_call MULTASSIGN expression
  36) variable_assignment : ID _ array_call DIVASSIGN expression
  37) variable_assignment : ID _ array_call ORASSIGN expression
  38) variable_assignment : ID _ array_call ANDASSIGN expression
  39) variable_assignment : ID _ array_call MODASSIGN expression
  78) non_final_id : ID _
  80) funk_id : ID _

  SBLEFT        shift, and go to state 106
  POINT         reduce using rule 78 (non_final_id)
  PLEFT         reduce using rule 80 (funk_id)
  $default      reduce using rule 40 (array_call)

  array_call    go to state 104
  start_array_call  go to state 105

state 86

  66) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 107


state 87

  70) statement_block2 : statement _ statement_block2

  ID            shift, and go to state 85
  SAY           shift, and go to state 90
  HEAR          shift, and go to state 91
  REPLY         shift, and go to state 96
  UNLESS        shift, and go to state 99
  IF            shift, and go to state 100
  DO            shift, and go to state 101
  WHILE         shift, and go to state 102
  $default      reduce using rule 69 (statement_block2)

  statement     go to state 87
  statement_block2  go to state 108
  funk_id       go to state 88
  variable_assignment  go to state 89
  unless_statement  go to state 92
  if_statement  go to state 93
  do_statement  go to state 94
  while_statement  go to state 95
  function_call  go to state 97
  non_final_id  go to state 98

state 88

  79) function_call : funk_id _ start_funk reference_expression6 PRIGHT

  PLEFT         shift, and go to state 110

  start_funk    go to state 109

state 89

  87) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 111


state 90

  88) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 112


state 91

  89) statement : HEAR _ PLEFT reference_expression PRIGHT SEMIC

  PLEFT         shift, and go to state 113


state 92

  90) statement : unless_statement _

  $default      reduce using rule 90 (statement)


state 93

  91) statement : if_statement _

  $default      reduce using rule 91 (statement)


state 94

  92) statement : do_statement _

  $default      reduce using rule 92 (statement)


state 95

  93) statement : while_statement _

  $default      reduce using rule 93 (statement)


state 96

  94) statement : REPLY _ expression SEMIC

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 120
  literal_expression  go to state 125
  reference_expression  go to state 126

state 97

  95) statement : function_call _ SEMIC

  SEMIC         shift, and go to state 130


state 98

  96) statement : non_final_id _ POINT function_call SEMIC

  POINT         shift, and go to state 131


state 99

 121) unless_statement : UNLESS _ expression statement_block unless_statement1

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 132
  literal_expression  go to state 125
  reference_expression  go to state 126

state 100

 124) if_statement : IF _ push_if_floor validateLogicexp statement_block if_statement1

  $default      reduce using rule 132 (push_if_floor)

  push_if_floor  go to state 133

state 101

 128) do_statement : DO _ push_cont_jump statement_block WHILE validateDoWhileExp

  $default      reduce using rule 131 (push_cont_jump)

  push_cont_jump  go to state 134

state 102

 130) while_statement : WHILE _ push_cont_jump validateLogicexp statement_block

  $default      reduce using rule 131 (push_cont_jump)

  push_cont_jump  go to state 135

state 103

  68) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 68 (statement_block1)


state 104

  32) variable_assignment : ID array_call _ EQUAL expression
  33) variable_assignment : ID array_call _ PLUSASSIGN expression
  34) variable_assignment : ID array_call _ MINUSASSIGN expression
  35) variable_assignment : ID array_call _ MULTASSIGN expression
  36) variable_assignment : ID array_call _ DIVASSIGN expression
  37) variable_assignment : ID array_call _ ORASSIGN expression
  38) variable_assignment : ID array_call _ ANDASSIGN expression
  39) variable_assignment : ID array_call _ MODASSIGN expression

  EQUAL         shift, and go to state 136
  PLUSASSIGN    shift, and go to state 137
  MINUSASSIGN   shift, and go to state 138
  MULTASSIGN    shift, and go to state 139
  DIVASSIGN     shift, and go to state 140
  ORASSIGN      shift, and go to state 141
  ANDASSIGN     shift, and go to state 142
  MODASSIGN     shift, and go to state 143


state 105

  41) array_call : start_array_call _ array_index array_call2 SBRIGHT

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  array_index   go to state 144
  expression    go to state 145
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 106

  42) start_array_call : SBLEFT _

  $default      reduce using rule 42 (start_array_call)


state 107

  66) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 66 (statement_block)


state 108

  70) statement_block2 : statement statement_block2 _

  $default      reduce using rule 70 (statement_block2)


state 109

  79) function_call : funk_id start_funk _ reference_expression6 PRIGHT

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129
  $default      reduce using rule 84 (reference_expression6)

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  reference_expression6  go to state 146
  arglist       go to state 147
  expression    go to state 148
  literal_expression  go to state 125
  reference_expression  go to state 126
  generate_arg  go to state 149

state 110

  81) start_funk : PLEFT _

  $default      reduce using rule 81 (start_funk)


state 111

  87) statement : variable_assignment SEMIC _

  $default      reduce using rule 87 (statement)


state 112

  88) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 150
  literal_expression  go to state 125
  reference_expression  go to state 126

state 113

  89) statement : HEAR PLEFT _ reference_expression PRIGHT SEMIC

  ID            shift, and go to state 119
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  reference_expression  go to state 151

state 114

  71) reference_expression : NULL _

  $default      reduce using rule 71 (reference_expression)


state 115

  72) reference_expression : ITSELF _

  $default      reduce using rule 72 (reference_expression)


state 116

  73) reference_expression : id_refernce _ array_call

  SBLEFT        shift, and go to state 106
  $default      reduce using rule 40 (array_call)

  start_array_call  go to state 105
  array_call    go to state 152

state 117

  74) reference_expression : non_final_id _ POINT function_call
  75) reference_expression : non_final_id _ POINT reference_expression5

  POINT         shift, and go to state 153


state 118

  76) reference_expression : function_call _

  $default      reduce using rule 76 (reference_expression)


state 119

  77) id_refernce : ID _
  78) non_final_id : ID _
  80) funk_id : ID _

  POINT         reduce using rule 78 (non_final_id)
  PLEFT         reduce using rule 80 (funk_id)
  $default      reduce using rule 77 (id_refernce)


state 120

  94) statement : REPLY expression _ SEMIC
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SEMIC         shift, and go to state 154
  SUM           shift, and go to state 155


state 121

 109) expression : NOT _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 169
  literal_expression  go to state 125
  reference_expression  go to state 126

state 122

 112) expression : TRUE _

  $default      reduce using rule 112 (expression)


state 123

 113) expression : FALSE _

  $default      reduce using rule 113 (expression)


state 124

 114) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 170
  literal_expression  go to state 125
  reference_expression  go to state 126

state 125

 115) expression : literal_expression _

  $default      reduce using rule 115 (expression)


state 126

 116) expression : reference_expression _

  $default      reduce using rule 116 (expression)


state 127

 135) literal_expression : CTED _

  $default      reduce using rule 135 (literal_expression)


state 128

 136) literal_expression : CTEN _

  $default      reduce using rule 136 (literal_expression)


state 129

 137) literal_expression : CTESTRING _

  $default      reduce using rule 137 (literal_expression)


state 130

  95) statement : function_call SEMIC _

  $default      reduce using rule 95 (statement)


state 131

  96) statement : non_final_id POINT _ function_call SEMIC

  ID            shift, and go to state 171

  funk_id       go to state 88
  function_call  go to state 172

state 132

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 121) unless_statement : UNLESS expression _ statement_block unless_statement1

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  BLEFT         shift, and go to state 79
  SUM           shift, and go to state 155

  statement_block  go to state 173

state 133

 124) if_statement : IF push_if_floor _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 174
  literal_expression  go to state 125
  reference_expression  go to state 126
  validateLogicexp  go to state 175

state 134

 128) do_statement : DO push_cont_jump _ statement_block WHILE validateDoWhileExp

  BLEFT         shift, and go to state 79

  statement_block  go to state 176

state 135

 130) while_statement : WHILE push_cont_jump _ validateLogicexp statement_block

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 174
  literal_expression  go to state 125
  reference_expression  go to state 126
  validateLogicexp  go to state 177

state 136

  32) variable_assignment : ID array_call EQUAL _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 178
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 137

  33) variable_assignment : ID array_call PLUSASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 179
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 138

  34) variable_assignment : ID array_call MINUSASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 180
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 139

  35) variable_assignment : ID array_call MULTASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 181
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 140

  36) variable_assignment : ID array_call DIVASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 182
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 141

  37) variable_assignment : ID array_call ORASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 183
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 142

  38) variable_assignment : ID array_call ANDASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 184
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 143

  39) variable_assignment : ID array_call MODASSIGN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  expression    go to state 185
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 144

  41) array_call : start_array_call array_index _ array_call2 SBRIGHT

  COMA          shift, and go to state 187
  $default      reduce using rule 43 (array_call2)

  array_call2   go to state 186

state 145

  45) array_index : expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 45 (array_index)


state 146

  79) function_call : funk_id start_funk reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 188


state 147

  85) reference_expression6 : arglist _

  $default      reduce using rule 85 (reference_expression6)


state 148

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 118) generate_arg : expression _

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 118 (generate_arg)


state 149

 117) arglist : generate_arg _ arglist1

  COMA          shift, and go to state 190
  $default      reduce using rule 119 (arglist1)

  arglist1      go to state 189

state 150

  88) statement : SAY PLEFT expression _ PRIGHT SEMIC
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  PRIGHT        shift, and go to state 191
  SUM           shift, and go to state 155


state 151

  89) statement : HEAR PLEFT reference_expression _ PRIGHT SEMIC

  PRIGHT        shift, and go to state 192


state 152

  73) reference_expression : id_refernce array_call _

  $default      reduce using rule 73 (reference_expression)


state 153

  74) reference_expression : non_final_id POINT _ function_call
  75) reference_expression : non_final_id POINT _ reference_expression5

  ID            shift, and go to state 195

  function_call  go to state 193
  reference_expression5  go to state 194
  funk_id       go to state 88

state 154

  94) statement : REPLY expression SEMIC _

  $default      reduce using rule 94 (statement)


state 155

  97) expression : expression SUM _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 196
  literal_expression  go to state 125
  reference_expression  go to state 126

state 156

  98) expression : expression DIV _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 197
  literal_expression  go to state 125
  reference_expression  go to state 126

state 157

  99) expression : expression MOD _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 198
  literal_expression  go to state 125
  reference_expression  go to state 126

state 158

 100) expression : expression PLUS _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 199
  literal_expression  go to state 125
  reference_expression  go to state 126

state 159

 101) expression : expression MINUS _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 200
  literal_expression  go to state 125
  reference_expression  go to state 126

state 160

 102) expression : expression MULT _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 201
  literal_expression  go to state 125
  reference_expression  go to state 126

state 161

 103) expression : expression MTHAN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 202
  literal_expression  go to state 125
  reference_expression  go to state 126

state 162

 104) expression : expression LTHAN _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 203
  literal_expression  go to state 125
  reference_expression  go to state 126

state 163

 105) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 204
  literal_expression  go to state 125
  reference_expression  go to state 126

state 164

 106) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 205
  literal_expression  go to state 125
  reference_expression  go to state 126

state 165

 107) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 206
  literal_expression  go to state 125
  reference_expression  go to state 126

state 166

 108) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 207
  literal_expression  go to state 125
  reference_expression  go to state 126

state 167

 110) expression : expression AND _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 208
  literal_expression  go to state 125
  reference_expression  go to state 126

state 168

 111) expression : expression OR _ expression

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 209
  literal_expression  go to state 125
  reference_expression  go to state 126

state 169

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 109) expression : NOT expression _
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  SUM           shift, and go to state 155
  SUM           [reduce using rule 109 (expression)]
  $default      reduce using rule 109 (expression)


state 170

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 114) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  PRIGHT        shift, and go to state 210
  SUM           shift, and go to state 155


state 171

  80) funk_id : ID _

  $default      reduce using rule 80 (funk_id)


state 172

  96) statement : non_final_id POINT function_call _ SEMIC

  SEMIC         shift, and go to state 211


state 173

 121) unless_statement : UNLESS expression statement_block _ unless_statement1

  ELSE          shift, and go to state 213
  $default      reduce using rule 122 (unless_statement1)

  unless_statement1  go to state 212

state 174

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 133) validateLogicexp : expression _

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 133 (validateLogicexp)


state 175

 124) if_statement : IF push_if_floor validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 79

  statement_block  go to state 214

state 176

 128) do_statement : DO push_cont_jump statement_block _ WHILE validateDoWhileExp

  WHILE         shift, and go to state 215


state 177

 130) while_statement : WHILE push_cont_jump validateLogicexp _ statement_block

  BLEFT         shift, and go to state 79

  statement_block  go to state 216

state 178

  32) variable_assignment : ID array_call EQUAL expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 32 (variable_assignment)


state 179

  33) variable_assignment : ID array_call PLUSASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 33 (variable_assignment)


state 180

  34) variable_assignment : ID array_call MINUSASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 34 (variable_assignment)


state 181

  35) variable_assignment : ID array_call MULTASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 35 (variable_assignment)


state 182

  36) variable_assignment : ID array_call DIVASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 36 (variable_assignment)


state 183

  37) variable_assignment : ID array_call ORASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 37 (variable_assignment)


state 184

  38) variable_assignment : ID array_call ANDASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 38 (variable_assignment)


state 185

  39) variable_assignment : ID array_call MODASSIGN expression _
  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 39 (variable_assignment)


state 186

  41) array_call : start_array_call array_index array_call2 _ SBRIGHT

  SBRIGHT       shift, and go to state 217


state 187

  44) array_call2 : COMA _ array_index array_call2

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  array_index   go to state 218
  expression    go to state 145
  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  literal_expression  go to state 125
  reference_expression  go to state 126

state 188

  79) function_call : funk_id start_funk reference_expression6 PRIGHT _

  $default      reduce using rule 79 (function_call)


state 189

 117) arglist : generate_arg arglist1 _

  $default      reduce using rule 117 (arglist)


state 190

 120) arglist1 : COMA _ arglist

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 148
  literal_expression  go to state 125
  reference_expression  go to state 126
  generate_arg  go to state 149
  arglist       go to state 219

state 191

  88) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 220


state 192

  89) statement : HEAR PLEFT reference_expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 221


state 193

  74) reference_expression : non_final_id POINT function_call _

  $default      reduce using rule 74 (reference_expression)


state 194

  75) reference_expression : non_final_id POINT reference_expression5 _

  $default      reduce using rule 75 (reference_expression)


state 195

  80) funk_id : ID _
  82) reference_expression5 : ID _
  83) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 222
  PLEFT         reduce using rule 80 (funk_id)
  $default      reduce using rule 82 (reference_expression5)


state 196

  97) expression : expression _ SUM expression
  97) expression : expression SUM expression _
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MOD           [reduce using rule 97 (expression)]
  MULT          shift, and go to state 160
  MULT          [reduce using rule 97 (expression)]
  DIV           shift, and go to state 156
  DIV           [reduce using rule 97 (expression)]
  PLUS          shift, and go to state 158
  PLUS          [reduce using rule 97 (expression)]
  MINUS         shift, and go to state 159
  MINUS         [reduce using rule 97 (expression)]
  MTHAN         shift, and go to state 161
  MTHAN         [reduce using rule 97 (expression)]
  MEQUAL        shift, and go to state 163
  MEQUAL        [reduce using rule 97 (expression)]
  LTHAN         shift, and go to state 162
  LTHAN         [reduce using rule 97 (expression)]
  LEQUAL        shift, and go to state 164
  LEQUAL        [reduce using rule 97 (expression)]
  EQUALITY      shift, and go to state 165
  EQUALITY      [reduce using rule 97 (expression)]
  DIFFERENT     shift, and go to state 166
  DIFFERENT     [reduce using rule 97 (expression)]
  AND           shift, and go to state 167
  AND           [reduce using rule 97 (expression)]
  OR            shift, and go to state 168
  OR            [reduce using rule 97 (expression)]
  SUM           shift, and go to state 155
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 197

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  98) expression : expression DIV expression _
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  SUM           shift, and go to state 155
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 198

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
  99) expression : expression MOD expression _
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  SUM           shift, and go to state 155
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 199

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 100) expression : expression PLUS expression _
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  SUM           shift, and go to state 155
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 200

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 101) expression : expression MINUS expression _
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  SUM           shift, and go to state 155
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 201

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 102) expression : expression MULT expression _
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  SUM           shift, and go to state 155
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 202

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 103) expression : expression MTHAN expression _
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  SUM           shift, and go to state 155
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 203

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 104) expression : expression LTHAN expression _
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  SUM           shift, and go to state 155
  SUM           [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)


state 204

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 105) expression : expression MEQUAL expression _
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  SUM           shift, and go to state 155
  SUM           [reduce using rule 105 (expression)]
  $default      reduce using rule 105 (expression)


state 205

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 106) expression : expression LEQUAL expression _
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  SUM           shift, and go to state 155
  SUM           [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)


state 206

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 107) expression : expression EQUALITY expression _
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  SUM           shift, and go to state 155
  SUM           [reduce using rule 107 (expression)]
  $default      reduce using rule 107 (expression)


state 207

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 108) expression : expression DIFFERENT expression _
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  SUM           shift, and go to state 155
  SUM           [reduce using rule 108 (expression)]
  $default      reduce using rule 108 (expression)


state 208

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 110) expression : expression AND expression _
 111) expression : expression _ OR expression

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  SUM           shift, and go to state 155
  SUM           [reduce using rule 110 (expression)]
  $default      reduce using rule 110 (expression)


state 209

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 111) expression : expression OR expression _

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  SUM           shift, and go to state 155
  SUM           [reduce using rule 111 (expression)]
  $default      reduce using rule 111 (expression)


state 210

 114) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 114 (expression)


state 211

  96) statement : non_final_id POINT function_call SEMIC _

  $default      reduce using rule 96 (statement)


state 212

 121) unless_statement : UNLESS expression statement_block unless_statement1 _

  $default      reduce using rule 121 (unless_statement)


state 213

 123) unless_statement1 : ELSE _ statement_block

  BLEFT         shift, and go to state 79

  statement_block  go to state 223

state 214

 124) if_statement : IF push_if_floor validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 226
  ELSIF         shift, and go to state 225
  $default      reduce using rule 125 (if_statement1)

  if_statement1  go to state 224

state 215

 128) do_statement : DO push_cont_jump statement_block WHILE _ validateDoWhileExp

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 227
  literal_expression  go to state 125
  reference_expression  go to state 126
  validateDoWhileExp  go to state 228

state 216

 130) while_statement : WHILE push_cont_jump validateLogicexp statement_block _

  $default      reduce using rule 130 (while_statement)


state 217

  41) array_call : start_array_call array_index array_call2 SBRIGHT _

  $default      reduce using rule 41 (array_call)


state 218

  44) array_call2 : COMA array_index _ array_call2

  COMA          shift, and go to state 187
  $default      reduce using rule 43 (array_call2)

  array_call2   go to state 229

state 219

 120) arglist1 : COMA arglist _

  $default      reduce using rule 120 (arglist1)


state 220

  88) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 88 (statement)


state 221

  89) statement : HEAR PLEFT reference_expression PRIGHT SEMIC _

  $default      reduce using rule 89 (statement)


state 222

  83) reference_expression5 : ID POINT _ reference_expression5

  ID            shift, and go to state 230

  reference_expression5  go to state 231

state 223

 123) unless_statement1 : ELSE statement_block _

  $default      reduce using rule 123 (unless_statement1)


state 224

 124) if_statement : IF push_if_floor validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 124 (if_statement)


state 225

 126) if_statement1 : ELSIF _ generateElseCode validateLogicexp statement_block if_statement1

  $default      reduce using rule 134 (generateElseCode)

  generateElseCode  go to state 232

state 226

 127) if_statement1 : ELSE _ generateElseCode statement_block

  $default      reduce using rule 134 (generateElseCode)

  generateElseCode  go to state 233

state 227

  97) expression : expression _ SUM expression
  98) expression : expression _ DIV expression
  99) expression : expression _ MOD expression
 100) expression : expression _ PLUS expression
 101) expression : expression _ MINUS expression
 102) expression : expression _ MULT expression
 103) expression : expression _ MTHAN expression
 104) expression : expression _ LTHAN expression
 105) expression : expression _ MEQUAL expression
 106) expression : expression _ LEQUAL expression
 107) expression : expression _ EQUALITY expression
 108) expression : expression _ DIFFERENT expression
 110) expression : expression _ AND expression
 111) expression : expression _ OR expression
 129) validateDoWhileExp : expression _

  MOD           shift, and go to state 157
  MULT          shift, and go to state 160
  DIV           shift, and go to state 156
  PLUS          shift, and go to state 158
  MINUS         shift, and go to state 159
  MTHAN         shift, and go to state 161
  MEQUAL        shift, and go to state 163
  LTHAN         shift, and go to state 162
  LEQUAL        shift, and go to state 164
  EQUALITY      shift, and go to state 165
  DIFFERENT     shift, and go to state 166
  AND           shift, and go to state 167
  OR            shift, and go to state 168
  SUM           shift, and go to state 155
  $default      reduce using rule 129 (validateDoWhileExp)


state 228

 128) do_statement : DO push_cont_jump statement_block WHILE validateDoWhileExp _

  $default      reduce using rule 128 (do_statement)


state 229

  44) array_call2 : COMA array_index array_call2 _

  $default      reduce using rule 44 (array_call2)


state 230

  82) reference_expression5 : ID _
  83) reference_expression5 : ID _ POINT reference_expression5

  POINT         shift, and go to state 222
  $default      reduce using rule 82 (reference_expression5)


state 231

  83) reference_expression5 : ID POINT reference_expression5 _

  $default      reduce using rule 83 (reference_expression5)


state 232

 126) if_statement1 : ELSIF generateElseCode _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 121
  ID            shift, and go to state 119
  CTEN          shift, and go to state 128
  PLEFT         shift, and go to state 124
  NULL          shift, and go to state 114
  ITSELF        shift, and go to state 115
  TRUE          shift, and go to state 122
  FALSE         shift, and go to state 123
  CTED          shift, and go to state 127
  CTESTRING     shift, and go to state 129

  id_refernce   go to state 116
  non_final_id  go to state 117
  function_call  go to state 118
  funk_id       go to state 88
  expression    go to state 174
  literal_expression  go to state 125
  reference_expression  go to state 126
  validateLogicexp  go to state 234

state 233

 127) if_statement1 : ELSE generateElseCode _ statement_block

  BLEFT         shift, and go to state 79

  statement_block  go to state 235

state 234

 126) if_statement1 : ELSIF generateElseCode validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 79

  statement_block  go to state 236

state 235

 127) if_statement1 : ELSE generateElseCode statement_block _

  $default      reduce using rule 127 (if_statement1)


state 236

 126) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 226
  ELSIF         shift, and go to state 225
  $default      reduce using rule 125 (if_statement1)

  if_statement1  go to state 237

state 237

 126) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 126 (if_statement1)

