state 93 contains 1 shift/reduce conflicts
state 100 contains 14 shift/reduce conflicts
state 101 contains 1 shift/reduce conflicts
state 102 contains 1 shift/reduce conflicts
state 103 contains 1 shift/reduce conflicts
state 104 contains 1 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 106 contains 1 shift/reduce conflicts
state 107 contains 1 shift/reduce conflicts
state 108 contains 1 shift/reduce conflicts
state 109 contains 1 shift/reduce conflicts
state 110 contains 1 shift/reduce conflicts
state 111 contains 1 shift/reduce conflicts
state 112 contains 1 shift/reduce conflicts
state 113 contains 1 shift/reduce conflicts
state 118 contains 2 shift/reduce conflicts
state 201 contains 1 shift/reduce conflicts
state 210 contains 1 shift/reduce conflicts
state 211 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration SEMIC
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: ID
rule 23 next_variable: 
rule 24 next_variable: COMA some_variables
rule 25 type: type_specifier type1
rule 26 type1: 
rule 27 type1: type2
rule 28 type2: SBLEFT expression SBRIGHT type1
rule 29 variable_assignment: ID variable_assignment1 EQUAL variable_value
rule 30 variable_assignment: ID variable_assignment1 PLUSASSIGN variable_value
rule 31 variable_assignment: ID variable_assignment1 MINUSASSIGN variable_value
rule 32 variable_assignment: ID variable_assignment1 MULTASSIGN variable_value
rule 33 variable_assignment: ID variable_assignment1 DIVASSIGN variable_value
rule 34 variable_assignment: ID variable_assignment1 ORASSIGN variable_value
rule 35 variable_assignment: ID variable_assignment1 ANDASSIGN variable_value
rule 36 variable_assignment: ID variable_assignment1 MODASSIGN variable_value
rule 37 variable_assignment1: 
rule 38 variable_assignment1: variable_assignment4 variable_assignment5
rule 39 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 40 variable_assignment5: 
rule 41 variable_assignment5: variable_assignment4
rule 42 method_declaration: new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 43 new_function_code: FUNK
rule 44 method_declaration1: 
rule 45 method_declaration1: modifier
rule 46 method_declaration2: ID
rule 47 method_declaration2: CHIEF
rule 48 method_declaration3: 
rule 49 method_declaration3: parameter_list method_declaration3
rule 50 method_declaration4: statement_block
rule 51 method_declaration4: SEMIC
rule 52 type_specifier: LOGIC
rule 53 type_specifier: CHAR
rule 54 type_specifier: NUMBER
rule 55 type_specifier: DECIMAL
rule 56 type_specifier: ID
rule 57 type_specifier: OBLIVION
rule 58 type_specifier: STRING
rule 59 variable_value: expression
rule 60 variable_value: HEAR PLEFT PRIGHT
rule 61 parameter_list: parameter parameter_list1
rule 62 parameter_list1: 
rule 63 parameter_list1: COMA parameter_list
rule 64 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 65 statement_block1: 
rule 66 statement_block1: variable_declaration statement_block1
rule 67 statement_block2: 
rule 68 statement_block2: statement statement_block2
rule 69 reference_expression: NULL
rule 70 reference_expression: ITSELF
rule 71 reference_expression: ID
rule 72 reference_expression: reference_expression2
rule 73 reference_expression2: reference_expression reference_expression5
rule 74 reference_expression5: PLEFT reference_expression6 PRIGHT
rule 75 reference_expression5: SBLEFT expression SBRIGHT
rule 76 reference_expression5: POINT reference_expression
rule 77 reference_expression6: 
rule 78 reference_expression6: arglist
rule 79 parameter: type ID parameter1
rule 80 parameter1: 
rule 81 parameter1: parameter2
rule 82 parameter2: SBLEFT expression SBRIGHT parameter3
rule 83 parameter3: 
rule 84 parameter3: parameter2
rule 85 statement: variable_assignment SEMIC
rule 86 statement: SAY PLEFT expression PRIGHT SEMIC
rule 87 statement: statement_block
rule 88 statement: unless_statement
rule 89 statement: if_statement
rule 90 statement: do_statement
rule 91 statement: while_statement
rule 92 statement: REPLY statement1 SEMIC
rule 93 statement: SEMIC
rule 94 statement1: 
rule 95 statement1: expression
rule 96 expression: expression SUM expression
rule 97 expression: expression DIV expression
rule 98 expression: expression MOD expression
rule 99 expression: expression PLUS expression
rule 100 expression: expression MINUS expression
rule 101 expression: expression MULT expression
rule 102 expression: expression MTHAN expression
rule 103 expression: expression LTHAN expression
rule 104 expression: expression MEQUAL expression
rule 105 expression: expression LEQUAL expression
rule 106 expression: expression EQUALITY expression
rule 107 expression: expression DIFFERENT expression
rule 108 expression: NOT expression
rule 109 expression: expression AND expression
rule 110 expression: expression OR expression
rule 111 expression: TRUE
rule 112 expression: FALSE
rule 113 expression: PLEFT expression PRIGHT
rule 114 expression: literal_expression
rule 115 expression: reference_expression
rule 116 arglist: expression arglist1
rule 117 arglist1: 
rule 118 arglist1: COMA arglist
rule 119 unless_statement: UNLESS PLEFT expression PRIGHT statement unless_statement1
rule 120 unless_statement1: 
rule 121 unless_statement1: ELSE statement
rule 122 if_statement: IF PLEFT expression PRIGHT statement if_statement1
rule 123 if_statement1: 
rule 124 if_statement1: ELSE statement
rule 125 do_statement: DO statement WHILE PLEFT expression PRIGHT SEMIC
rule 126 while_statement: WHILE PLEFT expression PRIGHT statement
rule 127 literal_expression: CTED
rule 128 literal_expression: CTEN
rule 129 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (65)
    on right: 
    on left : 
  supreme_plox (66)
    on right: 
    on left : 1
  plox_generation (67)
    on right: 1 3
    on left : 2 3
  type_declaration (68)
    on right: 3
    on left : 4
  class_declaration (69)
    on right: 4
    on left : 5
  code_new_class (70)
    on right: 5
    on left : 6
  code_heirof (71)
    on right: 5
    on left : 7 8
  class_body (72)
    on right: 5
    on left : 9
  class_variable_block (73)
    on right: 9 11
    on left : 10 11
  class_function_block (74)
    on right: 9 13
    on left : 12 13
  variable_declaration (75)
    on right: 11 66
    on left : 16
  method_declaration (76)
    on right: 13
    on left : 42
  modifier (77)
    on right: 18 45
    on left : 14 15
  variable_is_modifiable (78)
    on right: 16
    on left : 19 20
  variable_scope (79)
    on right: 16
    on left : 17 18
  type (80)
    on right: 16 42 79
    on left : 25
  some_variables (81)
    on right: 16 24
    on left : 21
  code_new_variable (82)
    on right: 21
    on left : 22
  next_variable (83)
    on right: 21
    on left : 23 24
  type_specifier (84)
    on right: 25
    on left : 52 53 54 55 56 57 58
  type1 (85)
    on right: 25 28
    on left : 26 27
  type2 (86)
    on right: 27
    on left : 28
  expression (87)
    on right: 28 39 59 75 82 86 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 113 116 119 122 125 126
    on left : 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
  variable_assignment (88)
    on right: 85
    on left : 29 30 31 32 33 34 35 36
  variable_assignment1 (89)
    on right: 29 30 31 32 33 34 35 36
    on left : 37 38
  variable_value (90)
    on right: 29 30 31 32 33 34 35 36
    on left : 59 60
  variable_assignment4 (91)
    on right: 38 41
    on left : 39
  variable_assignment5 (92)
    on right: 38 39
    on left : 40 41
  new_function_code (93)
    on right: 42
    on left : 43
  method_declaration1 (94)
    on right: 42
    on left : 44 45
  method_declaration2 (95)
    on right: 42
    on left : 46 47
  method_declaration3 (96)
    on right: 42 49
    on left : 48 49
  method_declaration4 (97)
    on right: 42
    on left : 50 51
  parameter_list (98)
    on right: 49 63
    on left : 61
  statement_block (99)
    on right: 50 87
    on left : 64
  parameter (100)
    on right: 61
    on left : 79
  parameter_list1 (101)
    on right: 61
    on left : 62 63
  statement_block1 (102)
    on right: 64 66
    on left : 65 66
  statement_block2 (103)
    on right: 64 68
    on left : 67 68
  statement (104)
    on right: 68 119 121 122 124 125 126
    on left : 85 86 87 88 89 90 91 92 93
  reference_expression (105)
    on right: 73 76 115
    on left : 69 70 71 72
  reference_expression2 (106)
    on right: 72
    on left : 73
  reference_expression5 (107)
    on right: 73
    on left : 74 75 76
  reference_expression6 (108)
    on right: 74
    on left : 77 78
  arglist (109)
    on right: 78 118
    on left : 116
  parameter1 (110)
    on right: 79
    on left : 80 81
  parameter2 (111)
    on right: 81 84
    on left : 82
  parameter3 (112)
    on right: 82
    on left : 83 84
  unless_statement (113)
    on right: 88
    on left : 119
  if_statement (114)
    on right: 89
    on left : 122
  do_statement (115)
    on right: 90
    on left : 125
  while_statement (116)
    on right: 91
    on left : 126
  statement1 (117)
    on right: 92
    on left : 94 95
  literal_expression (118)
    on right: 114
    on left : 127 128 129
  arglist1 (119)
    on right: 116
    on left : 117 118
  unless_statement1 (120)
    on right: 119
    on left : 120 121
  if_statement1 (121)
    on right: 122
    on left : 123 124

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 76
  NOT (3) 108
  MOD (4) 98
  MULT (5) 101
  DIV (6) 97
  PLUS (7) 99
  MINUS (8) 100
  MTHAN (9) 102
  MEQUAL (10) 104
  LTHAN (11) 103
  LEQUAL (12) 105
  EQUALITY (13) 106
  DIFFERENT (14) 107
  AND (15) 109
  OR (16) 110
  EQUAL (17) 29
  PLUSASSIGN (18) 30
  MINUSASSIGN (19) 31
  MULTASSIGN (20) 32
  DIVASSIGN (21) 33
  ORASSIGN (22) 34
  ANDASSIGN (23) 35
  MODASSIGN (24) 36
  SEMIC (25) 4 16 51 85 86 92 93 125
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 64
  BRIGHT (29) 5 64
  ID (30) 6 8 22 29 30 31 32 33 34 35 36 46 56 71 79
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 24 63 118
  SBLEFT (37) 28 39 75 82
  SBRIGHT (38) 28 39 75 82
  PLEFT (39) 42 60 74 86 113 119 122 125 126
  PRIGHT (40) 42 60 74 86 113 119 122 125 126
  FUNK (41) 43
  CHIEF (42) 47
  LOGIC (43) 52
  CHAR (44) 53
  NUMBER (45) 54
  DECIMAL (46) 55
  OBLIVION (47) 57
  STRING (48) 58
  HEAR (49) 60
  NULL (50) 69
  ITSELF (51) 70
  SAY (52) 86
  REPLY (53) 92
  SUM (54) 96
  TRUE (55) 111
  FALSE (56) 112
  UNLESS (57) 119
  ELSE (58) 121 124
  IF (59) 122
  DO (60) 125
  WHILE (61) 125 126
  CTED (62) 127
  CTEN (63) 128
  CTESTRING (64) 129

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration SEMIC

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _ SEMIC

  SEMIC         shift, and go to state 10


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 12

  code_new_class  go to state 11

state 9


  $default      accept


state 10

   4) type_declaration : HABEMVS class_declaration SEMIC _

  $default      reduce using rule 4 (type_declaration)


state 11

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 14
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 13

state 12

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 13

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 15


state 14

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 16


state 15

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 17
  class_variable_block  go to state 18
  variable_declaration  go to state 19
  variable_is_modifiable  go to state 20

state 16

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 17

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 23


state 18

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 27
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 24
  method_declaration  go to state 25
  new_function_code  go to state 26

state 19

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 19
  class_variable_block  go to state 28
  variable_is_modifiable  go to state 20

state 20

  16) variable_declaration : variable_is_modifiable _ variable_scope type some_variables SEMIC

  OPEN          shift, and go to state 29
  HIDDEN        shift, and go to state 30
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 31
  modifier      go to state 32

state 21

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 22

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 23

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 24

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 25

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 27
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 25
  class_function_block  go to state 33
  new_function_code  go to state 26

state 26

  42) method_declaration : new_function_code _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 29
  HIDDEN        shift, and go to state 30
  $default      reduce using rule 44 (method_declaration1)

  method_declaration1  go to state 34
  modifier      go to state 35

state 27

  43) new_function_code : FUNK _

  $default      reduce using rule 43 (new_function_code)


state 28

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 29

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 30

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 31

  16) variable_declaration : variable_is_modifiable variable_scope _ type some_variables SEMIC

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44

  type          go to state 36
  type_specifier  go to state 37

state 32

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 33

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 34

  42) method_declaration : new_function_code method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44

  type_specifier  go to state 37
  type          go to state 45

state 35

  45) method_declaration1 : modifier _

  $default      reduce using rule 45 (method_declaration1)


state 36

  16) variable_declaration : variable_is_modifiable variable_scope type _ some_variables SEMIC

  ID            shift, and go to state 48

  some_variables  go to state 46
  code_new_variable  go to state 47

state 37

  25) type : type_specifier _ type1

  SBLEFT        shift, and go to state 51
  $default      reduce using rule 26 (type1)

  type1         go to state 49
  type2         go to state 50

state 38

  52) type_specifier : LOGIC _

  $default      reduce using rule 52 (type_specifier)


state 39

  53) type_specifier : CHAR _

  $default      reduce using rule 53 (type_specifier)


state 40

  54) type_specifier : NUMBER _

  $default      reduce using rule 54 (type_specifier)


state 41

  55) type_specifier : DECIMAL _

  $default      reduce using rule 55 (type_specifier)


state 42

  56) type_specifier : ID _

  $default      reduce using rule 56 (type_specifier)


state 43

  57) type_specifier : OBLIVION _

  $default      reduce using rule 57 (type_specifier)


state 44

  58) type_specifier : STRING _

  $default      reduce using rule 58 (type_specifier)


state 45

  42) method_declaration : new_function_code method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 53
  CHIEF         shift, and go to state 54

  method_declaration2  go to state 52

state 46

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables _ SEMIC

  SEMIC         shift, and go to state 55


state 47

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 57
  $default      reduce using rule 23 (next_variable)

  next_variable  go to state 56

state 48

  22) code_new_variable : ID _

  $default      reduce using rule 22 (code_new_variable)


state 49

  25) type : type_specifier type1 _

  $default      reduce using rule 25 (type)


state 50

  27) type1 : type2 _

  $default      reduce using rule 27 (type1)


state 51

  28) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  expression    go to state 58
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 52

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 72


state 53

  46) method_declaration2 : ID _

  $default      reduce using rule 46 (method_declaration2)


state 54

  47) method_declaration2 : CHIEF _

  $default      reduce using rule 47 (method_declaration2)


state 55

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 56

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 57

  24) next_variable : COMA _ some_variables

  ID            shift, and go to state 48

  code_new_variable  go to state 47
  some_variables  go to state 73

state 58

  28) type2 : SBLEFT expression _ SBRIGHT type1
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 74
  SUM           shift, and go to state 75


state 59

  69) reference_expression : NULL _

  $default      reduce using rule 69 (reference_expression)


state 60

  70) reference_expression : ITSELF _

  $default      reduce using rule 70 (reference_expression)


state 61

  71) reference_expression : ID _

  $default      reduce using rule 71 (reference_expression)


state 62

  72) reference_expression : reference_expression2 _

  $default      reduce using rule 72 (reference_expression)


state 63

  73) reference_expression2 : reference_expression _ reference_expression5
 115) expression : reference_expression _

  POINT         shift, and go to state 92
  SBLEFT        shift, and go to state 91
  PLEFT         shift, and go to state 90
  $default      reduce using rule 115 (expression)

  reference_expression5  go to state 89

state 64

 108) expression : NOT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 93
  literal_expression  go to state 68

state 65

 111) expression : TRUE _

  $default      reduce using rule 111 (expression)


state 66

 112) expression : FALSE _

  $default      reduce using rule 112 (expression)


state 67

 113) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 94
  literal_expression  go to state 68

state 68

 114) expression : literal_expression _

  $default      reduce using rule 114 (expression)


state 69

 127) literal_expression : CTED _

  $default      reduce using rule 127 (literal_expression)


state 70

 128) literal_expression : CTEN _

  $default      reduce using rule 128 (literal_expression)


state 71

 129) literal_expression : CTESTRING _

  $default      reduce using rule 129 (literal_expression)


state 72

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 37
  method_declaration3  go to state 95
  parameter_list  go to state 96
  parameter     go to state 97
  type          go to state 98

state 73

  24) next_variable : COMA some_variables _

  $default      reduce using rule 24 (next_variable)


state 74

  28) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 51
  $default      reduce using rule 26 (type1)

  type2         go to state 50
  type1         go to state 99

state 75

  96) expression : expression SUM _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 100
  literal_expression  go to state 68

state 76

  97) expression : expression DIV _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 101
  literal_expression  go to state 68

state 77

  98) expression : expression MOD _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 102
  literal_expression  go to state 68

state 78

  99) expression : expression PLUS _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 103
  literal_expression  go to state 68

state 79

 100) expression : expression MINUS _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 104
  literal_expression  go to state 68

state 80

 101) expression : expression MULT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 105
  literal_expression  go to state 68

state 81

 102) expression : expression MTHAN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 106
  literal_expression  go to state 68

state 82

 103) expression : expression LTHAN _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 107
  literal_expression  go to state 68

state 83

 104) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 108
  literal_expression  go to state 68

state 84

 105) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 109
  literal_expression  go to state 68

state 85

 106) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 110
  literal_expression  go to state 68

state 86

 107) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 111
  literal_expression  go to state 68

state 87

 109) expression : expression AND _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 112
  literal_expression  go to state 68

state 88

 110) expression : expression OR _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 113
  literal_expression  go to state 68

state 89

  73) reference_expression2 : reference_expression reference_expression5 _

  $default      reduce using rule 73 (reference_expression2)


state 90

  74) reference_expression5 : PLEFT _ reference_expression6 PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71
  $default      reduce using rule 77 (reference_expression6)

  reference_expression2  go to state 62
  reference_expression  go to state 63
  reference_expression6  go to state 114
  arglist       go to state 115
  expression    go to state 116
  literal_expression  go to state 68

state 91

  75) reference_expression5 : SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 117
  literal_expression  go to state 68

state 92

  76) reference_expression5 : POINT _ reference_expression

  ID            shift, and go to state 61
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60

  reference_expression2  go to state 62
  reference_expression  go to state 118

state 93

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 108) expression : NOT expression _
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  SUM           shift, and go to state 75
  SUM           [reduce using rule 108 (expression)]
  $default      reduce using rule 108 (expression)


state 94

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 113) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 119
  SUM           shift, and go to state 75


state 95

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 120


state 96

  49) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 37
  parameter_list  go to state 96
  method_declaration3  go to state 121
  parameter     go to state 97
  type          go to state 98

state 97

  61) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 123
  $default      reduce using rule 62 (parameter_list1)

  parameter_list1  go to state 122

state 98

  79) parameter : type _ ID parameter1

  ID            shift, and go to state 124


state 99

  28) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 28 (type2)


state 100

  96) expression : expression _ SUM expression
  96) expression : expression SUM expression _
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MOD           [reduce using rule 96 (expression)]
  MULT          shift, and go to state 80
  MULT          [reduce using rule 96 (expression)]
  DIV           shift, and go to state 76
  DIV           [reduce using rule 96 (expression)]
  PLUS          shift, and go to state 78
  PLUS          [reduce using rule 96 (expression)]
  MINUS         shift, and go to state 79
  MINUS         [reduce using rule 96 (expression)]
  MTHAN         shift, and go to state 81
  MTHAN         [reduce using rule 96 (expression)]
  MEQUAL        shift, and go to state 83
  MEQUAL        [reduce using rule 96 (expression)]
  LTHAN         shift, and go to state 82
  LTHAN         [reduce using rule 96 (expression)]
  LEQUAL        shift, and go to state 84
  LEQUAL        [reduce using rule 96 (expression)]
  EQUALITY      shift, and go to state 85
  EQUALITY      [reduce using rule 96 (expression)]
  DIFFERENT     shift, and go to state 86
  DIFFERENT     [reduce using rule 96 (expression)]
  AND           shift, and go to state 87
  AND           [reduce using rule 96 (expression)]
  OR            shift, and go to state 88
  OR            [reduce using rule 96 (expression)]
  SUM           shift, and go to state 75
  SUM           [reduce using rule 96 (expression)]
  $default      reduce using rule 96 (expression)


state 101

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  97) expression : expression DIV expression _
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  SUM           shift, and go to state 75
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 102

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  98) expression : expression MOD expression _
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  SUM           shift, and go to state 75
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 103

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
  99) expression : expression PLUS expression _
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  SUM           shift, and go to state 75
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 104

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 100) expression : expression MINUS expression _
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  SUM           shift, and go to state 75
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 105

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 101) expression : expression MULT expression _
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  SUM           shift, and go to state 75
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 106

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 102) expression : expression MTHAN expression _
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  SUM           shift, and go to state 75
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 107

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 103) expression : expression LTHAN expression _
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  SUM           shift, and go to state 75
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 108

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 104) expression : expression MEQUAL expression _
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  SUM           shift, and go to state 75
  SUM           [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)


state 109

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 105) expression : expression LEQUAL expression _
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  SUM           shift, and go to state 75
  SUM           [reduce using rule 105 (expression)]
  $default      reduce using rule 105 (expression)


state 110

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 106) expression : expression EQUALITY expression _
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  SUM           shift, and go to state 75
  SUM           [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)


state 111

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 107) expression : expression DIFFERENT expression _
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  SUM           shift, and go to state 75
  SUM           [reduce using rule 107 (expression)]
  $default      reduce using rule 107 (expression)


state 112

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 109) expression : expression AND expression _
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  SUM           shift, and go to state 75
  SUM           [reduce using rule 109 (expression)]
  $default      reduce using rule 109 (expression)


state 113

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 110) expression : expression OR expression _

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  SUM           shift, and go to state 75
  SUM           [reduce using rule 110 (expression)]
  $default      reduce using rule 110 (expression)


state 114

  74) reference_expression5 : PLEFT reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 125


state 115

  78) reference_expression6 : arglist _

  $default      reduce using rule 78 (reference_expression6)


state 116

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 116) arglist : expression _ arglist1

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  COMA          shift, and go to state 127
  SUM           shift, and go to state 75
  $default      reduce using rule 117 (arglist1)

  arglist1      go to state 126

state 117

  75) reference_expression5 : SBLEFT expression _ SBRIGHT
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 128
  SUM           shift, and go to state 75


state 118

  73) reference_expression2 : reference_expression _ reference_expression5
  76) reference_expression5 : POINT reference_expression _

  POINT         shift, and go to state 92
  SBLEFT        shift, and go to state 91
  SBLEFT        [reduce using rule 76 (reference_expression5)]
  PLEFT         shift, and go to state 90
  PLEFT         [reduce using rule 76 (reference_expression5)]
  $default      reduce using rule 76 (reference_expression5)

  reference_expression5  go to state 89

state 119

 113) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 113 (expression)


state 120

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 131
  BLEFT         shift, and go to state 132

  method_declaration4  go to state 129
  statement_block  go to state 130

state 121

  49) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 49 (method_declaration3)


state 122

  61) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 61 (parameter_list)


state 123

  63) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44

  type_specifier  go to state 37
  parameter     go to state 97
  parameter_list  go to state 133
  type          go to state 98

state 124

  79) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 136
  $default      reduce using rule 80 (parameter1)

  parameter1    go to state 134
  parameter2    go to state 135

state 125

  74) reference_expression5 : PLEFT reference_expression6 PRIGHT _

  $default      reduce using rule 74 (reference_expression5)


state 126

 116) arglist : expression arglist1 _

  $default      reduce using rule 116 (arglist)


state 127

 118) arglist1 : COMA _ arglist

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 116
  literal_expression  go to state 68
  arglist       go to state 137

state 128

  75) reference_expression5 : SBLEFT expression SBRIGHT _

  $default      reduce using rule 75 (reference_expression5)


state 129

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 42 (method_declaration)


state 130

  50) method_declaration4 : statement_block _

  $default      reduce using rule 50 (method_declaration4)


state 131

  51) method_declaration4 : SEMIC _

  $default      reduce using rule 51 (method_declaration4)


state 132

  64) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 20
  statement_block1  go to state 138
  variable_declaration  go to state 139

state 133

  63) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 63 (parameter_list1)


state 134

  79) parameter : type ID parameter1 _

  $default      reduce using rule 79 (parameter)


state 135

  81) parameter1 : parameter2 _

  $default      reduce using rule 81 (parameter1)


state 136

  82) parameter2 : SBLEFT _ expression SBRIGHT parameter3

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 140
  literal_expression  go to state 68

state 137

 118) arglist1 : COMA arglist _

  $default      reduce using rule 118 (arglist1)


state 138

  64) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156
  $default      reduce using rule 67 (statement_block2)

  statement_block2  go to state 142
  statement     go to state 143
  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150

state 139

  66) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 20
  variable_declaration  go to state 139
  statement_block1  go to state 157

state 140

  82) parameter2 : SBLEFT expression _ SBRIGHT parameter3
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 158
  SUM           shift, and go to state 75


state 141

  29) variable_assignment : ID _ variable_assignment1 EQUAL variable_value
  30) variable_assignment : ID _ variable_assignment1 PLUSASSIGN variable_value
  31) variable_assignment : ID _ variable_assignment1 MINUSASSIGN variable_value
  32) variable_assignment : ID _ variable_assignment1 MULTASSIGN variable_value
  33) variable_assignment : ID _ variable_assignment1 DIVASSIGN variable_value
  34) variable_assignment : ID _ variable_assignment1 ORASSIGN variable_value
  35) variable_assignment : ID _ variable_assignment1 ANDASSIGN variable_value
  36) variable_assignment : ID _ variable_assignment1 MODASSIGN variable_value

  SBLEFT        shift, and go to state 161
  $default      reduce using rule 37 (variable_assignment1)

  variable_assignment1  go to state 159
  variable_assignment4  go to state 160

state 142

  64) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 162


state 143

  68) statement_block2 : statement _ statement_block2

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156
  $default      reduce using rule 67 (statement_block2)

  statement     go to state 143
  statement_block2  go to state 163
  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150

state 144

  85) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 164


state 145

  86) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 165


state 146

  87) statement : statement_block _

  $default      reduce using rule 87 (statement)


state 147

  88) statement : unless_statement _

  $default      reduce using rule 88 (statement)


state 148

  89) statement : if_statement _

  $default      reduce using rule 89 (statement)


state 149

  90) statement : do_statement _

  $default      reduce using rule 90 (statement)


state 150

  91) statement : while_statement _

  $default      reduce using rule 91 (statement)


state 151

  92) statement : REPLY _ statement1 SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71
  $default      reduce using rule 94 (statement1)

  reference_expression2  go to state 62
  reference_expression  go to state 63
  statement1    go to state 166
  expression    go to state 167
  literal_expression  go to state 68

state 152

  93) statement : SEMIC _

  $default      reduce using rule 93 (statement)


state 153

 119) unless_statement : UNLESS _ PLEFT expression PRIGHT statement unless_statement1

  PLEFT         shift, and go to state 168


state 154

 122) if_statement : IF _ PLEFT expression PRIGHT statement if_statement1

  PLEFT         shift, and go to state 169


state 155

 125) do_statement : DO _ statement WHILE PLEFT expression PRIGHT SEMIC

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156

  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150
  statement     go to state 170

state 156

 126) while_statement : WHILE _ PLEFT expression PRIGHT statement

  PLEFT         shift, and go to state 171


state 157

  66) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 66 (statement_block1)


state 158

  82) parameter2 : SBLEFT expression SBRIGHT _ parameter3

  SBLEFT        shift, and go to state 136
  $default      reduce using rule 83 (parameter3)

  parameter3    go to state 172
  parameter2    go to state 173

state 159

  29) variable_assignment : ID variable_assignment1 _ EQUAL variable_value
  30) variable_assignment : ID variable_assignment1 _ PLUSASSIGN variable_value
  31) variable_assignment : ID variable_assignment1 _ MINUSASSIGN variable_value
  32) variable_assignment : ID variable_assignment1 _ MULTASSIGN variable_value
  33) variable_assignment : ID variable_assignment1 _ DIVASSIGN variable_value
  34) variable_assignment : ID variable_assignment1 _ ORASSIGN variable_value
  35) variable_assignment : ID variable_assignment1 _ ANDASSIGN variable_value
  36) variable_assignment : ID variable_assignment1 _ MODASSIGN variable_value

  EQUAL         shift, and go to state 174
  PLUSASSIGN    shift, and go to state 175
  MINUSASSIGN   shift, and go to state 176
  MULTASSIGN    shift, and go to state 177
  DIVASSIGN     shift, and go to state 178
  ORASSIGN      shift, and go to state 179
  ANDASSIGN     shift, and go to state 180
  MODASSIGN     shift, and go to state 181


state 160

  38) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 161
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 182
  variable_assignment4  go to state 183

state 161

  39) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  expression    go to state 184
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 162

  64) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 64 (statement_block)


state 163

  68) statement_block2 : statement statement_block2 _

  $default      reduce using rule 68 (statement_block2)


state 164

  85) statement : variable_assignment SEMIC _

  $default      reduce using rule 85 (statement)


state 165

  86) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 185
  literal_expression  go to state 68

state 166

  92) statement : REPLY statement1 _ SEMIC

  SEMIC         shift, and go to state 186


state 167

  95) statement1 : expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SUM           shift, and go to state 75
  $default      reduce using rule 95 (statement1)


state 168

 119) unless_statement : UNLESS PLEFT _ expression PRIGHT statement unless_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 187
  literal_expression  go to state 68

state 169

 122) if_statement : IF PLEFT _ expression PRIGHT statement if_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 188
  literal_expression  go to state 68

state 170

 125) do_statement : DO statement _ WHILE PLEFT expression PRIGHT SEMIC

  WHILE         shift, and go to state 189


state 171

 126) while_statement : WHILE PLEFT _ expression PRIGHT statement

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 190
  literal_expression  go to state 68

state 172

  82) parameter2 : SBLEFT expression SBRIGHT parameter3 _

  $default      reduce using rule 82 (parameter2)


state 173

  84) parameter3 : parameter2 _

  $default      reduce using rule 84 (parameter3)


state 174

  29) variable_assignment : ID variable_assignment1 EQUAL _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 191
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 175

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 194
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 176

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 195
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 177

  32) variable_assignment : ID variable_assignment1 MULTASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 196
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 178

  33) variable_assignment : ID variable_assignment1 DIVASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 197
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 179

  34) variable_assignment : ID variable_assignment1 ORASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 198
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 180

  35) variable_assignment : ID variable_assignment1 ANDASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 199
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 181

  36) variable_assignment : ID variable_assignment1 MODASSIGN _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 193
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 200
  expression    go to state 192
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 182

  38) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 38 (variable_assignment1)


state 183

  41) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 41 (variable_assignment5)


state 184

  39) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SBRIGHT       shift, and go to state 201
  SUM           shift, and go to state 75


state 185

  86) statement : SAY PLEFT expression _ PRIGHT SEMIC
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 202
  SUM           shift, and go to state 75


state 186

  92) statement : REPLY statement1 SEMIC _

  $default      reduce using rule 92 (statement)


state 187

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 119) unless_statement : UNLESS PLEFT expression _ PRIGHT statement unless_statement1

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 203
  SUM           shift, and go to state 75


state 188

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 122) if_statement : IF PLEFT expression _ PRIGHT statement if_statement1

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 204
  SUM           shift, and go to state 75


state 189

 125) do_statement : DO statement WHILE _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 205


state 190

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 126) while_statement : WHILE PLEFT expression _ PRIGHT statement

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 206
  SUM           shift, and go to state 75


state 191

  29) variable_assignment : ID variable_assignment1 EQUAL variable_value _

  $default      reduce using rule 29 (variable_assignment)


state 192

  59) variable_value : expression _
  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  SUM           shift, and go to state 75
  $default      reduce using rule 59 (variable_value)


state 193

  60) variable_value : HEAR _ PLEFT PRIGHT

  PLEFT         shift, and go to state 207


state 194

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN variable_value _

  $default      reduce using rule 30 (variable_assignment)


state 195

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN variable_value _

  $default      reduce using rule 31 (variable_assignment)


state 196

  32) variable_assignment : ID variable_assignment1 MULTASSIGN variable_value _

  $default      reduce using rule 32 (variable_assignment)


state 197

  33) variable_assignment : ID variable_assignment1 DIVASSIGN variable_value _

  $default      reduce using rule 33 (variable_assignment)


state 198

  34) variable_assignment : ID variable_assignment1 ORASSIGN variable_value _

  $default      reduce using rule 34 (variable_assignment)


state 199

  35) variable_assignment : ID variable_assignment1 ANDASSIGN variable_value _

  $default      reduce using rule 35 (variable_assignment)


state 200

  36) variable_assignment : ID variable_assignment1 MODASSIGN variable_value _

  $default      reduce using rule 36 (variable_assignment)


state 201

  39) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 161
  SBLEFT        [reduce using rule 40 (variable_assignment5)]
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 208
  variable_assignment4  go to state 183

state 202

  86) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 209


state 203

 119) unless_statement : UNLESS PLEFT expression PRIGHT _ statement unless_statement1

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156

  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150
  statement     go to state 210

state 204

 122) if_statement : IF PLEFT expression PRIGHT _ statement if_statement1

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156

  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150
  statement     go to state 211

state 205

 125) do_statement : DO statement WHILE PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 212
  literal_expression  go to state 68

state 206

 126) while_statement : WHILE PLEFT expression PRIGHT _ statement

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156

  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150
  statement     go to state 213

state 207

  60) variable_value : HEAR PLEFT _ PRIGHT

  PRIGHT        shift, and go to state 214


state 208

  39) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 39 (variable_assignment4)


state 209

  86) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 86 (statement)


state 210

 119) unless_statement : UNLESS PLEFT expression PRIGHT statement _ unless_statement1

  ELSE          shift, and go to state 216
  ELSE          [reduce using rule 120 (unless_statement1)]
  $default      reduce using rule 120 (unless_statement1)

  unless_statement1  go to state 215

state 211

 122) if_statement : IF PLEFT expression PRIGHT statement _ if_statement1

  ELSE          shift, and go to state 218
  ELSE          [reduce using rule 123 (if_statement1)]
  $default      reduce using rule 123 (if_statement1)

  if_statement1  go to state 217

state 212

  96) expression : expression _ SUM expression
  97) expression : expression _ DIV expression
  98) expression : expression _ MOD expression
  99) expression : expression _ PLUS expression
 100) expression : expression _ MINUS expression
 101) expression : expression _ MULT expression
 102) expression : expression _ MTHAN expression
 103) expression : expression _ LTHAN expression
 104) expression : expression _ MEQUAL expression
 105) expression : expression _ LEQUAL expression
 106) expression : expression _ EQUALITY expression
 107) expression : expression _ DIFFERENT expression
 109) expression : expression _ AND expression
 110) expression : expression _ OR expression
 125) do_statement : DO statement WHILE PLEFT expression _ PRIGHT SEMIC

  MOD           shift, and go to state 77
  MULT          shift, and go to state 80
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 81
  MEQUAL        shift, and go to state 83
  LTHAN         shift, and go to state 82
  LEQUAL        shift, and go to state 84
  EQUALITY      shift, and go to state 85
  DIFFERENT     shift, and go to state 86
  AND           shift, and go to state 87
  OR            shift, and go to state 88
  PRIGHT        shift, and go to state 219
  SUM           shift, and go to state 75


state 213

 126) while_statement : WHILE PLEFT expression PRIGHT statement _

  $default      reduce using rule 126 (while_statement)


state 214

  60) variable_value : HEAR PLEFT PRIGHT _

  $default      reduce using rule 60 (variable_value)


state 215

 119) unless_statement : UNLESS PLEFT expression PRIGHT statement unless_statement1 _

  $default      reduce using rule 119 (unless_statement)


state 216

 121) unless_statement1 : ELSE _ statement

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156

  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150
  statement     go to state 220

state 217

 122) if_statement : IF PLEFT expression PRIGHT statement if_statement1 _

  $default      reduce using rule 122 (if_statement)


state 218

 124) if_statement1 : ELSE _ statement

  SEMIC         shift, and go to state 152
  BLEFT         shift, and go to state 132
  ID            shift, and go to state 141
  SAY           shift, and go to state 145
  REPLY         shift, and go to state 151
  UNLESS        shift, and go to state 153
  IF            shift, and go to state 154
  DO            shift, and go to state 155
  WHILE         shift, and go to state 156

  variable_assignment  go to state 144
  statement_block  go to state 146
  unless_statement  go to state 147
  if_statement  go to state 148
  do_statement  go to state 149
  while_statement  go to state 150
  statement     go to state 221

state 219

 125) do_statement : DO statement WHILE PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 222


state 220

 121) unless_statement1 : ELSE statement _

  $default      reduce using rule 121 (unless_statement1)


state 221

 124) if_statement1 : ELSE statement _

  $default      reduce using rule 124 (if_statement1)


state 222

 125) do_statement : DO statement WHILE PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 125 (do_statement)

