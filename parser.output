state 102 contains 13 shift/reduce conflicts
state 103 contains 13 shift/reduce conflicts
state 104 contains 13 shift/reduce conflicts
state 109 contains 2 shift/reduce conflicts
state 132 contains 1 shift/reduce conflicts
state 188 contains 1 shift/reduce conflicts
state 197 contains 1 shift/reduce conflicts
state 198 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration SEMIC
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: ID
rule 23 next_variable: 
rule 24 next_variable: COMA some_variables
rule 25 type: type_specifier type1
rule 26 type1: 
rule 27 type1: type2
rule 28 type2: SBLEFT expression SBRIGHT type1
rule 29 variable_assignment: ID variable_assignment1 assign_operator variable_value
rule 30 variable_assignment1: 
rule 31 variable_assignment1: variable_assignment4 variable_assignment5
rule 32 assign_operator: EQUAL
rule 33 assign_operator: PLUSASSIGN
rule 34 assign_operator: MINUSASSIGN
rule 35 assign_operator: MULTASSIGN
rule 36 assign_operator: DIVASSIGN
rule 37 assign_operator: ORASSIGN
rule 38 assign_operator: ANDASSIGN
rule 39 assign_operator: MODASSIGN
rule 40 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 41 variable_assignment5: 
rule 42 variable_assignment5: variable_assignment4
rule 43 method_declaration: new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 44 new_function_code: FUNK
rule 45 method_declaration1: 
rule 46 method_declaration1: modifier
rule 47 method_declaration2: ID
rule 48 method_declaration2: CHIEF
rule 49 method_declaration3: 
rule 50 method_declaration3: parameter_list method_declaration3
rule 51 method_declaration4: statement_block
rule 52 method_declaration4: SEMIC
rule 53 type_specifier: LOGIC
rule 54 type_specifier: CHAR
rule 55 type_specifier: NUMBER
rule 56 type_specifier: DECIMAL
rule 57 type_specifier: ID
rule 58 type_specifier: OBLIVION
rule 59 type_specifier: STRING
rule 60 num_operator: MULT
rule 61 num_operator: DIV
rule 62 num_operator: MOD
rule 63 num_operator: PLUS
rule 64 num_operator: MINUS
rule 65 variable_value: expression
rule 66 variable_value: HEAR PLEFT PRIGHT
rule 67 parameter_list: parameter parameter_list1
rule 68 parameter_list1: 
rule 69 parameter_list1: COMA parameter_list
rule 70 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 71 statement_block1: 
rule 72 statement_block1: variable_declaration statement_block1
rule 73 statement_block2: 
rule 74 statement_block2: statement statement_block2
rule 75 reference_expression: NULL
rule 76 reference_expression: ITSELF
rule 77 reference_expression: ID
rule 78 reference_expression: reference_expression2
rule 79 reference_expression2: reference_expression reference_expression5
rule 80 reference_expression5: PLEFT reference_expression6 PRIGHT
rule 81 reference_expression5: SBLEFT expression SBRIGHT
rule 82 reference_expression5: POINT reference_expression
rule 83 reference_expression6: 
rule 84 reference_expression6: arglist
rule 85 parameter: type ID parameter1
rule 86 parameter1: 
rule 87 parameter1: parameter2
rule 88 parameter2: SBLEFT expression SBRIGHT parameter3
rule 89 parameter3: 
rule 90 parameter3: parameter2
rule 91 statement: variable_assignment SEMIC
rule 92 statement: SAY PLEFT expression PRIGHT SEMIC
rule 93 statement: expression SEMIC
rule 94 statement: statement_block
rule 95 statement: unless_statement
rule 96 statement: if_statement
rule 97 statement: do_statement
rule 98 statement: while_statement
rule 99 statement: REPLY statement1 SEMIC
rule 100 statement: SEMIC
rule 101 statement1: 
rule 102 statement1: expression
rule 103 expression: expression num_operator expression
rule 104 expression: expression testing_operator expression
rule 105 expression: NOT expression
rule 106 expression: expression boolean_operator expression
rule 107 expression: TRUE
rule 108 expression: FALSE
rule 109 expression: PLEFT expression PRIGHT
rule 110 expression: literal_expression
rule 111 expression: reference_expression
rule 112 arglist: expression arglist1
rule 113 arglist1: 
rule 114 arglist1: COMA arglist
rule 115 unless_statement: UNLESS PLEFT expression PRIGHT statement unless_statement1
rule 116 unless_statement1: 
rule 117 unless_statement1: ELSE statement
rule 118 if_statement: IF PLEFT expression PRIGHT statement if_statement1
rule 119 if_statement1: 
rule 120 if_statement1: ELSE statement
rule 121 do_statement: DO statement WHILE PLEFT expression PRIGHT SEMIC
rule 122 while_statement: WHILE PLEFT expression PRIGHT statement
rule 123 testing_operator: MTHAN
rule 124 testing_operator: LTHAN
rule 125 testing_operator: MEQUAL
rule 126 testing_operator: LEQUAL
rule 127 testing_operator: EQUALITY
rule 128 testing_operator: DIFFERENT
rule 129 boolean_operator: AND
rule 130 boolean_operator: OR
rule 131 literal_expression: CTED
rule 132 literal_expression: CTEN
rule 133 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (64)
    on right: 
    on left : 
  supreme_plox (65)
    on right: 
    on left : 1
  plox_generation (66)
    on right: 1 3
    on left : 2 3
  type_declaration (67)
    on right: 3
    on left : 4
  class_declaration (68)
    on right: 4
    on left : 5
  code_new_class (69)
    on right: 5
    on left : 6
  code_heirof (70)
    on right: 5
    on left : 7 8
  class_body (71)
    on right: 5
    on left : 9
  class_variable_block (72)
    on right: 9 11
    on left : 10 11
  class_function_block (73)
    on right: 9 13
    on left : 12 13
  variable_declaration (74)
    on right: 11 72
    on left : 16
  method_declaration (75)
    on right: 13
    on left : 43
  modifier (76)
    on right: 18 46
    on left : 14 15
  variable_is_modifiable (77)
    on right: 16
    on left : 19 20
  variable_scope (78)
    on right: 16
    on left : 17 18
  type (79)
    on right: 16 43 85
    on left : 25
  some_variables (80)
    on right: 16 24
    on left : 21
  code_new_variable (81)
    on right: 21
    on left : 22
  next_variable (82)
    on right: 21
    on left : 23 24
  type_specifier (83)
    on right: 25
    on left : 53 54 55 56 57 58 59
  type1 (84)
    on right: 25 28
    on left : 26 27
  type2 (85)
    on right: 27
    on left : 28
  expression (86)
    on right: 28 40 65 81 88 92 93 102 103 104 105 106 109 112 115 118 121 122
    on left : 103 104 105 106 107 108 109 110 111
  variable_assignment (87)
    on right: 91
    on left : 29
  variable_assignment1 (88)
    on right: 29
    on left : 30 31
  assign_operator (89)
    on right: 29
    on left : 32 33 34 35 36 37 38 39
  variable_value (90)
    on right: 29
    on left : 65 66
  variable_assignment4 (91)
    on right: 31 42
    on left : 40
  variable_assignment5 (92)
    on right: 31 40
    on left : 41 42
  new_function_code (93)
    on right: 43
    on left : 44
  method_declaration1 (94)
    on right: 43
    on left : 45 46
  method_declaration2 (95)
    on right: 43
    on left : 47 48
  method_declaration3 (96)
    on right: 43 50
    on left : 49 50
  method_declaration4 (97)
    on right: 43
    on left : 51 52
  parameter_list (98)
    on right: 50 69
    on left : 67
  statement_block (99)
    on right: 51 94
    on left : 70
  num_operator (100)
    on right: 103
    on left : 60 61 62 63 64
  parameter (101)
    on right: 67
    on left : 85
  parameter_list1 (102)
    on right: 67
    on left : 68 69
  statement_block1 (103)
    on right: 70 72
    on left : 71 72
  statement_block2 (104)
    on right: 70 74
    on left : 73 74
  statement (105)
    on right: 74 115 117 118 120 121 122
    on left : 91 92 93 94 95 96 97 98 99 100
  reference_expression (106)
    on right: 79 82 111
    on left : 75 76 77 78
  reference_expression2 (107)
    on right: 78
    on left : 79
  reference_expression5 (108)
    on right: 79
    on left : 80 81 82
  reference_expression6 (109)
    on right: 80
    on left : 83 84
  arglist (110)
    on right: 84 114
    on left : 112
  parameter1 (111)
    on right: 85
    on left : 86 87
  parameter2 (112)
    on right: 87 90
    on left : 88
  parameter3 (113)
    on right: 88
    on left : 89 90
  unless_statement (114)
    on right: 95
    on left : 115
  if_statement (115)
    on right: 96
    on left : 118
  do_statement (116)
    on right: 97
    on left : 121
  while_statement (117)
    on right: 98
    on left : 122
  statement1 (118)
    on right: 99
    on left : 101 102
  testing_operator (119)
    on right: 104
    on left : 123 124 125 126 127 128
  boolean_operator (120)
    on right: 106
    on left : 129 130
  literal_expression (121)
    on right: 110
    on left : 131 132 133
  arglist1 (122)
    on right: 112
    on left : 113 114
  unless_statement1 (123)
    on right: 115
    on left : 116 117
  if_statement1 (124)
    on right: 118
    on left : 119 120

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 82
  NOT (3) 105
  MOD (4) 62
  MULT (5) 60
  DIV (6) 61
  PLUS (7) 63
  MINUS (8) 64
  MTHAN (9) 123
  MEQUAL (10) 125
  LTHAN (11) 124
  LEQUAL (12) 126
  EQUALITY (13) 127
  DIFFERENT (14) 128
  AND (15) 129
  OR (16) 130
  EQUAL (17) 32
  PLUSASSIGN (18) 33
  MINUSASSIGN (19) 34
  MULTASSIGN (20) 35
  DIVASSIGN (21) 36
  ORASSIGN (22) 37
  ANDASSIGN (23) 38
  MODASSIGN (24) 39
  SEMIC (25) 4 16 52 91 92 93 99 100 121
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 70
  BRIGHT (29) 5 70
  ID (30) 6 8 22 29 47 57 77 85
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 24 69 114
  SBLEFT (37) 28 40 81 88
  SBRIGHT (38) 28 40 81 88
  PLEFT (39) 43 66 80 92 109 115 118 121 122
  PRIGHT (40) 43 66 80 92 109 115 118 121 122
  FUNK (41) 44
  CHIEF (42) 48
  LOGIC (43) 53
  CHAR (44) 54
  NUMBER (45) 55
  DECIMAL (46) 56
  OBLIVION (47) 58
  STRING (48) 59
  HEAR (49) 66
  NULL (50) 75
  ITSELF (51) 76
  SAY (52) 92
  REPLY (53) 99
  TRUE (54) 107
  FALSE (55) 108
  UNLESS (56) 115
  ELSE (57) 117 120
  IF (58) 118
  DO (59) 121
  WHILE (60) 121 122
  CTED (61) 131
  CTEN (62) 132
  CTESTRING (63) 133

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration SEMIC

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _ SEMIC

  SEMIC         shift, and go to state 10


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 12

  code_new_class  go to state 11

state 9


  $default      accept


state 10

   4) type_declaration : HABEMVS class_declaration SEMIC _

  $default      reduce using rule 4 (type_declaration)


state 11

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 14
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 13

state 12

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 13

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 15


state 14

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 16


state 15

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 17
  class_variable_block  go to state 18
  variable_declaration  go to state 19
  variable_is_modifiable  go to state 20

state 16

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 17

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 23


state 18

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 27
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 24
  method_declaration  go to state 25
  new_function_code  go to state 26

state 19

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 19
  class_variable_block  go to state 28
  variable_is_modifiable  go to state 20

state 20

  16) variable_declaration : variable_is_modifiable _ variable_scope type some_variables SEMIC

  OPEN          shift, and go to state 29
  HIDDEN        shift, and go to state 30
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 31
  modifier      go to state 32

state 21

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 22

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 23

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 24

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 25

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 27
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 25
  class_function_block  go to state 33
  new_function_code  go to state 26

state 26

  43) method_declaration : new_function_code _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 29
  HIDDEN        shift, and go to state 30
  $default      reduce using rule 45 (method_declaration1)

  method_declaration1  go to state 34
  modifier      go to state 35

state 27

  44) new_function_code : FUNK _

  $default      reduce using rule 44 (new_function_code)


state 28

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 29

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 30

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 31

  16) variable_declaration : variable_is_modifiable variable_scope _ type some_variables SEMIC

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44

  type          go to state 36
  type_specifier  go to state 37

state 32

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 33

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 34

  43) method_declaration : new_function_code method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44

  type_specifier  go to state 37
  type          go to state 45

state 35

  46) method_declaration1 : modifier _

  $default      reduce using rule 46 (method_declaration1)


state 36

  16) variable_declaration : variable_is_modifiable variable_scope type _ some_variables SEMIC

  ID            shift, and go to state 48

  some_variables  go to state 46
  code_new_variable  go to state 47

state 37

  25) type : type_specifier _ type1

  SBLEFT        shift, and go to state 51
  $default      reduce using rule 26 (type1)

  type1         go to state 49
  type2         go to state 50

state 38

  53) type_specifier : LOGIC _

  $default      reduce using rule 53 (type_specifier)


state 39

  54) type_specifier : CHAR _

  $default      reduce using rule 54 (type_specifier)


state 40

  55) type_specifier : NUMBER _

  $default      reduce using rule 55 (type_specifier)


state 41

  56) type_specifier : DECIMAL _

  $default      reduce using rule 56 (type_specifier)


state 42

  57) type_specifier : ID _

  $default      reduce using rule 57 (type_specifier)


state 43

  58) type_specifier : OBLIVION _

  $default      reduce using rule 58 (type_specifier)


state 44

  59) type_specifier : STRING _

  $default      reduce using rule 59 (type_specifier)


state 45

  43) method_declaration : new_function_code method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 53
  CHIEF         shift, and go to state 54

  method_declaration2  go to state 52

state 46

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables _ SEMIC

  SEMIC         shift, and go to state 55


state 47

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 57
  $default      reduce using rule 23 (next_variable)

  next_variable  go to state 56

state 48

  22) code_new_variable : ID _

  $default      reduce using rule 22 (code_new_variable)


state 49

  25) type : type_specifier type1 _

  $default      reduce using rule 25 (type)


state 50

  27) type1 : type2 _

  $default      reduce using rule 27 (type1)


state 51

  28) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  expression    go to state 58
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 52

  43) method_declaration : new_function_code method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 72


state 53

  47) method_declaration2 : ID _

  $default      reduce using rule 47 (method_declaration2)


state 54

  48) method_declaration2 : CHIEF _

  $default      reduce using rule 48 (method_declaration2)


state 55

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 56

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 57

  24) next_variable : COMA _ some_variables

  ID            shift, and go to state 48

  code_new_variable  go to state 47
  some_variables  go to state 73

state 58

  28) type2 : SBLEFT expression _ SBRIGHT type1
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  SBRIGHT       shift, and go to state 74

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 59

  75) reference_expression : NULL _

  $default      reduce using rule 75 (reference_expression)


state 60

  76) reference_expression : ITSELF _

  $default      reduce using rule 76 (reference_expression)


state 61

  77) reference_expression : ID _

  $default      reduce using rule 77 (reference_expression)


state 62

  78) reference_expression : reference_expression2 _

  $default      reduce using rule 78 (reference_expression)


state 63

  79) reference_expression2 : reference_expression _ reference_expression5
 111) expression : reference_expression _

  POINT         shift, and go to state 94
  SBLEFT        shift, and go to state 93
  PLEFT         shift, and go to state 92
  $default      reduce using rule 111 (expression)

  reference_expression5  go to state 91

state 64

 105) expression : NOT _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 95
  literal_expression  go to state 68

state 65

 107) expression : TRUE _

  $default      reduce using rule 107 (expression)


state 66

 108) expression : FALSE _

  $default      reduce using rule 108 (expression)


state 67

 109) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 96
  literal_expression  go to state 68

state 68

 110) expression : literal_expression _

  $default      reduce using rule 110 (expression)


state 69

 131) literal_expression : CTED _

  $default      reduce using rule 131 (literal_expression)


state 70

 132) literal_expression : CTEN _

  $default      reduce using rule 132 (literal_expression)


state 71

 133) literal_expression : CTESTRING _

  $default      reduce using rule 133 (literal_expression)


state 72

  43) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44
  $default      reduce using rule 49 (method_declaration3)

  type_specifier  go to state 37
  method_declaration3  go to state 97
  parameter_list  go to state 98
  parameter     go to state 99
  type          go to state 100

state 73

  24) next_variable : COMA some_variables _

  $default      reduce using rule 24 (next_variable)


state 74

  28) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 51
  $default      reduce using rule 26 (type1)

  type2         go to state 50
  type1         go to state 101

state 75

  60) num_operator : MULT _

  $default      reduce using rule 60 (num_operator)


state 76

  61) num_operator : DIV _

  $default      reduce using rule 61 (num_operator)


state 77

  62) num_operator : MOD _

  $default      reduce using rule 62 (num_operator)


state 78

  63) num_operator : PLUS _

  $default      reduce using rule 63 (num_operator)


state 79

  64) num_operator : MINUS _

  $default      reduce using rule 64 (num_operator)


state 80

 103) expression : expression num_operator _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 102
  literal_expression  go to state 68

state 81

 104) expression : expression testing_operator _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 103
  literal_expression  go to state 68

state 82

 106) expression : expression boolean_operator _ expression

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 104
  literal_expression  go to state 68

state 83

 123) testing_operator : MTHAN _

  $default      reduce using rule 123 (testing_operator)


state 84

 124) testing_operator : LTHAN _

  $default      reduce using rule 124 (testing_operator)


state 85

 125) testing_operator : MEQUAL _

  $default      reduce using rule 125 (testing_operator)


state 86

 126) testing_operator : LEQUAL _

  $default      reduce using rule 126 (testing_operator)


state 87

 127) testing_operator : EQUALITY _

  $default      reduce using rule 127 (testing_operator)


state 88

 128) testing_operator : DIFFERENT _

  $default      reduce using rule 128 (testing_operator)


state 89

 129) boolean_operator : AND _

  $default      reduce using rule 129 (boolean_operator)


state 90

 130) boolean_operator : OR _

  $default      reduce using rule 130 (boolean_operator)


state 91

  79) reference_expression2 : reference_expression reference_expression5 _

  $default      reduce using rule 79 (reference_expression2)


state 92

  80) reference_expression5 : PLEFT _ reference_expression6 PRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71
  $default      reduce using rule 83 (reference_expression6)

  reference_expression2  go to state 62
  reference_expression  go to state 63
  reference_expression6  go to state 105
  arglist       go to state 106
  expression    go to state 107
  literal_expression  go to state 68

state 93

  81) reference_expression5 : SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 108
  literal_expression  go to state 68

state 94

  82) reference_expression5 : POINT _ reference_expression

  ID            shift, and go to state 61
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60

  reference_expression2  go to state 62
  reference_expression  go to state 109

state 95

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 105) expression : NOT expression _
 106) expression : expression _ boolean_operator expression

  $default      reduce using rule 105 (expression)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 96

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 109) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  PRIGHT        shift, and go to state 110

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 97

  43) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 111


state 98

  50) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44
  $default      reduce using rule 49 (method_declaration3)

  type_specifier  go to state 37
  parameter_list  go to state 98
  method_declaration3  go to state 112
  parameter     go to state 99
  type          go to state 100

state 99

  67) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 114
  $default      reduce using rule 68 (parameter_list1)

  parameter_list1  go to state 113

state 100

  85) parameter : type _ ID parameter1

  ID            shift, and go to state 115


state 101

  28) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 28 (type2)


state 102

 103) expression : expression _ num_operator expression
 103) expression : expression num_operator expression _
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MOD           [reduce using rule 103 (expression)]
  MULT          shift, and go to state 75
  MULT          [reduce using rule 103 (expression)]
  DIV           shift, and go to state 76
  DIV           [reduce using rule 103 (expression)]
  PLUS          shift, and go to state 78
  PLUS          [reduce using rule 103 (expression)]
  MINUS         shift, and go to state 79
  MINUS         [reduce using rule 103 (expression)]
  MTHAN         shift, and go to state 83
  MTHAN         [reduce using rule 103 (expression)]
  MEQUAL        shift, and go to state 85
  MEQUAL        [reduce using rule 103 (expression)]
  LTHAN         shift, and go to state 84
  LTHAN         [reduce using rule 103 (expression)]
  LEQUAL        shift, and go to state 86
  LEQUAL        [reduce using rule 103 (expression)]
  EQUALITY      shift, and go to state 87
  EQUALITY      [reduce using rule 103 (expression)]
  DIFFERENT     shift, and go to state 88
  DIFFERENT     [reduce using rule 103 (expression)]
  AND           shift, and go to state 89
  AND           [reduce using rule 103 (expression)]
  OR            shift, and go to state 90
  OR            [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 103

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 104) expression : expression testing_operator expression _
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MOD           [reduce using rule 104 (expression)]
  MULT          shift, and go to state 75
  MULT          [reduce using rule 104 (expression)]
  DIV           shift, and go to state 76
  DIV           [reduce using rule 104 (expression)]
  PLUS          shift, and go to state 78
  PLUS          [reduce using rule 104 (expression)]
  MINUS         shift, and go to state 79
  MINUS         [reduce using rule 104 (expression)]
  MTHAN         shift, and go to state 83
  MTHAN         [reduce using rule 104 (expression)]
  MEQUAL        shift, and go to state 85
  MEQUAL        [reduce using rule 104 (expression)]
  LTHAN         shift, and go to state 84
  LTHAN         [reduce using rule 104 (expression)]
  LEQUAL        shift, and go to state 86
  LEQUAL        [reduce using rule 104 (expression)]
  EQUALITY      shift, and go to state 87
  EQUALITY      [reduce using rule 104 (expression)]
  DIFFERENT     shift, and go to state 88
  DIFFERENT     [reduce using rule 104 (expression)]
  AND           shift, and go to state 89
  AND           [reduce using rule 104 (expression)]
  OR            shift, and go to state 90
  OR            [reduce using rule 104 (expression)]
  $default      reduce using rule 104 (expression)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 104

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 106) expression : expression boolean_operator expression _

  MOD           shift, and go to state 77
  MOD           [reduce using rule 106 (expression)]
  MULT          shift, and go to state 75
  MULT          [reduce using rule 106 (expression)]
  DIV           shift, and go to state 76
  DIV           [reduce using rule 106 (expression)]
  PLUS          shift, and go to state 78
  PLUS          [reduce using rule 106 (expression)]
  MINUS         shift, and go to state 79
  MINUS         [reduce using rule 106 (expression)]
  MTHAN         shift, and go to state 83
  MTHAN         [reduce using rule 106 (expression)]
  MEQUAL        shift, and go to state 85
  MEQUAL        [reduce using rule 106 (expression)]
  LTHAN         shift, and go to state 84
  LTHAN         [reduce using rule 106 (expression)]
  LEQUAL        shift, and go to state 86
  LEQUAL        [reduce using rule 106 (expression)]
  EQUALITY      shift, and go to state 87
  EQUALITY      [reduce using rule 106 (expression)]
  DIFFERENT     shift, and go to state 88
  DIFFERENT     [reduce using rule 106 (expression)]
  AND           shift, and go to state 89
  AND           [reduce using rule 106 (expression)]
  OR            shift, and go to state 90
  OR            [reduce using rule 106 (expression)]
  $default      reduce using rule 106 (expression)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 105

  80) reference_expression5 : PLEFT reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 116


state 106

  84) reference_expression6 : arglist _

  $default      reduce using rule 84 (reference_expression6)


state 107

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 112) arglist : expression _ arglist1

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  COMA          shift, and go to state 118
  $default      reduce using rule 113 (arglist1)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82
  arglist1      go to state 117

state 108

  81) reference_expression5 : SBLEFT expression _ SBRIGHT
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  SBRIGHT       shift, and go to state 119

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 109

  79) reference_expression2 : reference_expression _ reference_expression5
  82) reference_expression5 : POINT reference_expression _

  POINT         shift, and go to state 94
  SBLEFT        shift, and go to state 93
  SBLEFT        [reduce using rule 82 (reference_expression5)]
  PLEFT         shift, and go to state 92
  PLEFT         [reduce using rule 82 (reference_expression5)]
  $default      reduce using rule 82 (reference_expression5)

  reference_expression5  go to state 91

state 110

 109) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 109 (expression)


state 111

  43) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 122
  BLEFT         shift, and go to state 123

  method_declaration4  go to state 120
  statement_block  go to state 121

state 112

  50) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 50 (method_declaration3)


state 113

  67) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 67 (parameter_list)


state 114

  69) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 42
  LOGIC         shift, and go to state 38
  CHAR          shift, and go to state 39
  NUMBER        shift, and go to state 40
  DECIMAL       shift, and go to state 41
  OBLIVION      shift, and go to state 43
  STRING        shift, and go to state 44

  type_specifier  go to state 37
  parameter     go to state 99
  parameter_list  go to state 124
  type          go to state 100

state 115

  85) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 127
  $default      reduce using rule 86 (parameter1)

  parameter1    go to state 125
  parameter2    go to state 126

state 116

  80) reference_expression5 : PLEFT reference_expression6 PRIGHT _

  $default      reduce using rule 80 (reference_expression5)


state 117

 112) arglist : expression arglist1 _

  $default      reduce using rule 112 (arglist)


state 118

 114) arglist1 : COMA _ arglist

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 107
  literal_expression  go to state 68
  arglist       go to state 128

state 119

  81) reference_expression5 : SBLEFT expression SBRIGHT _

  $default      reduce using rule 81 (reference_expression5)


state 120

  43) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 43 (method_declaration)


state 121

  51) method_declaration4 : statement_block _

  $default      reduce using rule 51 (method_declaration4)


state 122

  52) method_declaration4 : SEMIC _

  $default      reduce using rule 52 (method_declaration4)


state 123

  70) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 71 (statement_block1)

  variable_is_modifiable  go to state 20
  statement_block1  go to state 129
  variable_declaration  go to state 130

state 124

  69) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 69 (parameter_list1)


state 125

  85) parameter : type ID parameter1 _

  $default      reduce using rule 85 (parameter)


state 126

  87) parameter1 : parameter2 _

  $default      reduce using rule 87 (parameter1)


state 127

  88) parameter2 : SBLEFT _ expression SBRIGHT parameter3

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 131
  literal_expression  go to state 68

state 128

 114) arglist1 : COMA arglist _

  $default      reduce using rule 114 (arglist1)


state 129

  70) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71
  $default      reduce using rule 73 (statement_block2)

  statement_block2  go to state 133
  statement     go to state 134
  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68

state 130

  72) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 21
  ETERNAL       shift, and go to state 22
  $default      reduce using rule 71 (statement_block1)

  variable_is_modifiable  go to state 20
  variable_declaration  go to state 130
  statement_block1  go to state 149

state 131

  88) parameter2 : SBLEFT expression _ SBRIGHT parameter3
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  SBRIGHT       shift, and go to state 150

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 132

  29) variable_assignment : ID _ variable_assignment1 assign_operator variable_value
  77) reference_expression : ID _

  SBLEFT        shift, and go to state 153
  SBLEFT        [reduce using rule 77 (reference_expression)]
  EQUAL         reduce using rule 30 (variable_assignment1)
  PLUSASSIGN    reduce using rule 30 (variable_assignment1)
  MINUSASSIGN   reduce using rule 30 (variable_assignment1)
  MULTASSIGN    reduce using rule 30 (variable_assignment1)
  DIVASSIGN     reduce using rule 30 (variable_assignment1)
  ORASSIGN      reduce using rule 30 (variable_assignment1)
  ANDASSIGN     reduce using rule 30 (variable_assignment1)
  MODASSIGN     reduce using rule 30 (variable_assignment1)
  $default      reduce using rule 77 (reference_expression)

  variable_assignment1  go to state 151
  variable_assignment4  go to state 152

state 133

  70) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 154


state 134

  74) statement_block2 : statement _ statement_block2

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71
  $default      reduce using rule 73 (statement_block2)

  statement     go to state 134
  statement_block2  go to state 155
  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68

state 135

  91) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 156


state 136

  92) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 157


state 137

  93) statement : expression _ SEMIC
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  SEMIC         shift, and go to state 158

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 138

  94) statement : statement_block _

  $default      reduce using rule 94 (statement)


state 139

  95) statement : unless_statement _

  $default      reduce using rule 95 (statement)


state 140

  96) statement : if_statement _

  $default      reduce using rule 96 (statement)


state 141

  97) statement : do_statement _

  $default      reduce using rule 97 (statement)


state 142

  98) statement : while_statement _

  $default      reduce using rule 98 (statement)


state 143

  99) statement : REPLY _ statement1 SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71
  $default      reduce using rule 101 (statement1)

  reference_expression2  go to state 62
  reference_expression  go to state 63
  statement1    go to state 159
  expression    go to state 160
  literal_expression  go to state 68

state 144

 100) statement : SEMIC _

  $default      reduce using rule 100 (statement)


state 145

 115) unless_statement : UNLESS _ PLEFT expression PRIGHT statement unless_statement1

  PLEFT         shift, and go to state 161


state 146

 118) if_statement : IF _ PLEFT expression PRIGHT statement if_statement1

  PLEFT         shift, and go to state 162


state 147

 121) do_statement : DO _ statement WHILE PLEFT expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68
  statement     go to state 163

state 148

 122) while_statement : WHILE _ PLEFT expression PRIGHT statement

  PLEFT         shift, and go to state 164


state 149

  72) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 72 (statement_block1)


state 150

  88) parameter2 : SBLEFT expression SBRIGHT _ parameter3

  SBLEFT        shift, and go to state 127
  $default      reduce using rule 89 (parameter3)

  parameter3    go to state 165
  parameter2    go to state 166

state 151

  29) variable_assignment : ID variable_assignment1 _ assign_operator variable_value

  EQUAL         shift, and go to state 168
  PLUSASSIGN    shift, and go to state 169
  MINUSASSIGN   shift, and go to state 170
  MULTASSIGN    shift, and go to state 171
  DIVASSIGN     shift, and go to state 172
  ORASSIGN      shift, and go to state 173
  ANDASSIGN     shift, and go to state 174
  MODASSIGN     shift, and go to state 175

  assign_operator  go to state 167

state 152

  31) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 153
  $default      reduce using rule 41 (variable_assignment5)

  variable_assignment5  go to state 176
  variable_assignment4  go to state 177

state 153

  40) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  expression    go to state 178
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 154

  70) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 70 (statement_block)


state 155

  74) statement_block2 : statement statement_block2 _

  $default      reduce using rule 74 (statement_block2)


state 156

  91) statement : variable_assignment SEMIC _

  $default      reduce using rule 91 (statement)


state 157

  92) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 179
  literal_expression  go to state 68

state 158

  93) statement : expression SEMIC _

  $default      reduce using rule 93 (statement)


state 159

  99) statement : REPLY statement1 _ SEMIC

  SEMIC         shift, and go to state 180


state 160

 102) statement1 : expression _
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  $default      reduce using rule 102 (statement1)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 161

 115) unless_statement : UNLESS PLEFT _ expression PRIGHT statement unless_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 181
  literal_expression  go to state 68

state 162

 118) if_statement : IF PLEFT _ expression PRIGHT statement if_statement1

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 182
  literal_expression  go to state 68

state 163

 121) do_statement : DO statement _ WHILE PLEFT expression PRIGHT SEMIC

  WHILE         shift, and go to state 183


state 164

 122) while_statement : WHILE PLEFT _ expression PRIGHT statement

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 184
  literal_expression  go to state 68

state 165

  88) parameter2 : SBLEFT expression SBRIGHT parameter3 _

  $default      reduce using rule 88 (parameter2)


state 166

  90) parameter3 : parameter2 _

  $default      reduce using rule 90 (parameter3)


state 167

  29) variable_assignment : ID variable_assignment1 assign_operator _ variable_value

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  variable_value  go to state 185
  expression    go to state 186
  reference_expression2  go to state 62
  reference_expression  go to state 63
  literal_expression  go to state 68

state 168

  32) assign_operator : EQUAL _

  $default      reduce using rule 32 (assign_operator)


state 169

  33) assign_operator : PLUSASSIGN _

  $default      reduce using rule 33 (assign_operator)


state 170

  34) assign_operator : MINUSASSIGN _

  $default      reduce using rule 34 (assign_operator)


state 171

  35) assign_operator : MULTASSIGN _

  $default      reduce using rule 35 (assign_operator)


state 172

  36) assign_operator : DIVASSIGN _

  $default      reduce using rule 36 (assign_operator)


state 173

  37) assign_operator : ORASSIGN _

  $default      reduce using rule 37 (assign_operator)


state 174

  38) assign_operator : ANDASSIGN _

  $default      reduce using rule 38 (assign_operator)


state 175

  39) assign_operator : MODASSIGN _

  $default      reduce using rule 39 (assign_operator)


state 176

  31) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 31 (variable_assignment1)


state 177

  42) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 42 (variable_assignment5)


state 178

  40) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  SBRIGHT       shift, and go to state 188

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 179

  92) statement : SAY PLEFT expression _ PRIGHT SEMIC
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  PRIGHT        shift, and go to state 189

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 180

  99) statement : REPLY statement1 SEMIC _

  $default      reduce using rule 99 (statement)


state 181

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 115) unless_statement : UNLESS PLEFT expression _ PRIGHT statement unless_statement1

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  PRIGHT        shift, and go to state 190

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 182

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 118) if_statement : IF PLEFT expression _ PRIGHT statement if_statement1

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  PRIGHT        shift, and go to state 191

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 183

 121) do_statement : DO statement WHILE _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 192


state 184

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 122) while_statement : WHILE PLEFT expression _ PRIGHT statement

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  PRIGHT        shift, and go to state 193

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 185

  29) variable_assignment : ID variable_assignment1 assign_operator variable_value _

  $default      reduce using rule 29 (variable_assignment)


state 186

  65) variable_value : expression _
 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  $default      reduce using rule 65 (variable_value)

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 187

  66) variable_value : HEAR _ PLEFT PRIGHT

  PLEFT         shift, and go to state 194


state 188

  40) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 153
  SBLEFT        [reduce using rule 41 (variable_assignment5)]
  $default      reduce using rule 41 (variable_assignment5)

  variable_assignment5  go to state 195
  variable_assignment4  go to state 177

state 189

  92) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 196


state 190

 115) unless_statement : UNLESS PLEFT expression PRIGHT _ statement unless_statement1

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68
  statement     go to state 197

state 191

 118) if_statement : IF PLEFT expression PRIGHT _ statement if_statement1

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68
  statement     go to state 198

state 192

 121) do_statement : DO statement WHILE PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 64
  ID            shift, and go to state 61
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  expression    go to state 199
  literal_expression  go to state 68

state 193

 122) while_statement : WHILE PLEFT expression PRIGHT _ statement

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68
  statement     go to state 200

state 194

  66) variable_value : HEAR PLEFT _ PRIGHT

  PRIGHT        shift, and go to state 201


state 195

  40) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 40 (variable_assignment4)


state 196

  92) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 92 (statement)


state 197

 115) unless_statement : UNLESS PLEFT expression PRIGHT statement _ unless_statement1

  ELSE          shift, and go to state 203
  ELSE          [reduce using rule 116 (unless_statement1)]
  $default      reduce using rule 116 (unless_statement1)

  unless_statement1  go to state 202

state 198

 118) if_statement : IF PLEFT expression PRIGHT statement _ if_statement1

  ELSE          shift, and go to state 205
  ELSE          [reduce using rule 119 (if_statement1)]
  $default      reduce using rule 119 (if_statement1)

  if_statement1  go to state 204

state 199

 103) expression : expression _ num_operator expression
 104) expression : expression _ testing_operator expression
 106) expression : expression _ boolean_operator expression
 121) do_statement : DO statement WHILE PLEFT expression _ PRIGHT SEMIC

  MOD           shift, and go to state 77
  MULT          shift, and go to state 75
  DIV           shift, and go to state 76
  PLUS          shift, and go to state 78
  MINUS         shift, and go to state 79
  MTHAN         shift, and go to state 83
  MEQUAL        shift, and go to state 85
  LTHAN         shift, and go to state 84
  LEQUAL        shift, and go to state 86
  EQUALITY      shift, and go to state 87
  DIFFERENT     shift, and go to state 88
  AND           shift, and go to state 89
  OR            shift, and go to state 90
  PRIGHT        shift, and go to state 206

  num_operator  go to state 80
  testing_operator  go to state 81
  boolean_operator  go to state 82

state 200

 122) while_statement : WHILE PLEFT expression PRIGHT statement _

  $default      reduce using rule 122 (while_statement)


state 201

  66) variable_value : HEAR PLEFT PRIGHT _

  $default      reduce using rule 66 (variable_value)


state 202

 115) unless_statement : UNLESS PLEFT expression PRIGHT statement unless_statement1 _

  $default      reduce using rule 115 (unless_statement)


state 203

 117) unless_statement1 : ELSE _ statement

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68
  statement     go to state 207

state 204

 118) if_statement : IF PLEFT expression PRIGHT statement if_statement1 _

  $default      reduce using rule 118 (if_statement)


state 205

 120) if_statement1 : ELSE _ statement

  NOT           shift, and go to state 64
  SEMIC         shift, and go to state 144
  BLEFT         shift, and go to state 123
  ID            shift, and go to state 132
  PLEFT         shift, and go to state 67
  NULL          shift, and go to state 59
  ITSELF        shift, and go to state 60
  SAY           shift, and go to state 136
  REPLY         shift, and go to state 143
  TRUE          shift, and go to state 65
  FALSE         shift, and go to state 66
  UNLESS        shift, and go to state 145
  IF            shift, and go to state 146
  DO            shift, and go to state 147
  WHILE         shift, and go to state 148
  CTED          shift, and go to state 69
  CTEN          shift, and go to state 70
  CTESTRING     shift, and go to state 71

  reference_expression2  go to state 62
  reference_expression  go to state 63
  variable_assignment  go to state 135
  expression    go to state 137
  statement_block  go to state 138
  unless_statement  go to state 139
  if_statement  go to state 140
  do_statement  go to state 141
  while_statement  go to state 142
  literal_expression  go to state 68
  statement     go to state 208

state 206

 121) do_statement : DO statement WHILE PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 209


state 207

 117) unless_statement1 : ELSE statement _

  $default      reduce using rule 117 (unless_statement1)


state 208

 120) if_statement1 : ELSE statement _

  $default      reduce using rule 120 (if_statement1)


state 209

 121) do_statement : DO statement WHILE PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 121 (do_statement)

