state 92 contains 1 shift/reduce conflicts
state 99 contains 14 shift/reduce conflicts
state 100 contains 1 shift/reduce conflicts
state 101 contains 1 shift/reduce conflicts
state 102 contains 1 shift/reduce conflicts
state 103 contains 1 shift/reduce conflicts
state 104 contains 1 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 106 contains 1 shift/reduce conflicts
state 107 contains 1 shift/reduce conflicts
state 108 contains 1 shift/reduce conflicts
state 109 contains 1 shift/reduce conflicts
state 110 contains 1 shift/reduce conflicts
state 111 contains 1 shift/reduce conflicts
state 112 contains 1 shift/reduce conflicts
state 117 contains 2 shift/reduce conflicts
state 195 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 supreme_plox: plox_generation
rule 2 plox_generation: 
rule 3 plox_generation: type_declaration plox_generation
rule 4 type_declaration: HABEMVS class_declaration
rule 5 class_declaration: SPECIES code_new_class code_heirof BLEFT class_body BRIGHT
rule 6 code_new_class: ID
rule 7 code_heirof: 
rule 8 code_heirof: HEIROF ID
rule 9 class_body: class_variable_block class_function_block
rule 10 class_variable_block: 
rule 11 class_variable_block: variable_declaration class_variable_block
rule 12 class_function_block: 
rule 13 class_function_block: method_declaration class_function_block
rule 14 modifier: OPEN
rule 15 modifier: HIDDEN
rule 16 variable_declaration: variable_is_modifiable variable_scope type some_variables SEMIC
rule 17 variable_scope: 
rule 18 variable_scope: modifier
rule 19 variable_is_modifiable: VAR
rule 20 variable_is_modifiable: ETERNAL
rule 21 some_variables: code_new_variable next_variable
rule 22 code_new_variable: ID
rule 23 next_variable: 
rule 24 next_variable: COMA some_variables
rule 25 type: type_specifier type1
rule 26 type1: 
rule 27 type1: type2
rule 28 type2: SBLEFT expression SBRIGHT type1
rule 29 variable_assignment: ID variable_assignment1 EQUAL variable_value
rule 30 variable_assignment: ID variable_assignment1 PLUSASSIGN variable_value
rule 31 variable_assignment: ID variable_assignment1 MINUSASSIGN variable_value
rule 32 variable_assignment: ID variable_assignment1 MULTASSIGN variable_value
rule 33 variable_assignment: ID variable_assignment1 DIVASSIGN variable_value
rule 34 variable_assignment: ID variable_assignment1 ORASSIGN variable_value
rule 35 variable_assignment: ID variable_assignment1 ANDASSIGN variable_value
rule 36 variable_assignment: ID variable_assignment1 MODASSIGN variable_value
rule 37 variable_assignment1: 
rule 38 variable_assignment1: variable_assignment4 variable_assignment5
rule 39 variable_assignment4: SBLEFT expression SBRIGHT variable_assignment5
rule 40 variable_assignment5: 
rule 41 variable_assignment5: variable_assignment4
rule 42 method_declaration: new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4
rule 43 new_function_code: FUNK
rule 44 method_declaration1: 
rule 45 method_declaration1: modifier
rule 46 method_declaration2: ID
rule 47 method_declaration2: CHIEF
rule 48 method_declaration3: 
rule 49 method_declaration3: parameter_list method_declaration3
rule 50 method_declaration4: statement_block
rule 51 method_declaration4: SEMIC
rule 52 type_specifier: LOGIC
rule 53 type_specifier: CHAR
rule 54 type_specifier: NUMBER
rule 55 type_specifier: DECIMAL
rule 56 type_specifier: ID
rule 57 type_specifier: OBLIVION
rule 58 type_specifier: STRING
rule 59 variable_value: expression
rule 60 variable_value: HEAR PLEFT PRIGHT
rule 61 parameter_list: parameter parameter_list1
rule 62 parameter_list1: 
rule 63 parameter_list1: COMA parameter_list
rule 64 statement_block: BLEFT statement_block1 statement_block2 BRIGHT
rule 65 statement_block1: 
rule 66 statement_block1: variable_declaration statement_block1
rule 67 statement_block2: 
rule 68 statement_block2: statement statement_block2
rule 69 reference_expression: NULL
rule 70 reference_expression: ITSELF
rule 71 reference_expression: ID
rule 72 reference_expression: reference_expression2
rule 73 reference_expression2: reference_expression reference_expression5
rule 74 reference_expression5: PLEFT reference_expression6 PRIGHT
rule 75 reference_expression5: SBLEFT expression SBRIGHT
rule 76 reference_expression5: POINT reference_expression
rule 77 reference_expression6: 
rule 78 reference_expression6: arglist
rule 79 parameter: type ID parameter1
rule 80 parameter1: 
rule 81 parameter1: SBLEFT SBRIGHT parameter1
rule 82 statement: variable_assignment SEMIC
rule 83 statement: SAY PLEFT expression PRIGHT SEMIC
rule 84 statement: unless_statement
rule 85 statement: if_statement
rule 86 statement: do_statement
rule 87 statement: while_statement
rule 88 statement: REPLY expression SEMIC
rule 89 expression: expression SUM expression
rule 90 expression: expression DIV expression
rule 91 expression: expression MOD expression
rule 92 expression: expression PLUS expression
rule 93 expression: expression MINUS expression
rule 94 expression: expression MULT expression
rule 95 expression: expression MTHAN expression
rule 96 expression: expression LTHAN expression
rule 97 expression: expression MEQUAL expression
rule 98 expression: expression LEQUAL expression
rule 99 expression: expression EQUALITY expression
rule 100 expression: expression DIFFERENT expression
rule 101 expression: NOT expression
rule 102 expression: expression AND expression
rule 103 expression: expression OR expression
rule 104 expression: TRUE
rule 105 expression: FALSE
rule 106 expression: PLEFT expression PRIGHT
rule 107 expression: literal_expression
rule 108 expression: reference_expression
rule 109 arglist: expression arglist1
rule 110 arglist1: 
rule 111 arglist1: COMA arglist
rule 112 unless_statement: UNLESS expression statement_block unless_statement1
rule 113 unless_statement1: 
rule 114 unless_statement1: ELSE statement_block
rule 115 if_statement: IF push_if_floor validateLogicexp statement_block if_statement1
rule 116 if_statement1: 
rule 117 if_statement1: ELSIF generateElseCode validateLogicexp statement_block if_statement1
rule 118 if_statement1: ELSE generateElseCode statement_block
rule 119 do_statement: DO push_cont_jump statement_block WHILE validateDoWhileExp
rule 120 validateDoWhileExp: expression
rule 121 while_statement: WHILE push_cont_jump validateLogicexp statement_block
rule 122 push_cont_jump: 
rule 123 push_if_floor: 
rule 124 validateLogicexp: expression
rule 125 generateElseCode: 
rule 126 literal_expression: CTED
rule 127 literal_expression: CTEN
rule 128 literal_expression: CTESTRING

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (66)
    on right: 
    on left : 
  supreme_plox (67)
    on right: 
    on left : 1
  plox_generation (68)
    on right: 1 3
    on left : 2 3
  type_declaration (69)
    on right: 3
    on left : 4
  class_declaration (70)
    on right: 4
    on left : 5
  code_new_class (71)
    on right: 5
    on left : 6
  code_heirof (72)
    on right: 5
    on left : 7 8
  class_body (73)
    on right: 5
    on left : 9
  class_variable_block (74)
    on right: 9 11
    on left : 10 11
  class_function_block (75)
    on right: 9 13
    on left : 12 13
  variable_declaration (76)
    on right: 11 66
    on left : 16
  method_declaration (77)
    on right: 13
    on left : 42
  modifier (78)
    on right: 18 45
    on left : 14 15
  variable_is_modifiable (79)
    on right: 16
    on left : 19 20
  variable_scope (80)
    on right: 16
    on left : 17 18
  type (81)
    on right: 16 42 79
    on left : 25
  some_variables (82)
    on right: 16 24
    on left : 21
  code_new_variable (83)
    on right: 21
    on left : 22
  next_variable (84)
    on right: 21
    on left : 23 24
  type_specifier (85)
    on right: 25
    on left : 52 53 54 55 56 57 58
  type1 (86)
    on right: 25 28
    on left : 26 27
  type2 (87)
    on right: 27
    on left : 28
  expression (88)
    on right: 28 39 59 75 83 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 106 109 112 120 124
    on left : 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
  variable_assignment (89)
    on right: 82
    on left : 29 30 31 32 33 34 35 36
  variable_assignment1 (90)
    on right: 29 30 31 32 33 34 35 36
    on left : 37 38
  variable_value (91)
    on right: 29 30 31 32 33 34 35 36
    on left : 59 60
  variable_assignment4 (92)
    on right: 38 41
    on left : 39
  variable_assignment5 (93)
    on right: 38 39
    on left : 40 41
  new_function_code (94)
    on right: 42
    on left : 43
  method_declaration1 (95)
    on right: 42
    on left : 44 45
  method_declaration2 (96)
    on right: 42
    on left : 46 47
  method_declaration3 (97)
    on right: 42 49
    on left : 48 49
  method_declaration4 (98)
    on right: 42
    on left : 50 51
  parameter_list (99)
    on right: 49 63
    on left : 61
  statement_block (100)
    on right: 50 112 114 115 117 118 119 121
    on left : 64
  parameter (101)
    on right: 61
    on left : 79
  parameter_list1 (102)
    on right: 61
    on left : 62 63
  statement_block1 (103)
    on right: 64 66
    on left : 65 66
  statement_block2 (104)
    on right: 64 68
    on left : 67 68
  statement (105)
    on right: 68
    on left : 82 83 84 85 86 87 88
  reference_expression (106)
    on right: 73 76 108
    on left : 69 70 71 72
  reference_expression2 (107)
    on right: 72
    on left : 73
  reference_expression5 (108)
    on right: 73
    on left : 74 75 76
  reference_expression6 (109)
    on right: 74
    on left : 77 78
  arglist (110)
    on right: 78 111
    on left : 109
  parameter1 (111)
    on right: 79 81
    on left : 80 81
  unless_statement (112)
    on right: 84
    on left : 112
  if_statement (113)
    on right: 85
    on left : 115
  do_statement (114)
    on right: 86
    on left : 119
  while_statement (115)
    on right: 87
    on left : 121
  literal_expression (116)
    on right: 107
    on left : 126 127 128
  arglist1 (117)
    on right: 109
    on left : 110 111
  unless_statement1 (118)
    on right: 112
    on left : 113 114
  push_if_floor (119)
    on right: 115
    on left : 123
  validateLogicexp (120)
    on right: 115 117 121
    on left : 124
  if_statement1 (121)
    on right: 115 117
    on left : 116 117 118
  generateElseCode (122)
    on right: 117 118
    on left : 125
  push_cont_jump (123)
    on right: 119 121
    on left : 122
  validateDoWhileExp (124)
    on right: 119
    on left : 120

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  POINT (2) 76
  NOT (3) 101
  MOD (4) 91
  MULT (5) 94
  DIV (6) 90
  PLUS (7) 92
  MINUS (8) 93
  MTHAN (9) 95
  MEQUAL (10) 97
  LTHAN (11) 96
  LEQUAL (12) 98
  EQUALITY (13) 99
  DIFFERENT (14) 100
  AND (15) 102
  OR (16) 103
  EQUAL (17) 29
  PLUSASSIGN (18) 30
  MINUSASSIGN (19) 31
  MULTASSIGN (20) 32
  DIVASSIGN (21) 33
  ORASSIGN (22) 34
  ANDASSIGN (23) 35
  MODASSIGN (24) 36
  SEMIC (25) 16 51 82 83 88
  HABEMVS (26) 4
  SPECIES (27) 5
  BLEFT (28) 5 64
  BRIGHT (29) 5 64
  ID (30) 6 8 22 29 30 31 32 33 34 35 36 46 56 71 79
  HEIROF (31) 8
  OPEN (32) 14
  HIDDEN (33) 15
  VAR (34) 19
  ETERNAL (35) 20
  COMA (36) 24 63 111
  SBLEFT (37) 28 39 75 81
  SBRIGHT (38) 28 39 75 81
  PLEFT (39) 42 60 74 83 106
  PRIGHT (40) 42 60 74 83 106
  FUNK (41) 43
  CHIEF (42) 47
  LOGIC (43) 52
  CHAR (44) 53
  NUMBER (45) 54
  DECIMAL (46) 55
  OBLIVION (47) 57
  STRING (48) 58
  HEAR (49) 60
  NULL (50) 69
  ITSELF (51) 70
  SAY (52) 83
  REPLY (53) 88
  SUM (54) 89
  TRUE (55) 104
  FALSE (56) 105
  UNLESS (57) 112
  ELSE (58) 114 118
  IF (59) 115
  ELSIF (60) 117
  DO (61) 119
  WHILE (62) 119 121
  CTED (63) 126
  CTEN (64) 127
  CTESTRING (65) 128

--------- State ---------

state 0


  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  supreme_plox  go to state 1
  plox_generation  go to state 2
  type_declaration  go to state 3

state 1


  $end          shift, and go to state 5


state 2

   1) supreme_plox : plox_generation _

  $default      reduce using rule 1 (supreme_plox)


state 3

   3) plox_generation : type_declaration _ plox_generation

  HABEMVS       shift, and go to state 4
  $default      reduce using rule 2 (plox_generation)

  type_declaration  go to state 3
  plox_generation  go to state 6

state 4

   4) type_declaration : HABEMVS _ class_declaration

  SPECIES       shift, and go to state 8

  class_declaration  go to state 7

state 5


  $end          shift, and go to state 9


state 6

   3) plox_generation : type_declaration plox_generation _

  $default      reduce using rule 3 (plox_generation)


state 7

   4) type_declaration : HABEMVS class_declaration _

  $default      reduce using rule 4 (type_declaration)


state 8

   5) class_declaration : SPECIES _ code_new_class code_heirof BLEFT class_body BRIGHT

  ID            shift, and go to state 11

  code_new_class  go to state 10

state 9


  $default      accept


state 10

   5) class_declaration : SPECIES code_new_class _ code_heirof BLEFT class_body BRIGHT

  HEIROF        shift, and go to state 13
  $default      reduce using rule 7 (code_heirof)

  code_heirof   go to state 12

state 11

   6) code_new_class : ID _

  $default      reduce using rule 6 (code_new_class)


state 12

   5) class_declaration : SPECIES code_new_class code_heirof _ BLEFT class_body BRIGHT

  BLEFT         shift, and go to state 14


state 13

   8) code_heirof : HEIROF _ ID

  ID            shift, and go to state 15


state 14

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT _ class_body BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  class_body    go to state 16
  class_variable_block  go to state 17
  variable_declaration  go to state 18
  variable_is_modifiable  go to state 19

state 15

   8) code_heirof : HEIROF ID _

  $default      reduce using rule 8 (code_heirof)


state 16

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body _ BRIGHT

  BRIGHT        shift, and go to state 22


state 17

   9) class_body : class_variable_block _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  class_function_block  go to state 23
  method_declaration  go to state 24
  new_function_code  go to state 25

state 18

  11) class_variable_block : variable_declaration _ class_variable_block

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 10 (class_variable_block)

  variable_declaration  go to state 18
  class_variable_block  go to state 27
  variable_is_modifiable  go to state 19

state 19

  16) variable_declaration : variable_is_modifiable _ variable_scope type some_variables SEMIC

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 17 (variable_scope)

  variable_scope  go to state 30
  modifier      go to state 31

state 20

  19) variable_is_modifiable : VAR _

  $default      reduce using rule 19 (variable_is_modifiable)


state 21

  20) variable_is_modifiable : ETERNAL _

  $default      reduce using rule 20 (variable_is_modifiable)


state 22

   5) class_declaration : SPECIES code_new_class code_heirof BLEFT class_body BRIGHT _

  $default      reduce using rule 5 (class_declaration)


state 23

   9) class_body : class_variable_block class_function_block _

  $default      reduce using rule 9 (class_body)


state 24

  13) class_function_block : method_declaration _ class_function_block

  FUNK          shift, and go to state 26
  $default      reduce using rule 12 (class_function_block)

  method_declaration  go to state 24
  class_function_block  go to state 32
  new_function_code  go to state 25

state 25

  42) method_declaration : new_function_code _ method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  OPEN          shift, and go to state 28
  HIDDEN        shift, and go to state 29
  $default      reduce using rule 44 (method_declaration1)

  method_declaration1  go to state 33
  modifier      go to state 34

state 26

  43) new_function_code : FUNK _

  $default      reduce using rule 43 (new_function_code)


state 27

  11) class_variable_block : variable_declaration class_variable_block _

  $default      reduce using rule 11 (class_variable_block)


state 28

  14) modifier : OPEN _

  $default      reduce using rule 14 (modifier)


state 29

  15) modifier : HIDDEN _

  $default      reduce using rule 15 (modifier)


state 30

  16) variable_declaration : variable_is_modifiable variable_scope _ type some_variables SEMIC

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type          go to state 35
  type_specifier  go to state 36

state 31

  18) variable_scope : modifier _

  $default      reduce using rule 18 (variable_scope)


state 32

  13) class_function_block : method_declaration class_function_block _

  $default      reduce using rule 13 (class_function_block)


state 33

  42) method_declaration : new_function_code method_declaration1 _ type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  type          go to state 44

state 34

  45) method_declaration1 : modifier _

  $default      reduce using rule 45 (method_declaration1)


state 35

  16) variable_declaration : variable_is_modifiable variable_scope type _ some_variables SEMIC

  ID            shift, and go to state 47

  some_variables  go to state 45
  code_new_variable  go to state 46

state 36

  25) type : type_specifier _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type1         go to state 48
  type2         go to state 49

state 37

  52) type_specifier : LOGIC _

  $default      reduce using rule 52 (type_specifier)


state 38

  53) type_specifier : CHAR _

  $default      reduce using rule 53 (type_specifier)


state 39

  54) type_specifier : NUMBER _

  $default      reduce using rule 54 (type_specifier)


state 40

  55) type_specifier : DECIMAL _

  $default      reduce using rule 55 (type_specifier)


state 41

  56) type_specifier : ID _

  $default      reduce using rule 56 (type_specifier)


state 42

  57) type_specifier : OBLIVION _

  $default      reduce using rule 57 (type_specifier)


state 43

  58) type_specifier : STRING _

  $default      reduce using rule 58 (type_specifier)


state 44

  42) method_declaration : new_function_code method_declaration1 type _ method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 52
  CHIEF         shift, and go to state 53

  method_declaration2  go to state 51

state 45

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables _ SEMIC

  SEMIC         shift, and go to state 54


state 46

  21) some_variables : code_new_variable _ next_variable

  COMA          shift, and go to state 56
  $default      reduce using rule 23 (next_variable)

  next_variable  go to state 55

state 47

  22) code_new_variable : ID _

  $default      reduce using rule 22 (code_new_variable)


state 48

  25) type : type_specifier type1 _

  $default      reduce using rule 25 (type)


state 49

  27) type1 : type2 _

  $default      reduce using rule 27 (type1)


state 50

  28) type2 : SBLEFT _ expression SBRIGHT type1

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  expression    go to state 57
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 51

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 _ PLEFT method_declaration3 PRIGHT method_declaration4

  PLEFT         shift, and go to state 71


state 52

  46) method_declaration2 : ID _

  $default      reduce using rule 46 (method_declaration2)


state 53

  47) method_declaration2 : CHIEF _

  $default      reduce using rule 47 (method_declaration2)


state 54

  16) variable_declaration : variable_is_modifiable variable_scope type some_variables SEMIC _

  $default      reduce using rule 16 (variable_declaration)


state 55

  21) some_variables : code_new_variable next_variable _

  $default      reduce using rule 21 (some_variables)


state 56

  24) next_variable : COMA _ some_variables

  ID            shift, and go to state 47

  code_new_variable  go to state 46
  some_variables  go to state 72

state 57

  28) type2 : SBLEFT expression _ SBRIGHT type1
  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SBRIGHT       shift, and go to state 73
  SUM           shift, and go to state 74


state 58

  69) reference_expression : NULL _

  $default      reduce using rule 69 (reference_expression)


state 59

  70) reference_expression : ITSELF _

  $default      reduce using rule 70 (reference_expression)


state 60

  71) reference_expression : ID _

  $default      reduce using rule 71 (reference_expression)


state 61

  72) reference_expression : reference_expression2 _

  $default      reduce using rule 72 (reference_expression)


state 62

  73) reference_expression2 : reference_expression _ reference_expression5
 108) expression : reference_expression _

  POINT         shift, and go to state 91
  SBLEFT        shift, and go to state 90
  PLEFT         shift, and go to state 89
  $default      reduce using rule 108 (expression)

  reference_expression5  go to state 88

state 63

 101) expression : NOT _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 92
  literal_expression  go to state 67

state 64

 104) expression : TRUE _

  $default      reduce using rule 104 (expression)


state 65

 105) expression : FALSE _

  $default      reduce using rule 105 (expression)


state 66

 106) expression : PLEFT _ expression PRIGHT

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 93
  literal_expression  go to state 67

state 67

 107) expression : literal_expression _

  $default      reduce using rule 107 (expression)


state 68

 126) literal_expression : CTED _

  $default      reduce using rule 126 (literal_expression)


state 69

 127) literal_expression : CTEN _

  $default      reduce using rule 127 (literal_expression)


state 70

 128) literal_expression : CTESTRING _

  $default      reduce using rule 128 (literal_expression)


state 71

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT _ method_declaration3 PRIGHT method_declaration4

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  method_declaration3  go to state 94
  parameter_list  go to state 95
  parameter     go to state 96
  type          go to state 97

state 72

  24) next_variable : COMA some_variables _

  $default      reduce using rule 24 (next_variable)


state 73

  28) type2 : SBLEFT expression SBRIGHT _ type1

  SBLEFT        shift, and go to state 50
  $default      reduce using rule 26 (type1)

  type2         go to state 49
  type1         go to state 98

state 74

  89) expression : expression SUM _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 99
  literal_expression  go to state 67

state 75

  90) expression : expression DIV _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 100
  literal_expression  go to state 67

state 76

  91) expression : expression MOD _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 101
  literal_expression  go to state 67

state 77

  92) expression : expression PLUS _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 102
  literal_expression  go to state 67

state 78

  93) expression : expression MINUS _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 103
  literal_expression  go to state 67

state 79

  94) expression : expression MULT _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 104
  literal_expression  go to state 67

state 80

  95) expression : expression MTHAN _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 105
  literal_expression  go to state 67

state 81

  96) expression : expression LTHAN _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 106
  literal_expression  go to state 67

state 82

  97) expression : expression MEQUAL _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 107
  literal_expression  go to state 67

state 83

  98) expression : expression LEQUAL _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 108
  literal_expression  go to state 67

state 84

  99) expression : expression EQUALITY _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 109
  literal_expression  go to state 67

state 85

 100) expression : expression DIFFERENT _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 110
  literal_expression  go to state 67

state 86

 102) expression : expression AND _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 111
  literal_expression  go to state 67

state 87

 103) expression : expression OR _ expression

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 112
  literal_expression  go to state 67

state 88

  73) reference_expression2 : reference_expression reference_expression5 _

  $default      reduce using rule 73 (reference_expression2)


state 89

  74) reference_expression5 : PLEFT _ reference_expression6 PRIGHT

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70
  $default      reduce using rule 77 (reference_expression6)

  reference_expression2  go to state 61
  reference_expression  go to state 62
  reference_expression6  go to state 113
  arglist       go to state 114
  expression    go to state 115
  literal_expression  go to state 67

state 90

  75) reference_expression5 : SBLEFT _ expression SBRIGHT

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 116
  literal_expression  go to state 67

state 91

  76) reference_expression5 : POINT _ reference_expression

  ID            shift, and go to state 60
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59

  reference_expression2  go to state 61
  reference_expression  go to state 117

state 92

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 101) expression : NOT expression _
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  SUM           shift, and go to state 74
  SUM           [reduce using rule 101 (expression)]
  $default      reduce using rule 101 (expression)


state 93

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression
 106) expression : PLEFT expression _ PRIGHT

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  PRIGHT        shift, and go to state 118
  SUM           shift, and go to state 74


state 94

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 _ PRIGHT method_declaration4

  PRIGHT        shift, and go to state 119


state 95

  49) method_declaration3 : parameter_list _ method_declaration3

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43
  $default      reduce using rule 48 (method_declaration3)

  type_specifier  go to state 36
  parameter_list  go to state 95
  method_declaration3  go to state 120
  parameter     go to state 96
  type          go to state 97

state 96

  61) parameter_list : parameter _ parameter_list1

  COMA          shift, and go to state 122
  $default      reduce using rule 62 (parameter_list1)

  parameter_list1  go to state 121

state 97

  79) parameter : type _ ID parameter1

  ID            shift, and go to state 123


state 98

  28) type2 : SBLEFT expression SBRIGHT type1 _

  $default      reduce using rule 28 (type2)


state 99

  89) expression : expression _ SUM expression
  89) expression : expression SUM expression _
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MOD           [reduce using rule 89 (expression)]
  MULT          shift, and go to state 79
  MULT          [reduce using rule 89 (expression)]
  DIV           shift, and go to state 75
  DIV           [reduce using rule 89 (expression)]
  PLUS          shift, and go to state 77
  PLUS          [reduce using rule 89 (expression)]
  MINUS         shift, and go to state 78
  MINUS         [reduce using rule 89 (expression)]
  MTHAN         shift, and go to state 80
  MTHAN         [reduce using rule 89 (expression)]
  MEQUAL        shift, and go to state 82
  MEQUAL        [reduce using rule 89 (expression)]
  LTHAN         shift, and go to state 81
  LTHAN         [reduce using rule 89 (expression)]
  LEQUAL        shift, and go to state 83
  LEQUAL        [reduce using rule 89 (expression)]
  EQUALITY      shift, and go to state 84
  EQUALITY      [reduce using rule 89 (expression)]
  DIFFERENT     shift, and go to state 85
  DIFFERENT     [reduce using rule 89 (expression)]
  AND           shift, and go to state 86
  AND           [reduce using rule 89 (expression)]
  OR            shift, and go to state 87
  OR            [reduce using rule 89 (expression)]
  SUM           shift, and go to state 74
  SUM           [reduce using rule 89 (expression)]
  $default      reduce using rule 89 (expression)


state 100

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  90) expression : expression DIV expression _
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  SUM           shift, and go to state 74
  SUM           [reduce using rule 90 (expression)]
  $default      reduce using rule 90 (expression)


state 101

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  91) expression : expression MOD expression _
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  SUM           shift, and go to state 74
  SUM           [reduce using rule 91 (expression)]
  $default      reduce using rule 91 (expression)


state 102

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  92) expression : expression PLUS expression _
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  SUM           shift, and go to state 74
  SUM           [reduce using rule 92 (expression)]
  $default      reduce using rule 92 (expression)


state 103

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  93) expression : expression MINUS expression _
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  SUM           shift, and go to state 74
  SUM           [reduce using rule 93 (expression)]
  $default      reduce using rule 93 (expression)


state 104

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  94) expression : expression MULT expression _
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  SUM           shift, and go to state 74
  SUM           [reduce using rule 94 (expression)]
  $default      reduce using rule 94 (expression)


state 105

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  95) expression : expression MTHAN expression _
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 95 (expression)]
  $default      reduce using rule 95 (expression)


state 106

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  96) expression : expression LTHAN expression _
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 96 (expression)]
  $default      reduce using rule 96 (expression)


state 107

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  97) expression : expression MEQUAL expression _
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 97 (expression)]
  $default      reduce using rule 97 (expression)


state 108

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  98) expression : expression LEQUAL expression _
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 98 (expression)]
  $default      reduce using rule 98 (expression)


state 109

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
  99) expression : expression EQUALITY expression _
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 99 (expression)]
  $default      reduce using rule 99 (expression)


state 110

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 100) expression : expression DIFFERENT expression _
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  SUM           shift, and go to state 74
  SUM           [reduce using rule 100 (expression)]
  $default      reduce using rule 100 (expression)


state 111

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 102) expression : expression AND expression _
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  SUM           shift, and go to state 74
  SUM           [reduce using rule 102 (expression)]
  $default      reduce using rule 102 (expression)


state 112

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression
 103) expression : expression OR expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  SUM           shift, and go to state 74
  SUM           [reduce using rule 103 (expression)]
  $default      reduce using rule 103 (expression)


state 113

  74) reference_expression5 : PLEFT reference_expression6 _ PRIGHT

  PRIGHT        shift, and go to state 124


state 114

  78) reference_expression6 : arglist _

  $default      reduce using rule 78 (reference_expression6)


state 115

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression
 109) arglist : expression _ arglist1

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  COMA          shift, and go to state 126
  SUM           shift, and go to state 74
  $default      reduce using rule 110 (arglist1)

  arglist1      go to state 125

state 116

  75) reference_expression5 : SBLEFT expression _ SBRIGHT
  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SBRIGHT       shift, and go to state 127
  SUM           shift, and go to state 74


state 117

  73) reference_expression2 : reference_expression _ reference_expression5
  76) reference_expression5 : POINT reference_expression _

  POINT         shift, and go to state 91
  SBLEFT        shift, and go to state 90
  SBLEFT        [reduce using rule 76 (reference_expression5)]
  PLEFT         shift, and go to state 89
  PLEFT         [reduce using rule 76 (reference_expression5)]
  $default      reduce using rule 76 (reference_expression5)

  reference_expression5  go to state 88

state 118

 106) expression : PLEFT expression PRIGHT _

  $default      reduce using rule 106 (expression)


state 119

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT _ method_declaration4

  SEMIC         shift, and go to state 130
  BLEFT         shift, and go to state 131

  method_declaration4  go to state 128
  statement_block  go to state 129

state 120

  49) method_declaration3 : parameter_list method_declaration3 _

  $default      reduce using rule 49 (method_declaration3)


state 121

  61) parameter_list : parameter parameter_list1 _

  $default      reduce using rule 61 (parameter_list)


state 122

  63) parameter_list1 : COMA _ parameter_list

  ID            shift, and go to state 41
  LOGIC         shift, and go to state 37
  CHAR          shift, and go to state 38
  NUMBER        shift, and go to state 39
  DECIMAL       shift, and go to state 40
  OBLIVION      shift, and go to state 42
  STRING        shift, and go to state 43

  type_specifier  go to state 36
  parameter     go to state 96
  parameter_list  go to state 132
  type          go to state 97

state 123

  79) parameter : type ID _ parameter1

  SBLEFT        shift, and go to state 134
  $default      reduce using rule 80 (parameter1)

  parameter1    go to state 133

state 124

  74) reference_expression5 : PLEFT reference_expression6 PRIGHT _

  $default      reduce using rule 74 (reference_expression5)


state 125

 109) arglist : expression arglist1 _

  $default      reduce using rule 109 (arglist)


state 126

 111) arglist1 : COMA _ arglist

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 115
  literal_expression  go to state 67
  arglist       go to state 135

state 127

  75) reference_expression5 : SBLEFT expression SBRIGHT _

  $default      reduce using rule 75 (reference_expression5)


state 128

  42) method_declaration : new_function_code method_declaration1 type method_declaration2 PLEFT method_declaration3 PRIGHT method_declaration4 _

  $default      reduce using rule 42 (method_declaration)


state 129

  50) method_declaration4 : statement_block _

  $default      reduce using rule 50 (method_declaration4)


state 130

  51) method_declaration4 : SEMIC _

  $default      reduce using rule 51 (method_declaration4)


state 131

  64) statement_block : BLEFT _ statement_block1 statement_block2 BRIGHT

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 19
  statement_block1  go to state 136
  variable_declaration  go to state 137

state 132

  63) parameter_list1 : COMA parameter_list _

  $default      reduce using rule 63 (parameter_list1)


state 133

  79) parameter : type ID parameter1 _

  $default      reduce using rule 79 (parameter)


state 134

  81) parameter1 : SBLEFT _ SBRIGHT parameter1

  SBRIGHT       shift, and go to state 138


state 135

 111) arglist1 : COMA arglist _

  $default      reduce using rule 111 (arglist1)


state 136

  64) statement_block : BLEFT statement_block1 _ statement_block2 BRIGHT

  ID            shift, and go to state 139
  SAY           shift, and go to state 143
  REPLY         shift, and go to state 148
  UNLESS        shift, and go to state 149
  IF            shift, and go to state 150
  DO            shift, and go to state 151
  WHILE         shift, and go to state 152
  $default      reduce using rule 67 (statement_block2)

  statement_block2  go to state 140
  statement     go to state 141
  variable_assignment  go to state 142
  unless_statement  go to state 144
  if_statement  go to state 145
  do_statement  go to state 146
  while_statement  go to state 147

state 137

  66) statement_block1 : variable_declaration _ statement_block1

  VAR           shift, and go to state 20
  ETERNAL       shift, and go to state 21
  $default      reduce using rule 65 (statement_block1)

  variable_is_modifiable  go to state 19
  variable_declaration  go to state 137
  statement_block1  go to state 153

state 138

  81) parameter1 : SBLEFT SBRIGHT _ parameter1

  SBLEFT        shift, and go to state 134
  $default      reduce using rule 80 (parameter1)

  parameter1    go to state 154

state 139

  29) variable_assignment : ID _ variable_assignment1 EQUAL variable_value
  30) variable_assignment : ID _ variable_assignment1 PLUSASSIGN variable_value
  31) variable_assignment : ID _ variable_assignment1 MINUSASSIGN variable_value
  32) variable_assignment : ID _ variable_assignment1 MULTASSIGN variable_value
  33) variable_assignment : ID _ variable_assignment1 DIVASSIGN variable_value
  34) variable_assignment : ID _ variable_assignment1 ORASSIGN variable_value
  35) variable_assignment : ID _ variable_assignment1 ANDASSIGN variable_value
  36) variable_assignment : ID _ variable_assignment1 MODASSIGN variable_value

  SBLEFT        shift, and go to state 157
  $default      reduce using rule 37 (variable_assignment1)

  variable_assignment1  go to state 155
  variable_assignment4  go to state 156

state 140

  64) statement_block : BLEFT statement_block1 statement_block2 _ BRIGHT

  BRIGHT        shift, and go to state 158


state 141

  68) statement_block2 : statement _ statement_block2

  ID            shift, and go to state 139
  SAY           shift, and go to state 143
  REPLY         shift, and go to state 148
  UNLESS        shift, and go to state 149
  IF            shift, and go to state 150
  DO            shift, and go to state 151
  WHILE         shift, and go to state 152
  $default      reduce using rule 67 (statement_block2)

  statement     go to state 141
  statement_block2  go to state 159
  variable_assignment  go to state 142
  unless_statement  go to state 144
  if_statement  go to state 145
  do_statement  go to state 146
  while_statement  go to state 147

state 142

  82) statement : variable_assignment _ SEMIC

  SEMIC         shift, and go to state 160


state 143

  83) statement : SAY _ PLEFT expression PRIGHT SEMIC

  PLEFT         shift, and go to state 161


state 144

  84) statement : unless_statement _

  $default      reduce using rule 84 (statement)


state 145

  85) statement : if_statement _

  $default      reduce using rule 85 (statement)


state 146

  86) statement : do_statement _

  $default      reduce using rule 86 (statement)


state 147

  87) statement : while_statement _

  $default      reduce using rule 87 (statement)


state 148

  88) statement : REPLY _ expression SEMIC

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 162
  literal_expression  go to state 67

state 149

 112) unless_statement : UNLESS _ expression statement_block unless_statement1

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 163
  literal_expression  go to state 67

state 150

 115) if_statement : IF _ push_if_floor validateLogicexp statement_block if_statement1

  $default      reduce using rule 123 (push_if_floor)

  push_if_floor  go to state 164

state 151

 119) do_statement : DO _ push_cont_jump statement_block WHILE validateDoWhileExp

  $default      reduce using rule 122 (push_cont_jump)

  push_cont_jump  go to state 165

state 152

 121) while_statement : WHILE _ push_cont_jump validateLogicexp statement_block

  $default      reduce using rule 122 (push_cont_jump)

  push_cont_jump  go to state 166

state 153

  66) statement_block1 : variable_declaration statement_block1 _

  $default      reduce using rule 66 (statement_block1)


state 154

  81) parameter1 : SBLEFT SBRIGHT parameter1 _

  $default      reduce using rule 81 (parameter1)


state 155

  29) variable_assignment : ID variable_assignment1 _ EQUAL variable_value
  30) variable_assignment : ID variable_assignment1 _ PLUSASSIGN variable_value
  31) variable_assignment : ID variable_assignment1 _ MINUSASSIGN variable_value
  32) variable_assignment : ID variable_assignment1 _ MULTASSIGN variable_value
  33) variable_assignment : ID variable_assignment1 _ DIVASSIGN variable_value
  34) variable_assignment : ID variable_assignment1 _ ORASSIGN variable_value
  35) variable_assignment : ID variable_assignment1 _ ANDASSIGN variable_value
  36) variable_assignment : ID variable_assignment1 _ MODASSIGN variable_value

  EQUAL         shift, and go to state 167
  PLUSASSIGN    shift, and go to state 168
  MINUSASSIGN   shift, and go to state 169
  MULTASSIGN    shift, and go to state 170
  DIVASSIGN     shift, and go to state 171
  ORASSIGN      shift, and go to state 172
  ANDASSIGN     shift, and go to state 173
  MODASSIGN     shift, and go to state 174


state 156

  38) variable_assignment1 : variable_assignment4 _ variable_assignment5

  SBLEFT        shift, and go to state 157
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 175
  variable_assignment4  go to state 176

state 157

  39) variable_assignment4 : SBLEFT _ expression SBRIGHT variable_assignment5

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  expression    go to state 177
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 158

  64) statement_block : BLEFT statement_block1 statement_block2 BRIGHT _

  $default      reduce using rule 64 (statement_block)


state 159

  68) statement_block2 : statement statement_block2 _

  $default      reduce using rule 68 (statement_block2)


state 160

  82) statement : variable_assignment SEMIC _

  $default      reduce using rule 82 (statement)


state 161

  83) statement : SAY PLEFT _ expression PRIGHT SEMIC

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 178
  literal_expression  go to state 67

state 162

  88) statement : REPLY expression _ SEMIC
  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SEMIC         shift, and go to state 179
  SUM           shift, and go to state 74


state 163

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression
 112) unless_statement : UNLESS expression _ statement_block unless_statement1

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  BLEFT         shift, and go to state 131
  SUM           shift, and go to state 74

  statement_block  go to state 180

state 164

 115) if_statement : IF push_if_floor _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 181
  literal_expression  go to state 67
  validateLogicexp  go to state 182

state 165

 119) do_statement : DO push_cont_jump _ statement_block WHILE validateDoWhileExp

  BLEFT         shift, and go to state 131

  statement_block  go to state 183

state 166

 121) while_statement : WHILE push_cont_jump _ validateLogicexp statement_block

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 181
  literal_expression  go to state 67
  validateLogicexp  go to state 184

state 167

  29) variable_assignment : ID variable_assignment1 EQUAL _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 185
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 168

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 188
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 169

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 189
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 170

  32) variable_assignment : ID variable_assignment1 MULTASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 190
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 171

  33) variable_assignment : ID variable_assignment1 DIVASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 191
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 172

  34) variable_assignment : ID variable_assignment1 ORASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 192
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 173

  35) variable_assignment : ID variable_assignment1 ANDASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 193
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 174

  36) variable_assignment : ID variable_assignment1 MODASSIGN _ variable_value

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  HEAR          shift, and go to state 187
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  variable_value  go to state 194
  expression    go to state 186
  reference_expression2  go to state 61
  reference_expression  go to state 62
  literal_expression  go to state 67

state 175

  38) variable_assignment1 : variable_assignment4 variable_assignment5 _

  $default      reduce using rule 38 (variable_assignment1)


state 176

  41) variable_assignment5 : variable_assignment4 _

  $default      reduce using rule 41 (variable_assignment5)


state 177

  39) variable_assignment4 : SBLEFT expression _ SBRIGHT variable_assignment5
  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SBRIGHT       shift, and go to state 195
  SUM           shift, and go to state 74


state 178

  83) statement : SAY PLEFT expression _ PRIGHT SEMIC
  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  PRIGHT        shift, and go to state 196
  SUM           shift, and go to state 74


state 179

  88) statement : REPLY expression SEMIC _

  $default      reduce using rule 88 (statement)


state 180

 112) unless_statement : UNLESS expression statement_block _ unless_statement1

  ELSE          shift, and go to state 198
  $default      reduce using rule 113 (unless_statement1)

  unless_statement1  go to state 197

state 181

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression
 124) validateLogicexp : expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 124 (validateLogicexp)


state 182

 115) if_statement : IF push_if_floor validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 131

  statement_block  go to state 199

state 183

 119) do_statement : DO push_cont_jump statement_block _ WHILE validateDoWhileExp

  WHILE         shift, and go to state 200


state 184

 121) while_statement : WHILE push_cont_jump validateLogicexp _ statement_block

  BLEFT         shift, and go to state 131

  statement_block  go to state 201

state 185

  29) variable_assignment : ID variable_assignment1 EQUAL variable_value _

  $default      reduce using rule 29 (variable_assignment)


state 186

  59) variable_value : expression _
  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 59 (variable_value)


state 187

  60) variable_value : HEAR _ PLEFT PRIGHT

  PLEFT         shift, and go to state 202


state 188

  30) variable_assignment : ID variable_assignment1 PLUSASSIGN variable_value _

  $default      reduce using rule 30 (variable_assignment)


state 189

  31) variable_assignment : ID variable_assignment1 MINUSASSIGN variable_value _

  $default      reduce using rule 31 (variable_assignment)


state 190

  32) variable_assignment : ID variable_assignment1 MULTASSIGN variable_value _

  $default      reduce using rule 32 (variable_assignment)


state 191

  33) variable_assignment : ID variable_assignment1 DIVASSIGN variable_value _

  $default      reduce using rule 33 (variable_assignment)


state 192

  34) variable_assignment : ID variable_assignment1 ORASSIGN variable_value _

  $default      reduce using rule 34 (variable_assignment)


state 193

  35) variable_assignment : ID variable_assignment1 ANDASSIGN variable_value _

  $default      reduce using rule 35 (variable_assignment)


state 194

  36) variable_assignment : ID variable_assignment1 MODASSIGN variable_value _

  $default      reduce using rule 36 (variable_assignment)


state 195

  39) variable_assignment4 : SBLEFT expression SBRIGHT _ variable_assignment5

  SBLEFT        shift, and go to state 157
  SBLEFT        [reduce using rule 40 (variable_assignment5)]
  $default      reduce using rule 40 (variable_assignment5)

  variable_assignment5  go to state 203
  variable_assignment4  go to state 176

state 196

  83) statement : SAY PLEFT expression PRIGHT _ SEMIC

  SEMIC         shift, and go to state 204


state 197

 112) unless_statement : UNLESS expression statement_block unless_statement1 _

  $default      reduce using rule 112 (unless_statement)


state 198

 114) unless_statement1 : ELSE _ statement_block

  BLEFT         shift, and go to state 131

  statement_block  go to state 205

state 199

 115) if_statement : IF push_if_floor validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 208
  ELSIF         shift, and go to state 207
  $default      reduce using rule 116 (if_statement1)

  if_statement1  go to state 206

state 200

 119) do_statement : DO push_cont_jump statement_block WHILE _ validateDoWhileExp

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 209
  literal_expression  go to state 67
  validateDoWhileExp  go to state 210

state 201

 121) while_statement : WHILE push_cont_jump validateLogicexp statement_block _

  $default      reduce using rule 121 (while_statement)


state 202

  60) variable_value : HEAR PLEFT _ PRIGHT

  PRIGHT        shift, and go to state 211


state 203

  39) variable_assignment4 : SBLEFT expression SBRIGHT variable_assignment5 _

  $default      reduce using rule 39 (variable_assignment4)


state 204

  83) statement : SAY PLEFT expression PRIGHT SEMIC _

  $default      reduce using rule 83 (statement)


state 205

 114) unless_statement1 : ELSE statement_block _

  $default      reduce using rule 114 (unless_statement1)


state 206

 115) if_statement : IF push_if_floor validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 115 (if_statement)


state 207

 117) if_statement1 : ELSIF _ generateElseCode validateLogicexp statement_block if_statement1

  $default      reduce using rule 125 (generateElseCode)

  generateElseCode  go to state 212

state 208

 118) if_statement1 : ELSE _ generateElseCode statement_block

  $default      reduce using rule 125 (generateElseCode)

  generateElseCode  go to state 213

state 209

  89) expression : expression _ SUM expression
  90) expression : expression _ DIV expression
  91) expression : expression _ MOD expression
  92) expression : expression _ PLUS expression
  93) expression : expression _ MINUS expression
  94) expression : expression _ MULT expression
  95) expression : expression _ MTHAN expression
  96) expression : expression _ LTHAN expression
  97) expression : expression _ MEQUAL expression
  98) expression : expression _ LEQUAL expression
  99) expression : expression _ EQUALITY expression
 100) expression : expression _ DIFFERENT expression
 102) expression : expression _ AND expression
 103) expression : expression _ OR expression
 120) validateDoWhileExp : expression _

  MOD           shift, and go to state 76
  MULT          shift, and go to state 79
  DIV           shift, and go to state 75
  PLUS          shift, and go to state 77
  MINUS         shift, and go to state 78
  MTHAN         shift, and go to state 80
  MEQUAL        shift, and go to state 82
  LTHAN         shift, and go to state 81
  LEQUAL        shift, and go to state 83
  EQUALITY      shift, and go to state 84
  DIFFERENT     shift, and go to state 85
  AND           shift, and go to state 86
  OR            shift, and go to state 87
  SUM           shift, and go to state 74
  $default      reduce using rule 120 (validateDoWhileExp)


state 210

 119) do_statement : DO push_cont_jump statement_block WHILE validateDoWhileExp _

  $default      reduce using rule 119 (do_statement)


state 211

  60) variable_value : HEAR PLEFT PRIGHT _

  $default      reduce using rule 60 (variable_value)


state 212

 117) if_statement1 : ELSIF generateElseCode _ validateLogicexp statement_block if_statement1

  NOT           shift, and go to state 63
  ID            shift, and go to state 60
  PLEFT         shift, and go to state 66
  NULL          shift, and go to state 58
  ITSELF        shift, and go to state 59
  TRUE          shift, and go to state 64
  FALSE         shift, and go to state 65
  CTED          shift, and go to state 68
  CTEN          shift, and go to state 69
  CTESTRING     shift, and go to state 70

  reference_expression2  go to state 61
  reference_expression  go to state 62
  expression    go to state 181
  literal_expression  go to state 67
  validateLogicexp  go to state 214

state 213

 118) if_statement1 : ELSE generateElseCode _ statement_block

  BLEFT         shift, and go to state 131

  statement_block  go to state 215

state 214

 117) if_statement1 : ELSIF generateElseCode validateLogicexp _ statement_block if_statement1

  BLEFT         shift, and go to state 131

  statement_block  go to state 216

state 215

 118) if_statement1 : ELSE generateElseCode statement_block _

  $default      reduce using rule 118 (if_statement1)


state 216

 117) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block _ if_statement1

  ELSE          shift, and go to state 208
  ELSIF         shift, and go to state 207
  $default      reduce using rule 116 (if_statement1)

  if_statement1  go to state 217

state 217

 117) if_statement1 : ELSIF generateElseCode validateLogicexp statement_block if_statement1 _

  $default      reduce using rule 117 (if_statement1)

